{"version":3,"sources":["webpack://js_project_skeleton/./node_modules/three/build/three.module.js","webpack://js_project_skeleton/./src/index.js"],"names":["AddEquation","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","LinearFilter","LinearMipmapLinearFilter","UnsignedShortType","UnsignedIntType","FloatType","HalfFloatType","UnsignedInt248Type","RGBFormat","RGBAFormat","DepthFormat","DepthStencilFormat","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","LinearEncoding","KeepStencilOp","StaticDrawUsage","DynamicDrawUsage","GLSL3","EventDispatcher","type","listener","undefined","this","_listeners","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","value","min","max","lerp","x","y","t","isPowerOfTwo","floorPowerOfTwo","pow","floor","log","LN2","Vector2","scalar","Error","constructor","v","w","console","warn","addVectors","s","a","b","subVectors","multiplyScalar","m","e","elements","minVal","maxVal","divideScalar","ceil","round","sqrt","abs","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","angle","c","cos","sin","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","set","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","_canvas","isMatrix3","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","UnsignedByteType","anisotropy","encoding","super","Object","defineProperty","uuid","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","HTMLImageElement","ImageBitmap","getDataURL","data","isTexture","Vector4","z","q","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","count","il","isWebGLMultipleRenderTargets","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","euler","update","isEuler","order","_order","c1","c2","c3","s1","s2","s3","axis","halfAngle","trace","vFrom","vTo","dot","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","n","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","toJSON","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","instanceColor","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","_vector1","_vector2$1","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","addScaledVector","i0","i1","i2","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Uint16BufferAttribute","Uint16Array","Uint32BufferAttribute","Uint32Array","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","arrayMax","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Float64Array","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","Infinity","materialIndex","needsUpdate","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","morphInfluences","influence","boneTransform","intersect","intersectTriangle","checkIntersection","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","removeEventListener","cubemap","fromEquirectangularTexture","addEventListener","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","hasEventListener","physical","transmissionSamplerSize","transmissionSamplerMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","intersectsObject","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","enable","disable","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","bindFramebuffer","framebuffer","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isCube","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","createRenderbuffer","glTextureType","webglDepthTexture","setupDepthTexture","setupDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","disconnect","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","projectObject","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","camera2","renderObjectImmediate","onAfterRender","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","window","setFromProjectionMatrix","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissiveObjects","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","transformVertex","vertexPosition","mvPosition","float32Array","setFromMatrixScale","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","isBone","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","raycastTimes","instanceId","getMatrixAt","raycast","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distanceSqToSegment","_start","_end","LineSegments","_inverseMatrix","_ray","_sphere","_position$2","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","Points","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","isCanvasTexture","linkedList","dim","clockwise","last","sum","signedArea","insertNode","removeNode","filterPoints","again","steiner","prev","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","hole","outerNode","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","getLeftmost","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","ShapeUtils","contour","pts","area","holes","holeIndices","faces","removeDupEndPts","addContour","holeIndex","hasHoles","outerLen","queue","eliminateHoles","Earcut","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","isClockWise","reverse","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","computeVertexNormals","toJSON$1","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","vertex","ior","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","json","getInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","NormalAnimationBlendMode","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","o","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","validate","optimize","typeName","getTrackTypeForValueTypeName","Cache","files","file","DefaultLoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","setPath","loaded","loadTexture","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","arcLengths","targetArcLength","comparison","low","high","lengthBefore","t2","pt1","pt2","getTangent","segments","closed","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","fromJSON","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","LineCurve3","isLineCurve3","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","getPoints","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","Shape","holesPts","getPointsHoles","Light","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","OrthographicCamera","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","AudioLoader","setResponseType","setWithCredentials","bufferCopy","AudioContext","webkitAudioContext","decodeAudioData","audioBuffer","sky","ground","isHemisphereLightProbe","isAmbientLightProbe","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","lastIndexOf","substring","bone","getBoneByName","searchNodeSubtree","childNode","subTreeNode","resolvedProperty","targetObject","dest","targetArray","bind","sourceArray","_getValue_unavailable","_setValue_unavailable","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","stats","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","nBindings","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","_vector$4","Box2","isBox2","_vector$2","_boneMatrix","_matrixWorldInv","getBoneList","boneList","_floatView","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","backgroundMaterial","_lodPlanes","_sizeLods","_sigmas","_createPlanes","lod","sizeLod","sigma","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","construct","fromPoints","setColors","isSkeletonHelper","extractUrlBase","TextDecoder","decode","fromCharCode","escape","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateY","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","inverse","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","drawcalls","offsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","shading","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","gain","createGain","connect","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","setTargetAtTime","getFilters","setFilters","setBuffer","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","THREE","querySelector","makeInstance","cubes","ndx","rot","main"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const REVISION='129';const MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const CullFaceNone=0;const CullFaceBack=1;const CullFaceFront=2;const CullFaceFrontBack=3;const BasicShadowMap=0;const PCFShadowMap=1;const PCFSoftShadowMap=2;const VSMShadowMap=3;const FrontSide=0;const BackSide=1;const DoubleSide=2;const FlatShading=1;const SmoothShading=2;const NoBlending=0;const NormalBlending=1;const AdditiveBlending=2;const SubtractiveBlending=3;const MultiplyBlending=4;const CustomBlending=5;const AddEquation=100;const SubtractEquation=101;const ReverseSubtractEquation=102;const MinEquation=103;const MaxEquation=104;const ZeroFactor=200;const OneFactor=201;const SrcColorFactor=202;const OneMinusSrcColorFactor=203;const SrcAlphaFactor=204;const OneMinusSrcAlphaFactor=205;const DstAlphaFactor=206;const OneMinusDstAlphaFactor=207;const DstColorFactor=208;const OneMinusDstColorFactor=209;const SrcAlphaSaturateFactor=210;const NeverDepth=0;const AlwaysDepth=1;const LessDepth=2;const LessEqualDepth=3;const EqualDepth=4;const GreaterEqualDepth=5;const GreaterDepth=6;const NotEqualDepth=7;const MultiplyOperation=0;const MixOperation=1;const AddOperation=2;const NoToneMapping=0;const LinearToneMapping=1;const ReinhardToneMapping=2;const CineonToneMapping=3;const ACESFilmicToneMapping=4;const CustomToneMapping=5;const UVMapping=300;const CubeReflectionMapping=301;const CubeRefractionMapping=302;const EquirectangularReflectionMapping=303;const EquirectangularRefractionMapping=304;const CubeUVReflectionMapping=306;const CubeUVRefractionMapping=307;const RepeatWrapping=1000;const ClampToEdgeWrapping=1001;const MirroredRepeatWrapping=1002;const NearestFilter=1003;const NearestMipmapNearestFilter=1004;const NearestMipMapNearestFilter=1004;const NearestMipmapLinearFilter=1005;const NearestMipMapLinearFilter=1005;const LinearFilter=1006;const LinearMipmapNearestFilter=1007;const LinearMipMapNearestFilter=1007;const LinearMipmapLinearFilter=1008;const LinearMipMapLinearFilter=1008;const UnsignedByteType=1009;const ByteType=1010;const ShortType=1011;const UnsignedShortType=1012;const IntType=1013;const UnsignedIntType=1014;const FloatType=1015;const HalfFloatType=1016;const UnsignedShort4444Type=1017;const UnsignedShort5551Type=1018;const UnsignedShort565Type=1019;const UnsignedInt248Type=1020;const AlphaFormat=1021;const RGBFormat=1022;const RGBAFormat=1023;const LuminanceFormat=1024;const LuminanceAlphaFormat=1025;const RGBEFormat=RGBAFormat;const DepthFormat=1026;const DepthStencilFormat=1027;const RedFormat=1028;const RedIntegerFormat=1029;const RGFormat=1030;const RGIntegerFormat=1031;const RGBIntegerFormat=1032;const RGBAIntegerFormat=1033;const RGB_S3TC_DXT1_Format=33776;const RGBA_S3TC_DXT1_Format=33777;const RGBA_S3TC_DXT3_Format=33778;const RGBA_S3TC_DXT5_Format=33779;const RGB_PVRTC_4BPPV1_Format=35840;const RGB_PVRTC_2BPPV1_Format=35841;const RGBA_PVRTC_4BPPV1_Format=35842;const RGBA_PVRTC_2BPPV1_Format=35843;const RGB_ETC1_Format=36196;const RGB_ETC2_Format=37492;const RGBA_ETC2_EAC_Format=37496;const RGBA_ASTC_4x4_Format=37808;const RGBA_ASTC_5x4_Format=37809;const RGBA_ASTC_5x5_Format=37810;const RGBA_ASTC_6x5_Format=37811;const RGBA_ASTC_6x6_Format=37812;const RGBA_ASTC_8x5_Format=37813;const RGBA_ASTC_8x6_Format=37814;const RGBA_ASTC_8x8_Format=37815;const RGBA_ASTC_10x5_Format=37816;const RGBA_ASTC_10x6_Format=37817;const RGBA_ASTC_10x8_Format=37818;const RGBA_ASTC_10x10_Format=37819;const RGBA_ASTC_12x10_Format=37820;const RGBA_ASTC_12x12_Format=37821;const RGBA_BPTC_Format=36492;const SRGB8_ALPHA8_ASTC_4x4_Format=37840;const SRGB8_ALPHA8_ASTC_5x4_Format=37841;const SRGB8_ALPHA8_ASTC_5x5_Format=37842;const SRGB8_ALPHA8_ASTC_6x5_Format=37843;const SRGB8_ALPHA8_ASTC_6x6_Format=37844;const SRGB8_ALPHA8_ASTC_8x5_Format=37845;const SRGB8_ALPHA8_ASTC_8x6_Format=37846;const SRGB8_ALPHA8_ASTC_8x8_Format=37847;const SRGB8_ALPHA8_ASTC_10x5_Format=37848;const SRGB8_ALPHA8_ASTC_10x6_Format=37849;const SRGB8_ALPHA8_ASTC_10x8_Format=37850;const SRGB8_ALPHA8_ASTC_10x10_Format=37851;const SRGB8_ALPHA8_ASTC_12x10_Format=37852;const SRGB8_ALPHA8_ASTC_12x12_Format=37853;const LoopOnce=2200;const LoopRepeat=2201;const LoopPingPong=2202;const InterpolateDiscrete=2300;const InterpolateLinear=2301;const InterpolateSmooth=2302;const ZeroCurvatureEnding=2400;const ZeroSlopeEnding=2401;const WrapAroundEnding=2402;const NormalAnimationBlendMode=2500;const AdditiveAnimationBlendMode=2501;const TrianglesDrawMode=0;const TriangleStripDrawMode=1;const TriangleFanDrawMode=2;const LinearEncoding=3000;const sRGBEncoding=3001;const GammaEncoding=3007;const RGBEEncoding=3002;const LogLuvEncoding=3003;const RGBM7Encoding=3004;const RGBM16Encoding=3005;const RGBDEncoding=3006;const BasicDepthPacking=3200;const RGBADepthPacking=3201;const TangentSpaceNormalMap=0;const ObjectSpaceNormalMap=1;const ZeroStencilOp=0;const KeepStencilOp=7680;const ReplaceStencilOp=7681;const IncrementStencilOp=7682;const DecrementStencilOp=7683;const IncrementWrapStencilOp=34055;const DecrementWrapStencilOp=34056;const InvertStencilOp=5386;const NeverStencilFunc=512;const LessStencilFunc=513;const EqualStencilFunc=514;const LessEqualStencilFunc=515;const GreaterStencilFunc=516;const NotEqualStencilFunc=517;const GreaterEqualStencilFunc=518;const AlwaysStencilFunc=519;const StaticDrawUsage=35044;const DynamicDrawUsage=35048;const StreamDrawUsage=35040;const StaticReadUsage=35045;const DynamicReadUsage=35049;const StreamReadUsage=35041;const StaticCopyUsage=35046;const DynamicCopyUsage=35050;const StreamCopyUsage=35042;const GLSL1='100';const GLSL3='300 es';/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */class EventDispatcher{addEventListener(type,listener){if(this._listeners===undefined)this._listeners={};const listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}}hasEventListener(type,listener){if(this._listeners===undefined)return false;const listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;}removeEventListener(type,listener){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[type];if(listenerArray!==undefined){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}}dispatchEvent(event){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.\nconst array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event);}event.target=null;}}}const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}let _seed=1234567;const DEG2RAD=Math.PI/180;const RAD2DEG=180/Math.PI;// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID(){const d0=Math.random()*0xffffffff|0;const d1=Math.random()*0xffffffff|0;const d2=Math.random()*0xffffffff|0;const d3=Math.random()*0xffffffff|0;const uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();}function clamp(value,min,max){return Math.max(min,Math.min(max,value));}// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo(n,m){return(n%m+m)%m;}// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);}// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp(x,y,value){if(x!==y){return(value-x)/(y-x);}else{return 0;}}// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp(x,y,t){return(1-t)*x+t*y;}// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt));}// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong(x,length=1){return length-Math.abs(euclideanModulo(x,length*2)-length);}// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);}function smootherstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);}// Random integer from <low, high> interval\nfunction randInt(low,high){return low+Math.floor(Math.random()*(high-low+1));}// Random float from <low, high> interval\nfunction randFloat(low,high){return low+Math.random()*(high-low);}// Random float from <-range/2, range/2> interval\nfunction randFloatSpread(range){return range*(0.5-Math.random());}// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom(s){if(s!==undefined)_seed=s%2147483647;// Park-Miller algorithm\n_seed=_seed*16807%2147483647;return(_seed-1)/2147483646;}function degToRad(degrees){return degrees*DEG2RAD;}function radToDeg(radians){return radians*RAD2DEG;}function isPowerOfTwo(value){return(value&value-1)===0&&value!==0;}function ceilPowerOfTwo(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));}function floorPowerOfTwo(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));}function setQuaternionFromProperEuler(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n// rotations are applied to the axes in the order specified by 'order'\n// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n// angles are in radians\nconst cos=Math.cos;const sin=Math.sin;const c2=cos(b/2);const s2=sin(b/2);const c13=cos((a+c)/2);const s13=sin((a+c)/2);const c1_3=cos((a-c)/2);const s1_3=sin((a-c)/2);const c3_1=cos((c-a)/2);const s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}var MathUtils=/*#__PURE__*/Object.freeze({__proto__:null,DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:mapLinear,inverseLerp:inverseLerp,lerp:lerp,damp:damp,pingpong:pingpong,smoothstep:smoothstep,smootherstep:smootherstep,randInt:randInt,randFloat:randFloat,randFloatSpread:randFloatSpread,seededRandom:seededRandom,degToRad:degToRad,radToDeg:radToDeg,isPowerOfTwo:isPowerOfTwo,ceilPowerOfTwo:ceilPowerOfTwo,floorPowerOfTwo:floorPowerOfTwo,setQuaternionFromProperEuler:setQuaternionFromProperEuler});class Vector2{constructor(x=0,y=0){this.x=x;this.y=y;}get width(){return this.x;}set width(value){this.x=value;}get height(){return this.y;}set height(value){this.y=value;}set(x,y){this.x=x;this.y=y;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y);}copy(v){this.x=v.x;this.y=v.y;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;}addScalar(s){this.x+=s;this.y+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;}subScalar(s){this.x-=s;this.y-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;}multiply(v){this.x*=v.x;this.y*=v.y;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;}divide(v){this.x/=v.x;this.y/=v.y;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}applyMatrix3(m){const x=this.x,y=this.y;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;}negate(){this.x=-this.x;this.y=-this.y;return this;}dot(v){return this.x*v.x+this.y*v.y;}cross(v){return this.x*v.y-this.y*v.x;}lengthSq(){return this.x*this.x+this.y*this.y;}length(){return Math.sqrt(this.x*this.x+this.y*this.y);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);}normalize(){return this.divideScalar(this.length()||1);}angle(){// computes the angle in radians with respect to the positive x-axis\nconst angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;}rotateAround(center,angle){const c=Math.cos(angle),s=Math.sin(angle);const x=this.x-center.x;const y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}random(){this.x=Math.random();this.y=Math.random();return this;}}Vector2.prototype.isVector2=true;class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;}identity(){this.set(1,0,0,0,1,0,0,0,1);return this;}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;}setFromMatrix4(m){const me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;}multiply(m){return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[3],a13=ae[6];const a21=ae[1],a22=ae[4],a23=ae[7];const a31=ae[2],a32=ae[5],a33=ae[8];const b11=be[0],b12=be[3],b13=be[6];const b21=be[1],b22=be[4],b23=be[7];const b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;}determinant(){const te=this.elements;const a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;}transpose(){let tmp;const m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;}getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).invert().transpose();}transposeIntoArray(r){const m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;}setUvTransform(tx,ty,sx,sy,rotation,cx,cy){const c=Math.cos(rotation);const s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);return this;}scale(sx,sy){const te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;}rotate(theta){const c=Math.cos(theta);const s=Math.sin(theta);const te=this.elements;const a11=te[0],a12=te[3],a13=te[6];const a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;}translate(tx,ty){const te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}clone(){return new this.constructor().fromArray(this.elements);}}Matrix3.prototype.isMatrix3=true;let _canvas;class ImageUtils{static getDataURL(image){if(/^data:/i.test(image.src)){return image.src;}if(typeof HTMLCanvasElement=='undefined'){return image.src;}let canvas;if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;const context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',image);return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}}let textureId=0;class Texture extends EventDispatcher{constructor(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=ClampToEdgeWrapping,wrapT=ClampToEdgeWrapping,magFilter=LinearFilter,minFilter=LinearMipmapLinearFilter,format=RGBAFormat,type=UnsignedByteType,anisotropy=1,encoding=LinearEncoding){super();Object.defineProperty(this,'id',{value:textureId++});this.uuid=generateUUID();this.name='';this.image=image;this.mipmaps=[];this.mapping=mapping;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\nthis.encoding=encoding;this.version=0;this.onUpdate=null;}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);}clone(){return new this.constructor().copy(this);}copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;}toJSON(meta){const isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}const output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nconst image=this.image;if(image.uuid===undefined){image.uuid=generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){let url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(let i=0,l=image.length;i<l;i++){// check cube texture with data textures\nif(image[i].isDataTexture){url.push(serializeImage(image[i].image));}else{url.push(serializeImage(image[i]));}}}else{// process single image\nurl=serializeImage(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;}dispose(){this.dispatchEvent({type:'dispose'});}transformUv(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}set needsUpdate(value){if(value===true)this.version++;}}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype.isTexture=true;function serializeImage(image){if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){// default images\nreturn ImageUtils.getDataURL(image);}else{if(image.data){// images of DataTexture\nreturn{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};}else{console.warn('THREE.Texture: Unable to serialize Texture.');return{};}}}class Vector4{constructor(x=0,y=0,z=0,w=1){this.x=x;this.y=y;this.z=z;this.w=w;}get width(){return this.z;}set width(value){this.z=value;}get height(){return this.w;}set height(value){this.w=value;}set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setW(w){this.w=w;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;}multiply(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,w=this.w;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;}setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nlet angle,x,y,z;// variables for result\nconst epsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;const xx=(m11+1)/2;const yy=(m22+1)/2;const zz=(m33+1)/2;const xy=(m12+m21)/4;const xz=(m13+m31)/4;const yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nlet s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}}Vector4.prototype.isVector4=true;/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/class WebGLRenderTarget extends EventDispatcher{constructor(width,height,options){super();this.width=width;this.height=height;this.depth=1;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=1;this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:false;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}setTexture(texture){texture.image={width:this.width,height:this.height,depth:this.depth};this.texture=texture;}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=depth;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);}clone(){return new this.constructor().copy(this);}copy(source){this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.texture.image={...this.texture.image};// See #20328.\nthis.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}WebGLRenderTarget.prototype.isWebGLRenderTarget=true;class WebGLMultipleRenderTargets extends WebGLRenderTarget{constructor(width,height,count){super(width,height);const texture=this.texture;this.texture=[];for(let i=0;i<count;i++){this.texture[i]=texture.clone();}}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;for(let i=0,il=this.texture.length;i<il;i++){this.texture[i].image.width=width;this.texture[i].image.height=height;this.texture[i].image.depth=depth;}this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);return this;}copy(source){this.dispose();this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.set(0,0,this.width,this.height);this.scissor.set(0,0,this.width,this.height);this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;this.texture.length=0;for(let i=0,il=source.texture.length;i<il;i++){this.texture[i]=source.texture[i].clone();}return this;}}WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets=true;class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(width,height,options){super(width,height,options);this.samples=4;}copy(source){super.copy.call(this,source);this.samples=source.samples;return this;}}WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget=true;class Quaternion{constructor(x=0,y=0,z=0,w=1){this._x=x;this._y=y;this._z=z;this._w=w;}static slerp(qa,qb,qm,t){console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');return qm.slerpQuaternions(qa,qb,t);}static slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nlet x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];const x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(t===0){dst[dstOffset+0]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;return;}if(t===1){dst[dstOffset+0]=x1;dst[dstOffset+1]=y1;dst[dstOffset+2]=z1;dst[dstOffset+3]=w1;return;}if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){let s=1-t;const cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){const sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}const tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){const f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}static multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){const x0=src0[srcOffset0];const y0=src0[srcOffset0+1];const z0=src0[srcOffset0+2];const w0=src0[srcOffset0+3];const x1=src1[srcOffset1];const y1=src1[srcOffset1+1];const z1=src1[srcOffset1+2];const w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get w(){return this._w;}set w(value){this._w=value;this._onChangeCallback();}set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._w);}copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;}setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}const x=euler._x,y=euler._y,z=euler._z,order=euler._order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nconst cos=Math.cos;const sin=Math.sin;const c1=cos(x/2);const c2=cos(y/2);const c3=cos(z/2);const s1=sin(x/2);const s2=sin(y/2);const s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;}setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nconst halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;}setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){const s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){const s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){const s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{const s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._onChangeCallback();return this;}setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized\nlet r=vFrom.dot(vTo)+1;if(r<Number.EPSILON){// vFrom and vTo point in opposite directions\nr=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\nthis._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();}angleTo(q){return 2*Math.acos(Math.abs(clamp(this.dot(q),-1,1)));}rotateTowards(q,step){const angle=this.angleTo(q);if(angle===0)return this;const t=Math.min(1,step/angle);this.slerp(q,t);return this;}identity(){return this.set(0,0,0,1);}invert(){// quaternion is assumed to have unit length\nreturn this.conjugate();}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;}dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);}normalize(){let l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;}multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);}premultiply(q){return this.multiplyQuaternions(q,this);}multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nconst qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;const qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;}slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);const x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nlet cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}const sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){const s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}const sinHalfTheta=Math.sqrt(sqrSinHalfTheta);const halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);const ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;}slerpQuaternions(qa,qb,t){this.copy(qa).slerp(qb,t);}equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;}fromArray(array,offset=0){this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;}fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Quaternion.prototype.isQuaternion=true;class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z;}set(x,y,z){if(z===undefined)z=this.z;// sprite.scale.set(x,y)\nthis.x=x;this.y=y;this.z=z;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;}multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;}multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;}applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion$4.setFromEuler(euler));}applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle));}applyMatrix3(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;}applyNormalMatrix(m){return this.applyMatrix3(m).normalize();}applyMatrix4(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;const w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;}applyQuaternion(q){const x=this.x,y=this.y,z=this.z;const qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nconst ix=qw*x+qy*z-qz*y;const iy=qw*y+qz*x-qx*z;const iz=qw*z+qx*y-qy*x;const iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;}project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);}unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);}transformDirection(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nconst x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();}divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;}// TODO lengthSquared?\nlengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;}cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);}crossVectors(a,b){const ax=a.x,ay=a.y,az=a.z;const bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}projectOnVector(v){const denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);const scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);}projectOnPlane(planeNormal){_vector$c.copy(this).projectOnVector(planeNormal);return this.sub(_vector$c);}reflect(normal){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nreturn this.sub(_vector$c.copy(normal).multiplyScalar(2*this.dot(normal)));}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;const theta=this.dot(v)/denominator;// clamp, to handle numerical problems\nreturn Math.acos(clamp(theta,-1,1));}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);}setFromSphericalCoords(radius,phi,theta){const sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;}setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);}setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;}setFromMatrixPosition(m){const e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;}setFromMatrixScale(m){const sx=this.setFromMatrixColumn(m,0).length();const sy=this.setFromMatrixColumn(m,1).length();const sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;}setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);}setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}}Vector3.prototype.isVector3=true;const _vector$c=/*@__PURE__*/new Vector3();const _quaternion$4=/*@__PURE__*/new Quaternion();class Box3{constructor(min=new Vector3(+Infinity,+Infinity,+Infinity),max=new Vector3(-Infinity,-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromArray(array){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=array.length;i<l;i+=3){const x=array[i];const y=array[i+1];const z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromBufferAttribute(attribute){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=attribute.count;i<l;i++){const x=attribute.getX(i);const y=attribute.getY(i);const z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$b.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}setFromObject(object){this.makeEmpty();return this.expandByObject(object);}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;}getCenter(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nobject.updateWorldMatrix(false,false);const geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box$3.copy(geometry.boundingBox);_box$3.applyMatrix4(object.matrixWorld);this.union(_box$3);}const children=object.children;for(let i=0,l=children.length;i<l;i++){this.expandByObject(children[i]);}return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));}intersectsBox(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;}intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,_vector$b);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn _vector$b.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;}intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nlet min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;}intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin\n_v0$2.subVectors(triangle.a,_center);_v1$7.subVectors(triangle.b,_center);_v2$3.subVectors(triangle.c,_center);// compute edge vectors for triangle\n_f0.subVectors(_v1$7,_v0$2);_f1.subVectors(_v2$3,_v1$7);_f2.subVectors(_v0$2,_v2$3);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nlet axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\n_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents);}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$b.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}getBoundingSphere(target){if(target===undefined){console.error('THREE.Box3: .getBoundingSphere() target is now required');//target = new Sphere(); // removed to avoid cyclic dependency\n}this.getCenter(target.center);target.radius=this.getSize(_vector$b).length()*0.5;return target;}intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\n_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\n_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\n_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\n_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\n_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\n_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\n_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(_points);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box3.prototype.isBox3=true;const _points=[/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3()];const _vector$b=/*@__PURE__*/new Vector3();const _box$3=/*@__PURE__*/new Box3();// triangle centered vertices\nconst _v0$2=/*@__PURE__*/new Vector3();const _v1$7=/*@__PURE__*/new Vector3();const _v2$3=/*@__PURE__*/new Vector3();// triangle edge vectors\nconst _f0=/*@__PURE__*/new Vector3();const _f1=/*@__PURE__*/new Vector3();const _f2=/*@__PURE__*/new Vector3();const _center=/*@__PURE__*/new Vector3();const _extents=/*@__PURE__*/new Vector3();const _triangleNormal=/*@__PURE__*/new Vector3();const _testAxis=/*@__PURE__*/new Vector3();function satForAxes(axes,v0,v1,v2,extents){for(let i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);// project the aabb onto the seperating axis\nconst r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nconst p0=v0.dot(_testAxis);const p1=v1.dot(_testAxis);const p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}const _box$2=/*@__PURE__*/new Box3();const _v1$6=/*@__PURE__*/new Vector3();const _toFarthestPoint=/*@__PURE__*/new Vector3();const _toPoint=/*@__PURE__*/new Vector3();class Sphere{constructor(center=new Vector3(),radius=-1){this.center=center;this.radius=radius;}set(center,radius){this.center.copy(center);this.radius=radius;return this;}setFromPoints(points,optionalCenter){const center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$2.setFromPoints(points).getCenter(center);}let maxRadiusSq=0;for(let i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;}copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;}isEmpty(){return this.radius<0;}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;}containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;}distanceToPoint(point){return point.distanceTo(this.center)-this.radius;}intersectsSphere(sphere){const radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;}intersectsBox(box){return box.intersectsSphere(this);}intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;}clampPoint(point,target){const deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;}getBoundingBox(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}if(this.isEmpty()){// Empty sphere produces empty bounding box\ntarget.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;}applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}translate(offset){this.center.add(offset);return this;}expandByPoint(point){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n_toPoint.subVectors(point,this.center);const lengthSq=_toPoint.lengthSq();if(lengthSq>this.radius*this.radius){const length=Math.sqrt(lengthSq);const missingRadiusHalf=(length-this.radius)*0.5;// Nudge this sphere towards the target point. Add half the missing distance to radius,\n// and the other half to position. This gives a tighter enclosure, instead of if\n// the whole missing distance were just added to radius.\nthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf/length));this.radius+=missingRadiusHalf;}return this;}union(sphere){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n// To enclose another sphere into this sphere, we only need to enclose two points:\n// 1) Enclose the farthest point on the other sphere into this sphere.\n// 2) Enclose the opposite point of the farthest point into this sphere.\n_toFarthestPoint.subVectors(sphere.center,this.center).normalize().multiplyScalar(sphere.radius);this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));return this;}equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}clone(){return new this.constructor().copy(this);}}const _vector$a=/*@__PURE__*/new Vector3();const _segCenter=/*@__PURE__*/new Vector3();const _segDir=/*@__PURE__*/new Vector3();const _diff=/*@__PURE__*/new Vector3();const _edge1=/*@__PURE__*/new Vector3();const _edge2=/*@__PURE__*/new Vector3();const _normal$1=/*@__PURE__*/new Vector3();class Ray{constructor(origin=new Vector3(),direction=new Vector3(0,0,-1)){this.origin=origin;this.direction=direction;}set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;}copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;}at(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);}lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;}recast(t){this.origin.copy(this.at(t,_vector$a));return this;}closestPointToPoint(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3();}target.subVectors(point,this.origin);const directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);}distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));}distanceSqToPoint(point){const directionDistance=_vector$a.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$a.distanceToSquared(point);}distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\n_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);const segExtent=v0.distanceTo(v1)*0.5;const a01=-this.direction.dot(_segDir);const b0=_diff.dot(this.direction);const b1=-_diff.dot(_segDir);const c=_diff.lengthSq();const det=Math.abs(1-a01*a01);let s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nconst invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;}intersectSphere(sphere,target){_vector$a.subVectors(sphere.center,this.origin);const tca=_vector$a.dot(this.direction);const d2=_vector$a.dot(_vector$a)-tca*tca;const radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;const thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nconst t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nconst t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);}intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;}distanceToPlane(plane){const denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}const t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;}intersectPlane(plane,target){const t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);}intersectsPlane(plane){// check if the ray lies on the plane first\nconst distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}const denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;}intersectBox(box,target){let tmin,tmax,tymin,tymax,tzmin,tzmax;const invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;const origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);}intersectsBox(box){return this.intersectBox(box,_vector$a)!==null;}intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.\n// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal$1.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nlet DdN=this.direction.dot(_normal$1);let sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);const DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}const DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nconst QdN=-sign*_diff.dot(_normal$1);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);}applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;}equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}clone(){return new this.constructor().copy(this);}}class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;}clone(){return new Matrix4().fromArray(this.elements);}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;}copyPosition(m){const te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;}setFromMatrix3(m){const me=m.elements;this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1);return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;}makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;}extractRotation(m){// this method does not support reflection matrices\nconst te=this.elements;const me=m.elements;const scaleX=1/_v1$5.setFromMatrixColumn(m,0).length();const scaleY=1/_v1$5.setFromMatrixColumn(m,1).length();const scaleZ=1/_v1$5.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}const te=this.elements;const x=euler.x,y=euler.y,z=euler.z;const a=Math.cos(x),b=Math.sin(x);const c=Math.cos(y),d=Math.sin(y);const e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);}lookAt(eye,target,up){const te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position\n_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;}multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];const a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];const a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];const a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];const b11=be[0],b12=be[4],b13=be[8],b14=be[12];const b21=be[1],b22=be[5],b23=be[9],b24=be[13];const b31=be[2],b32=be[6],b33=be[10],b34=be[14];const b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;}determinant(){const te=this.elements;const n11=te[0],n12=te[4],n13=te[8],n14=te[12];const n21=te[1],n22=te[5],n23=te[9],n24=te[13];const n31=te[2],n32=te[6],n33=te[10],n34=te[14];const n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);}transpose(){const te=this.elements;let tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;}setPosition(x,y,z){const te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;}invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nconst te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;const det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;}scale(v){const te=this.elements;const x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;}getMaxScaleOnAxis(){const te=this.elements;const scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];const scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];const scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));}makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;}makeRotationX(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;}makeRotationY(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;}makeRotationZ(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;}makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nconst c=Math.cos(angle);const s=Math.sin(angle);const t=1-c;const x=axis.x,y=axis.y,z=axis.z;const tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;}makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;}makeShear(xy,xz,yx,yz,zx,zy){this.set(1,yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1);return this;}compose(position,quaternion,scale){const te=this.elements;const x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;const x2=x+x,y2=y+y,z2=z+z;const xx=x*x2,xy=x*y2,xz=x*z2;const yy=y*y2,yz=y*z2,zz=z*z2;const wx=w*x2,wy=w*y2,wz=w*z2;const sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;}decompose(position,quaternion,scale){const te=this.elements;let sx=_v1$5.set(te[0],te[1],te[2]).length();const sy=_v1$5.set(te[4],te[5],te[6]).length();const sz=_v1$5.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nconst det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\n_m1$2.copy(this);const invSX=1/sx;const invSY=1/sy;const invSZ=1/sz;_m1$2.elements[0]*=invSX;_m1$2.elements[1]*=invSX;_m1$2.elements[2]*=invSX;_m1$2.elements[4]*=invSY;_m1$2.elements[5]*=invSY;_m1$2.elements[6]*=invSY;_m1$2.elements[8]*=invSZ;_m1$2.elements[9]*=invSZ;_m1$2.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1$2);scale.x=sx;scale.y=sy;scale.z=sz;return this;}makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}const te=this.elements;const x=2*near/(right-left);const y=2*near/(top-bottom);const a=(right+left)/(right-left);const b=(top+bottom)/(top-bottom);const c=-(far+near)/(far-near);const d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements;const w=1.0/(right-left);const h=1.0/(top-bottom);const p=1.0/(far-near);const x=(right+left)*w;const y=(top+bottom)*h;const z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}}Matrix4.prototype.isMatrix4=true;const _v1$5=/*@__PURE__*/new Vector3();const _m1$2=/*@__PURE__*/new Matrix4();const _zero=/*@__PURE__*/new Vector3(0,0,0);const _one=/*@__PURE__*/new Vector3(1,1,1);const _x=/*@__PURE__*/new Vector3();const _y=/*@__PURE__*/new Vector3();const _z=/*@__PURE__*/new Vector3();const _matrix$1=/*@__PURE__*/new Matrix4();const _quaternion$3=/*@__PURE__*/new Quaternion();class Euler{constructor(x=0,y=0,z=0,order=Euler.DefaultOrder){this._x=x;this._y=y;this._z=z;this._order=order;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get order(){return this._order;}set order(value){this._order=value;this._onChangeCallback();}set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._order);}copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;}setFromRotationMatrix(m,order,update){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements;const m11=te[0],m12=te[4],m13=te[8];const m21=te[1],m22=te[5],m23=te[9];const m31=te[2],m32=te[6],m33=te[10];order=order||this._order;switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update!==false)this._onChangeCallback();return this;}setFromQuaternion(q,order,update){_matrix$1.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix$1,order,update);}setFromVector3(v,order){return this.set(v.x,v.y,v.z,order||this._order);}reorder(newOrder){// WARNING: this discards revolution information -bhouston\n_quaternion$3.setFromEuler(this);return this.setFromQuaternion(_quaternion$3,newOrder);}equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;}fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;}toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Euler.prototype.isEuler=true;Euler.DefaultOrder='XYZ';Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];class Layers{constructor(){this.mask=1|0;}set(channel){this.mask=1<<channel|0;}enable(channel){this.mask|=1<<channel|0;}enableAll(){this.mask=0xffffffff|0;}toggle(channel){this.mask^=1<<channel|0;}disable(channel){this.mask&=~(1<<channel|0);}disableAll(){this.mask=0;}test(layers){return(this.mask&layers.mask)!==0;}}let _object3DId=0;const _v1$4=/*@__PURE__*/new Vector3();const _q1=/*@__PURE__*/new Quaternion();const _m1$1=/*@__PURE__*/new Matrix4();const _target=/*@__PURE__*/new Vector3();const _position$3=/*@__PURE__*/new Vector3();const _scale$2=/*@__PURE__*/new Vector3();const _quaternion$2=/*@__PURE__*/new Quaternion();const _xAxis=/*@__PURE__*/new Vector3(1,0,0);const _yAxis=/*@__PURE__*/new Vector3(0,1,0);const _zAxis=/*@__PURE__*/new Vector3(0,0,1);const _addedEvent={type:'added'};const _removedEvent={type:'removed'};class Object3D extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:_object3DId++});this.uuid=generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();const position=new Vector3();const rotation=new Euler();const quaternion=new Quaternion();const scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={};}onBeforeRender(){}onAfterRender(){}applyMatrix4(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);}applyQuaternion(q){this.quaternion.premultiply(q);return this;}setRotationFromAxisAngle(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);}setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,true);}setRotationFromMatrix(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);}setRotationFromQuaternion(q){// assumes q is normalized\nthis.quaternion.copy(q);}rotateOnAxis(axis,angle){// rotate object on axis in object space\n// axis is assumed to be normalized\n_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;}rotateOnWorldAxis(axis,angle){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\n_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;}rotateX(angle){return this.rotateOnAxis(_xAxis,angle);}rotateY(angle){return this.rotateOnAxis(_yAxis,angle);}rotateZ(angle){return this.rotateOnAxis(_zAxis,angle);}translateOnAxis(axis,distance){// translate object by distance along axis in object space\n// axis is assumed to be normalized\n_v1$4.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$4.multiplyScalar(distance));return this;}translateX(distance){return this.translateOnAxis(_xAxis,distance);}translateY(distance){return this.translateOnAxis(_yAxis,distance);}translateZ(distance){return this.translateOnAxis(_zAxis,distance);}localToWorld(vector){return vector.applyMatrix4(this.matrixWorld);}worldToLocal(vector){return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());}lookAt(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)\nif(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}const parent=this.parent;this.updateWorldMatrix(true,false);_position$3.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position$3,_target,this.up);}else{_m1$1.lookAt(_target,_position$3,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.invert());}}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.',object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',object);}return this;}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}const index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;}removeFromParent(){const parent=this.parent;if(parent!==null){parent.remove(this);}return this;}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null;object.dispatchEvent(_removedEvent);}this.children.length=0;return this;}attach(object){// adds object as a child of this, while maintaining the object's world transform\nthis.updateWorldMatrix(true,false);_m1$1.copy(this.matrixWorld).invert();if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);this.add(object);object.updateWorldMatrix(false,true);return this;}getObjectById(id){return this.getObjectByProperty('id',id);}getObjectByName(name){return this.getObjectByProperty('name',name);}getObjectByProperty(name,value){if(this[name]===value)return this;for(let i=0,l=this.children.length;i<l;i++){const child=this.children[i];const object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;}getWorldPosition(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);return target.setFromMatrixPosition(this.matrixWorld);}getWorldQuaternion(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,target,_scale$2);return target;}getWorldScale(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,_quaternion$2,target);return target;}getWorldDirection(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();}raycast(){}traverse(callback){callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverse(callback);}}traverseVisible(callback){if(this.visible===false)return;callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}}traverseAncestors(callback){const parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;}updateMatrixWorld(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nconst children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}}updateWorldMatrix(updateParents,updateChildren){const parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}}toJSON(meta){// meta is a string when called from JSON.stringify\nconst isRootObject=meta===undefined||typeof meta==='string';const output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nconst object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)object.instanceColor=this.instanceColor.toJSON();}//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);const parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){const shapes=parameters.shapes;if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.isSkinnedMesh){object.bindMode=this.bindMode;object.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){serialize(meta.skeletons,this.skeleton);object.skeleton=this.skeleton.uuid;}}if(this.material!==undefined){if(Array.isArray(this.material)){const uuids=[];for(let i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}//\nif(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const animation=this.animations[i];object.animations.push(serialize(meta.animations,animation));}}if(isRootObject){const geometries=extractFromCache(meta.geometries);const materials=extractFromCache(meta.materials);const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);const shapes=extractFromCache(meta.shapes);const skeletons=extractFromCache(meta.skeletons);const animations=extractFromCache(meta.animations);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;if(skeletons.length>0)output.skeletons=skeletons;if(animations.length>0)output.animations=animations;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}}clone(recursive){return new this.constructor().copy(this,recursive);}copy(source,recursive=true){this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(let i=0;i<source.children.length;i++){const child=source.children[i];this.add(child.clone());}}return this;}}Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype.isObject3D=true;const _vector1=/*@__PURE__*/new Vector3();const _vector2$1=/*@__PURE__*/new Vector3();const _normalMatrix=/*@__PURE__*/new Matrix3();class Plane{constructor(normal=new Vector3(1,0,0),constant=0){// normal is assumed to be normalized\nthis.normal=normal;this.constant=constant;}set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;}setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;}setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;}setFromCoplanarPoints(a,b,c){const normal=_vector1.subVectors(c,b).cross(_vector2$1.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;}copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;}normalize(){// Note: will lead to a divide by zero if the plane is invalid.\nconst inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;}negate(){this.constant*=-1;this.normal.negate();return this;}distanceToPoint(point){return this.normal.dot(point)+this.constant;}distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;}projectPoint(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);}intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3();}const direction=line.delta(_vector1);const denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn null;}const t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return null;}return target.copy(direction).multiplyScalar(t).add(line.start);}intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nconst startSign=this.distanceToPoint(line.start);const endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;}intersectsBox(box){return box.intersectsPlane(this);}intersectsSphere(sphere){return sphere.intersectsPlane(this);}coplanarPoint(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.constant);}applyMatrix4(matrix,optionalNormalMatrix){const normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);const referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);const normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;}translate(offset){this.constant-=offset.dot(this.normal);return this;}equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}clone(){return new this.constructor().copy(this);}}Plane.prototype.isPlane=true;const _v0$1=/*@__PURE__*/new Vector3();const _v1$3=/*@__PURE__*/new Vector3();const _v2$2=/*@__PURE__*/new Vector3();const _v3$1=/*@__PURE__*/new Vector3();const _vab=/*@__PURE__*/new Vector3();const _vac=/*@__PURE__*/new Vector3();const _vbc=/*@__PURE__*/new Vector3();const _vap=/*@__PURE__*/new Vector3();const _vbp=/*@__PURE__*/new Vector3();const _vcp=/*@__PURE__*/new Vector3();class Triangle{constructor(a=new Vector3(),b=new Vector3(),c=new Vector3()){this.a=a;this.b=b;this.c=c;}static getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3();}target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);const targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);}// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nstatic getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$2.subVectors(point,a);const dot00=_v0$1.dot(_v0$1);const dot01=_v0$1.dot(_v1$3);const dot02=_v0$1.dot(_v2$2);const dot11=_v1$3.dot(_v1$3);const dot12=_v1$3.dot(_v2$2);const denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3();}// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}const invDenom=1/denom;const u=(dot11*dot02-dot01*dot12)*invDenom;const v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);}static containsPoint(point,a,b,c){this.getBarycoord(point,a,b,c,_v3$1);return _v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1;}static getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3$1);target.set(0,0);target.addScaledVector(uv1,_v3$1.x);target.addScaledVector(uv2,_v3$1.y);target.addScaledVector(uv3,_v3$1.z);return target;}static isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing\nreturn _v0$1.cross(_v1$3).dot(direction)<0?true:false;}set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;}setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;}clone(){return new this.constructor().copy(this);}copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;}getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;}getMidpoint(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);}getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);}getPlane(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Plane();}return target.setFromCoplanarPoints(this.a,this.b,this.c);}getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);}getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);}containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);}isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);}intersectsBox(box){return box.intersectsTriangle(this);}closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3();}const a=this.a,b=this.b,c=this.c;let v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\n_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);const d1=_vab.dot(_vap);const d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}_vbp.subVectors(p,b);const d3=_vab.dot(_vbp);const d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}const vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);const d5=_vab.dot(_vcp);const d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}const vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(_vac,w);}const va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(_vbc,w);// edge region of BC\n}// face region\nconst denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);}equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}}let materialId=0;class Material extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:materialId++});this.uuid=generateUUID();this.name='';this.type='Material';this.fog=true;this.blending=NormalBlending;this.side=FrontSide;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=0xff;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=0xff;this.stencilFail=KeepStencilOp;this.stencilZFail=KeepStencilOp;this.stencilZPass=KeepStencilOp;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material\nthis.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.alphaToCoverage=false;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;}onBuild()/* shaderobject, renderer */{}onBeforeCompile()/* shaderobject, renderer */{}customProgramCacheKey(){return this.onBeforeCompile.toString();}setValues(values){if(values===undefined)return;for(const key in values){const newValue=values[key];if(newValue===undefined){console.warn('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}const currentValue=this[key];if(currentValue===undefined){console.warn('THREE.'+this.type+': \\''+key+'\\' is not a property of this material.');continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}}toJSON(meta){const isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}const data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)data.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture){data.lightMap=this.lightMap.toJSON(meta).uuid;data.lightMapIntensity=this.lightMapIntensity;}if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;if(this.combine!==undefined)data.combine=this.combine;}if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;if(this.reflectivity!==undefined)data.reflectivity=this.reflectivity;if(this.refractionRatio!==undefined)data.refractionRatio=this.refractionRatio;if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.transmission!==undefined)data.transmission=this.transmission;if(this.transmissionMap&&this.transmissionMap.isTexture)data.transmissionMap=this.transmissionMap.toJSON(meta).uuid;if(this.thickness!==undefined)data.thickness=this.thickness;if(this.thicknessMap&&this.thicknessMap.isTexture)data.thicknessMap=this.thicknessMap.toJSON(meta).uuid;if(this.attenuationDistance!==undefined)data.attenuationDistance=this.attenuationDistance;if(this.attenuationColor!==undefined)data.attenuationColor=this.attenuationColor.getHex();if(this.size!==undefined)data.size=this.size;if(this.shadowSide!==null)data.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.colorWrite=this.colorWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)\nif(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)data.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.morphNormals===true)data.morphNormals=true;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;}clone(){return new this.constructor().copy(this);}copy(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(srcPlanes!==null){const n=srcPlanes.length;dstPlanes=new Array(n);for(let i=0;i!==n;++i){dstPlanes[i]=srcPlanes[i].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;}dispose(){this.dispatchEvent({type:'dispose'});}set needsUpdate(value){if(value===true)this.version++;}}Material.prototype.isMaterial=true;const _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};const _hslA={h:0,s:0,l:0};const _hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}class Color{constructor(r,g,b){if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;}setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;}setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;}setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;}setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=euclideanModulo(h,1);s=clamp(s,0,1);l=clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{const p=l<=0.5?l*(1+s):l+s-l*s;const q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;}setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}let m;if(m=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)){// rgb / hsl\nlet color;const name=m[1];const components=m[2];switch(name){case'rgb':case'rgba':if(color=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[4]);return this;}if(color=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[4]);return this;}break;case'hsl':case'hsla':if(color=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nconst h=parseFloat(color[1])/360;const s=parseInt(color[2],10)/100;const l=parseInt(color[3],10)/100;handleAlpha(color[4]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f\\d]+)$/.exec(style)){// hex color\nconst hex=m[1];const size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;}setColorName(style){// color keywords\nconst hex=_colorKeywords[style.toLowerCase()];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}return this;}clone(){return new this.constructor(this.r,this.g,this.b);}copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;}copyGammaToLinear(color,gammaFactor=2.0){this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;}copyLinearToGamma(color,gammaFactor=2.0){const safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;}convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;}convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;}copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;}copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;}convertSRGBToLinear(){this.copySRGBToLinear(this);return this;}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;}getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);}getHSL(target){// h,s,l ranges are in 0.0 - 1.0\nif(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}const r=this.r,g=this.g,b=this.b;const max=Math.max(r,g,b);const min=Math.min(r,g,b);let hue,saturation;const lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{const delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;}getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';}offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;}add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;}addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;}addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;}sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;}multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;}multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;}lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;}lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this;}lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);const h=lerp(_hslA.h,_hslB.h,alpha);const s=lerp(_hslA.s,_hslB.s,alpha);const l=lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;}fromArray(array,offset=0){this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;}fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);if(attribute.normalized===true){// assuming Uint8Array\nthis.r/=255;this.g/=255;this.b/=255;}return this;}toJSON(){return this.getHex();}}Color.NAMES=_colorKeywords;Color.prototype.isColor=true;Color.prototype.r=1;Color.prototype.g=1;Color.prototype.b=1;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>\n * }\n */class MeshBasicMaterial extends Material{constructor(parameters){super();this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;return this;}}MeshBasicMaterial.prototype.isMeshBasicMaterial=true;const _vector$9=/*@__PURE__*/new Vector3();const _vector2=/*@__PURE__*/new Vector2();class BufferAttribute{constructor(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}onUploadCallback(){}set needsUpdate(value){if(value===true)this.version++;}setUsage(value){this.usage=value;return this;}copy(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;}copyAt(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(let i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;}copyArray(array){this.array.set(array);return this;}copyColorsArray(colors){const array=this.array;let offset=0;for(let i=0,l=colors.length;i<l;i++){let color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;}copyVector2sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;}copyVector3sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;}copyVector4sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;}applyMatrix3(m){if(this.itemSize===2){for(let i=0,l=this.count;i<l;i++){_vector2.fromBufferAttribute(this,i);_vector2.applyMatrix3(m);this.setXY(i,_vector2.x,_vector2.y);}}else if(this.itemSize===3){for(let i=0,l=this.count;i<l;i++){_vector$9.fromBufferAttribute(this,i);_vector$9.applyMatrix3(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}}return this;}applyMatrix4(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyMatrix4(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyNormalMatrix(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}transformDirection(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.transformDirection(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}set(value,offset=0){this.array.set(value,offset);return this;}getX(index){return this.array[index*this.itemSize];}setX(index,x){this.array[index*this.itemSize]=x;return this;}getY(index){return this.array[index*this.itemSize+1];}setY(index,y){this.array[index*this.itemSize+1]=y;return this;}getZ(index){return this.array[index*this.itemSize+2];}setZ(index,z){this.array[index*this.itemSize+2]=z;return this;}getW(index){return this.array[index*this.itemSize+3];}setW(index,w){this.array[index*this.itemSize+3]=w;return this;}setXY(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;}setXYZ(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;}setXYZW(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;}onUpload(callback){this.onUploadCallback=callback;return this;}clone(){return new this.constructor(this.array,this.itemSize).copy(this);}toJSON(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};if(this.name!=='')data.name=this.name;if(this.usage!==StaticDrawUsage)data.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)data.updateRange=this.updateRange;return data;}}BufferAttribute.prototype.isBufferAttribute=true;//\nclass Int8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int8Array(array),itemSize,normalized);}}class Uint8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8Array(array),itemSize,normalized);}}class Uint8ClampedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8ClampedArray(array),itemSize,normalized);}}class Int16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int16Array(array),itemSize,normalized);}}class Uint16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized);}}class Int32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int32Array(array),itemSize,normalized);}}class Uint32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint32Array(array),itemSize,normalized);}}class Float16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized);}}Float16BufferAttribute.prototype.isFloat16BufferAttribute=true;class Float32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float32Array(array),itemSize,normalized);}}class Float64BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float64Array(array),itemSize,normalized);}}function arrayMax(array){if(array.length===0)return-Infinity;let max=array[0];for(let i=1,l=array.length;i<l;++i){if(array[i]>max)max=array[i];}return max;}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer);}let _id=0;const _m1=/*@__PURE__*/new Matrix4();const _obj=/*@__PURE__*/new Object3D();const _offset=/*@__PURE__*/new Vector3();const _box$1=/*@__PURE__*/new Box3();const _boxMorphTargets=/*@__PURE__*/new Box3();const _vector$8=/*@__PURE__*/new Vector3();class BufferGeometry extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:_id++});this.uuid=generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}getIndex(){return this.index;}setIndex(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}return this;}getAttribute(name){return this.attributes[name];}setAttribute(name,attribute){this.attributes[name]=attribute;return this;}deleteAttribute(name){delete this.attributes[name];return this;}hasAttribute(name){return this.attributes[name]!==undefined;}addGroup(start,count,materialIndex=0){this.groups.push({start:start,count:count,materialIndex:materialIndex});}clearGroups(){this.groups=[];}setDrawRange(start,count){this.drawRange.start=start;this.drawRange.count=count;}applyMatrix4(matrix){const position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}const normal=this.attributes.normal;if(normal!==undefined){const normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}const tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;}applyQuaternion(q){_m1.makeRotationFromQuaternion(q);this.applyMatrix4(_m1);return this;}rotateX(angle){// rotate geometry around world x-axis\n_m1.makeRotationX(angle);this.applyMatrix4(_m1);return this;}rotateY(angle){// rotate geometry around world y-axis\n_m1.makeRotationY(angle);this.applyMatrix4(_m1);return this;}rotateZ(angle){// rotate geometry around world z-axis\n_m1.makeRotationZ(angle);this.applyMatrix4(_m1);return this;}translate(x,y,z){// translate geometry\n_m1.makeTranslation(x,y,z);this.applyMatrix4(_m1);return this;}scale(x,y,z){// scale geometry\n_m1.makeScale(x,y,z);this.applyMatrix4(_m1);return this;}lookAt(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;}center(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;}setFromPoints(points){const position=[];for(let i=0,l=points.length;i<l;i++){const point=points[i];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;}computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new Box3();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(+Infinity,+Infinity,+Infinity));return;}if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_box$1.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(this.boundingBox.min,_box$1.min);this.boundingBox.expandByPoint(_vector$8);_vector$8.addVectors(this.boundingBox.max,_box$1.max);this.boundingBox.expandByPoint(_vector$8);}else{this.boundingBox.expandByPoint(_box$1.min);this.boundingBox.expandByPoint(_box$1.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}}computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingSphere.set(new Vector3(),Infinity);return;}if(position){// first, find the center of the bounding sphere\nconst center=this.boundingSphere.center;_box$1.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(_box$1.min,_boxMorphTargets.min);_box$1.expandByPoint(_vector$8);_vector$8.addVectors(_box$1.max,_boxMorphTargets.max);_box$1.expandByPoint(_vector$8);}else{_box$1.expandByPoint(_boxMorphTargets.min);_box$1.expandByPoint(_boxMorphTargets.max);}}}_box$1.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nlet maxRadiusSq=0;for(let i=0,il=position.count;i<il;i++){_vector$8.fromBufferAttribute(position,i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];const morphTargetsRelative=this.morphTargetsRelative;for(let j=0,jl=morphAttribute.count;j<jl;j++){_vector$8.fromBufferAttribute(morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$8.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}}computeFaceNormals(){// backwards compatibility\n}computeTangents(){const index=this.index;const attributes=this.attributes;// based on http://www.terathon.com/code/tangent.html\n// (per vertex tangents)\nif(index===null||attributes.position===undefined||attributes.normal===undefined||attributes.uv===undefined){console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');return;}const indices=index.array;const positions=attributes.position.array;const normals=attributes.normal.array;const uvs=attributes.uv.array;const nVertices=positions.length/3;if(attributes.tangent===undefined){this.setAttribute('tangent',new BufferAttribute(new Float32Array(4*nVertices),4));}const tangents=attributes.tangent.array;const tan1=[],tan2=[];for(let i=0;i<nVertices;i++){tan1[i]=new Vector3();tan2[i]=new Vector3();}const vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),sdir=new Vector3(),tdir=new Vector3();function handleTriangle(a,b,c){vA.fromArray(positions,a*3);vB.fromArray(positions,b*3);vC.fromArray(positions,c*3);uvA.fromArray(uvs,a*2);uvB.fromArray(uvs,b*2);uvC.fromArray(uvs,c*2);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);const r=1.0/(uvB.x*uvC.y-uvC.x*uvB.y);// silently ignore degenerate uv triangles having coincident or colinear vertices\nif(!isFinite(r))return;sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r);tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}let groups=this.groups;if(groups.length===0){groups=[{start:0,count:indices.length}];}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleTriangle(indices[j+0],indices[j+1],indices[j+2]);}}const tmp=new Vector3(),tmp2=new Vector3();const n=new Vector3(),n2=new Vector3();function handleVertex(v){n.fromArray(normals,v*3);n2.copy(n);const t=tan1[v];// Gram-Schmidt orthogonalize\ntmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();// Calculate handedness\ntmp2.crossVectors(n2,t);const test=tmp2.dot(tan2[v]);const w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleVertex(indices[j+0]);handleVertex(indices[j+1]);handleVertex(indices[j+2]);}}}computeVertexNormals(){const index=this.index;const positionAttribute=this.getAttribute('position');if(positionAttribute!==undefined){let normalAttribute=this.getAttribute('normal');if(normalAttribute===undefined){normalAttribute=new BufferAttribute(new Float32Array(positionAttribute.count*3),3);this.setAttribute('normal',normalAttribute);}else{// reset existing normals to zero\nfor(let i=0,il=normalAttribute.count;i<il;i++){normalAttribute.setXYZ(i,0,0,0);}}const pA=new Vector3(),pB=new Vector3(),pC=new Vector3();const nA=new Vector3(),nB=new Vector3(),nC=new Vector3();const cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){for(let i=0,il=index.count;i<il;i+=3){const vA=index.getX(i+0);const vB=index.getX(i+1);const vC=index.getX(i+2);pA.fromBufferAttribute(positionAttribute,vA);pB.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z);}}else{// non-indexed elements (unconnected triangle soup)\nfor(let i=0,il=positionAttribute.count;i<il;i+=3){pA.fromBufferAttribute(positionAttribute,i+0);pB.fromBufferAttribute(positionAttribute,i+1);pC.fromBufferAttribute(positionAttribute,i+2);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normalAttribute.setXYZ(i+0,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+1,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+2,cb.x,cb.y,cb.z);}}this.normalizeNormals();normalAttribute.needsUpdate=true;}}merge(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}const attributes=this.attributes;for(const key in attributes){if(geometry.attributes[key]===undefined)continue;const attribute1=attributes[key];const attributeArray1=attribute1.array;const attribute2=geometry.attributes[key];const attributeArray2=attribute2.array;const attributeOffset=attribute2.itemSize*offset;const length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(let i=0,j=attributeOffset;i<length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;}normalizeNormals(){const normals=this.attributes.normal;for(let i=0,il=normals.count;i<il;i++){_vector$8.fromBufferAttribute(normals,i);_vector$8.normalize();normals.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);}}toNonIndexed(){function convertBufferAttribute(attribute,indices){const array=attribute.array;const itemSize=attribute.itemSize;const normalized=attribute.normalized;const array2=new array.constructor(indices.length*itemSize);let index=0,index2=0;for(let i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(let j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');return this;}const geometry2=new BufferGeometry();const indices=this.index.array;const attributes=this.attributes;// attributes\nfor(const name in attributes){const attribute=attributes[name];const newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes\nconst morphAttributes=this.morphAttributes;for(const name in morphAttributes){const morphArray=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,il=morphAttribute.length;i<il;i++){const attribute=morphAttribute[i];const newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups\nconst groups=this.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;}toJSON(){const data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){const parameters=this.parameters;for(const key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}// for simplicity the code assumes attributes are not shared across geometries, see #15811\ndata.data={attributes:{}};const index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}const attributes=this.attributes;for(const key in attributes){const attribute=attributes[key];data.data.attributes[key]=attribute.toJSON(data.data);}const morphAttributes={};let hasMorphAttributes=false;for(const key in this.morphAttributes){const attributeArray=this.morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];array.push(attribute.toJSON(data.data));}if(array.length>0){morphAttributes[key]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}const groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}const boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;}clone(){/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */return new BufferGeometry().copy(this);}copy(source){// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// used for storing cloned, shared data\nconst data={};// name\nthis.name=source.name;// index\nconst index=source.index;if(index!==null){this.setIndex(index.clone(data));}// attributes\nconst attributes=source.attributes;for(const name in attributes){const attribute=attributes[name];this.setAttribute(name,attribute.clone(data));}// morph attributes\nconst morphAttributes=source.morphAttributes;for(const name in morphAttributes){const array=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone(data));}this.morphAttributes[name]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups\nconst groups=source.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nconst boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nconst boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}BufferGeometry.prototype.isBufferGeometry=true;const _inverseMatrix$2=/*@__PURE__*/new Matrix4();const _ray$2=/*@__PURE__*/new Ray();const _sphere$3=/*@__PURE__*/new Sphere();const _vA$1=/*@__PURE__*/new Vector3();const _vB$1=/*@__PURE__*/new Vector3();const _vC$1=/*@__PURE__*/new Vector3();const _tempA=/*@__PURE__*/new Vector3();const _tempB=/*@__PURE__*/new Vector3();const _tempC=/*@__PURE__*/new Vector3();const _morphA=/*@__PURE__*/new Vector3();const _morphB=/*@__PURE__*/new Vector3();const _morphC=/*@__PURE__*/new Vector3();const _uvA$1=/*@__PURE__*/new Vector2();const _uvB$1=/*@__PURE__*/new Vector2();const _uvC$1=/*@__PURE__*/new Vector2();const _intersectionPoint=/*@__PURE__*/new Vector3();const _intersectionPointWorld=/*@__PURE__*/new Vector3();class Mesh extends Object3D{constructor(geometry=new BufferGeometry(),material=new MeshBasicMaterial()){super();this.type='Mesh';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}this.material=source.material;this.geometry=source.geometry;return this;}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}raycast(raycaster,intersects){const geometry=this.geometry;const material=this.material;const matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//\n_inverseMatrix$2.copy(matrixWorld).invert();_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(_ray$2.intersectsBox(geometry.boundingBox)===false)return;}let intersection;if(geometry.isBufferGeometry){const index=geometry.index;const position=geometry.attributes.position;const morphPosition=geometry.morphAttributes.position;const morphTargetsRelative=geometry.morphTargetsRelative;const uv=geometry.attributes.uv;const uv2=geometry.attributes.uv2;const groups=geometry.groups;const drawRange=geometry.drawRange;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=index.getX(j);const b=index.getX(j+1);const c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=index.getX(i);const b=index.getX(i+1);const c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=j;const b=j+1;const c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(position.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=i;const b=i+1;const c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}Mesh.prototype.isMesh=true;function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){let intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA$1.fromBufferAttribute(position,a);_vB$1.fromBufferAttribute(position,b);_vC$1.fromBufferAttribute(position,c);const morphInfluences=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(let i=0,il=morphPosition.length;i<il;i++){const influence=morphInfluences[i];const morphAttribute=morphPosition[i];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA$1),influence);_morphB.addScaledVector(_tempB.sub(_vB$1),influence);_morphC.addScaledVector(_tempC.sub(_vC$1),influence);}}_vA$1.add(_morphA);_vB$1.add(_morphB);_vC$1.add(_morphC);}if(object.isSkinnedMesh){object.boneTransform(a,_vA$1);object.boneTransform(b,_vB$1);object.boneTransform(c,_vC$1);}const intersection=checkIntersection(object,material,raycaster,ray,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(intersection){if(uv){_uvA$1.fromBufferAttribute(uv,a);_uvB$1.fromBufferAttribute(uv,b);_uvC$1.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}if(uv2){_uvA$1.fromBufferAttribute(uv2,a);_uvB$1.fromBufferAttribute(uv2,b);_uvC$1.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}const face={a:a,b:b,c:c,normal:new Vector3(),materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,face.normal);intersection.face=face;}return intersection;}class BoxGeometry extends BufferGeometry{constructor(width=1,height=1,depth=1,widthSegments=1,heightSegments=1,depthSegments=1){super();this.type='BoxGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};const scope=this;// segments\nwidthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet numberOfVertices=0;let groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){const segmentWidth=width/gridX;const segmentHeight=height/gridY;const widthHalf=width/2;const heightHalf=height/2;const depthHalf=depth/2;const gridX1=gridX+1;const gridY1=gridY+1;let vertexCounter=0;let groupCount=0;const vector=new Vector3();// generate vertices, normals and uvs\nfor(let iy=0;iy<gridY1;iy++){const y=iy*segmentHeight-heightHalf;for(let ix=0;ix<gridX1;ix++){const x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=numberOfVertices+ix+gridX1*iy;const b=numberOfVertices+ix+gridX1*(iy+1);const c=numberOfVertices+(ix+1)+gridX1*(iy+1);const d=numberOfVertices+(ix+1)+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}}}/**\n * Uniform Utilities\n */function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy\nconst UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";var default_fragment=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class ShaderMaterial extends Material{constructor(parameters){super();this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog\nthis.lights=false;// set to use scene lights\nthis.clipping=false;// set to use user-defined clipping planes\nthis.morphTargets=false;// set to use morph targets\nthis.morphNormals=false;// set to use morph normals\nthis.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\nthis.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}copy(source){super.copy(source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this;}toJSON(meta){const data=super.toJSON(meta);data.glslVersion=this.glslVersion;data.uniforms={};for(const name in this.uniforms){const uniform=this.uniforms[name];const value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;const extensions={};for(const key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;}}ShaderMaterial.prototype.isShaderMaterial=true;class Camera extends Object3D{constructor(){super();this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}copy(source,recursive){super.copy(source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;}getWorldDirection(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();}updateMatrixWorld(force){super.updateMatrixWorld(force);this.matrixWorldInverse.copy(this.matrixWorld).invert();}updateWorldMatrix(updateParents,updateChildren){super.updateWorldMatrix(updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert();}clone(){return new this.constructor().copy(this);}}Camera.prototype.isCamera=true;class PerspectiveCamera extends Camera{constructor(fov=50,aspect=1,near=0.1,far=2000){super();this.type='PerspectiveCamera';this.fov=fov;this.zoom=1;this.near=near;this.far=far;this.focus=10;this.aspect=aspect;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)\nthis.filmOffset=0;// horizontal film offset (same unit as gauge)\nthis.updateProjectionMatrix();}copy(source,recursive){super.copy(source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;}/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */setFocalLength(focalLength){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */const vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();}/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */getFocalLength(){const vExtentSlope=Math.tan(DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;}getEffectiveFOV(){return RAD2DEG*2*Math.atan(Math.tan(DEG2RAD*0.5*this.fov)/this.zoom);}getFilmWidth(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);}getFilmHeight(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);}/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}updateProjectionMatrix(){const near=this.near;let top=near*Math.tan(DEG2RAD*0.5*this.fov)/this.zoom;let height=2*top;let width=this.aspect*height;let left=-0.5*width;const view=this.view;if(this.view!==null&&this.view.enabled){const fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}const skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}toJSON(meta){const data=super.toJSON(meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}}PerspectiveCamera.prototype.isPerspectiveCamera=true;const fov=90,aspect=1;class CubeCamera extends Object3D{constructor(near,far,renderTarget){super();this.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return;}this.renderTarget=renderTarget;const cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=this.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);const cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);const cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);const cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);const cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);const cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);}update(renderer,scene){if(this.parent===null)this.updateMatrixWorld();const renderTarget=this.renderTarget;const[cameraPX,cameraNX,cameraPY,cameraNY,cameraPZ,cameraNZ]=this.children;const currentXrEnabled=renderer.xr.enabled;const currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;}}class CubeTexture extends Texture{constructor(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;format=format!==undefined?format:RGBFormat;super(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);// Why CubeTexture._needsFlipEnvMap is necessary:\n//\n// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n// when using WebGLCubeRenderTarget.texture as a cube texture.\nthis._needsFlipEnvMap=true;this.flipY=false;}get images(){return this.image;}set images(value){this.image=value;}}CubeTexture.prototype.isCubeTexture=true;class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(size,options,dummy){if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}super(size,size,options);options=options||{};this.texture=new CubeTexture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.texture._needsFlipEnvMap=false;}fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type;this.texture.format=RGBAFormat;// see #18859\nthis.texture.encoding=texture.encoding;this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;const shader={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,fragmentShader:/* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`};const geometry=new BoxGeometry(5,5,5);const material=new ShaderMaterial({name:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;const mesh=new Mesh(geometry,material);const currentMinFilter=texture.minFilter;// Avoid blurred poles\nif(texture.minFilter===LinearMipmapLinearFilter)texture.minFilter=LinearFilter;const camera=new CubeCamera(1,10,this);camera.update(renderer,mesh);texture.minFilter=currentMinFilter;mesh.geometry.dispose();mesh.material.dispose();return this;}clear(renderer,color,depth,stencil){const currentRenderTarget=renderer.getRenderTarget();for(let i=0;i<6;i++){renderer.setRenderTarget(this,i);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);}}WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=true;const _sphere$2=/*@__PURE__*/new Sphere();const _vector$7=/*@__PURE__*/new Vector3();class Frustum{constructor(p0=new Plane(),p1=new Plane(),p2=new Plane(),p3=new Plane(),p4=new Plane(),p5=new Plane()){this.planes=[p0,p1,p2,p3,p4,p5];}set(p0,p1,p2,p3,p4,p5){const planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;}copy(frustum){const planes=this.planes;for(let i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;}setFromProjectionMatrix(m){const planes=this.planes;const me=m.elements;const me0=me[0],me1=me[1],me2=me[2],me3=me[3];const me4=me[4],me5=me[5],me6=me[6],me7=me[7];const me8=me[8],me9=me[9],me10=me[10],me11=me[11];const me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;}intersectsObject(object){const geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSprite(sprite){_sphere$2.center.set(0,0,0);_sphere$2.radius=0.7071067811865476;_sphere$2.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSphere(sphere){const planes=this.planes;const center=sphere.center;const negRadius=-sphere.radius;for(let i=0;i<6;i++){const distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;}intersectsBox(box){const planes=this.planes;for(let i=0;i<6;i++){const plane=planes[i];// corner at max distance\n_vector$7.x=plane.normal.x>0?box.max.x:box.min.x;_vector$7.y=plane.normal.y>0?box.max.y:box.min.y;_vector$7.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$7)<0){return false;}}return true;}containsPoint(point){const planes=this.planes;for(let i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}clone(){return new this.constructor().copy(this);}}function WebGLAnimation(){let context=null;let isAnimating=false;let animationLoop=null;let requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame);}return{start:function(){if(isAnimating===true)return;if(animationLoop===null)return;requestId=context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=false;},setAnimationLoop:function(callback){animationLoop=callback;},setContext:function(value){context=value;}};}function WebGLAttributes(gl,capabilities){const isWebGL2=capabilities.isWebGL2;const buffers=new WeakMap();function createBuffer(attribute,bufferType){const array=attribute.array;const usage=attribute.usage;const buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();let type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){if(attribute.isFloat16BufferAttribute){if(isWebGL2){type=5131;}else{console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');}}else{type=5123;}}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}else if(array instanceof Uint8ClampedArray){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){const array=attribute.array;const updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isGLBufferAttribute){const cached=buffers.get(attribute);if(!cached||cached.version<attribute.version){buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});}return;}if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}class PlaneGeometry extends BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super();this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};const width_half=width/2;const height_half=height/2;const gridX=Math.floor(widthSegments);const gridY=Math.floor(heightSegments);const gridX1=gridX+1;const gridY1=gridY+1;const segment_width=width/gridX;const segment_height=height/gridY;//\nconst indices=[];const vertices=[];const normals=[];const uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++){const x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}for(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=ix+gridX1*iy;const b=ix+gridX1*(iy+1);const c=ix+1+gridX1*(iy+1);const d=ix+1+gridX1*iy;indices.push(a,b,d);indices.push(b,c,d);}}this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";var bsdfs=\"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";var common=\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_common_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";var envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";var lights_pars_begin=\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";var lights_toon_fragment=\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";var lights_toon_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";var map_particle_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";var normal_fragment_maps=\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";var clearcoat_normal_fragment_begin=\"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";var clearcoat_normal_fragment_maps=\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";var clearcoat_pars_fragment=\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";var transmission_fragment=\"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\\n\\tvec3 f90 = vec3( 1.0 );\\n\\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\\n\\t\\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance);\\n\\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\\n#endif\";var transmission_pars_fragment=\"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\tfloat NdotV = saturate(dot(n, viewDir));\\n\\t\\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\\n\\t\\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";var uv_pars_fragment=\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";var background_frag=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var background_vert=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var cube_frag=\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var cube_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";var depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";var distanceRGBA_frag=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var distanceRGBA_vert=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var equirect_frag=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var equirect_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshmatcap_frag=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshmatcap_vert=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var meshtoon_frag=\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshtoon_vert=\"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphysical_frag=\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t\\tfloat thicknessFactor = thickness;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\tvec3 rawDiffuseColor = diffuseColor.rgb;\\n\\t#include <transmission_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphysical_vert=\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";var normal_frag=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var normal_vert=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var shadow_frag=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var shadow_vert=\"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var sprite_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var sprite_vert=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmission_fragment:transmission_fragment,transmission_pars_fragment:transmission_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**\n * Uniforms library for shared webgl shaders\n */const UniformsLib={common:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}}};const ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary\n}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0x000000)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2()},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(renderer,cubemaps,state,objects,premultipliedAlpha){const clearColor=new Color(0x000000);let clearAlpha=0;let planeMesh;let boxMesh;let currentBackground=null;let currentBackgroundVersion=0;let currentTonemapping=null;function render(renderList,scene){let forceClear=false;let background=scene.isScene===true?scene.background:null;if(background&&background.isTexture){background=cubemaps.get(background);}// Ignore background in AR\n// TODO: Reconsider this.\nconst xr=renderer.xr;const session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'envMap',{get:function(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&background._needsFlipEnvMap?-1:1;if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function(){return clearColor;},setClearColor:function(color,alpha=1){clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha);},getClearAlpha:function(){return clearAlpha;},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}function WebGLBindingStates(gl,extensions,attributes,capabilities){const maxVertexAttributes=gl.getParameter(34921);const extension=capabilities.isWebGL2?null:extensions.get('OES_vertex_array_object');const vaoAvailable=capabilities.isWebGL2||extension!==null;const bindingStates={};const defaultState=createBindingState(null);let currentState=defaultState;function setup(object,material,program,geometry,index){let updateBuffers=false;if(vaoAvailable){const state=getBindingState(geometry,program,material);if(currentState!==state){currentState=state;bindVertexArrayObject(currentState.object);}updateBuffers=needsUpdate(geometry,index);if(updateBuffers)saveCache(geometry,index);}else{const wireframe=material.wireframe===true;if(currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==wireframe){currentState.geometry=geometry.id;currentState.program=program.id;currentState.wireframe=wireframe;updateBuffers=true;}}if(object.isInstancedMesh===true){updateBuffers=true;}if(index!==null){attributes.update(index,34963);}if(updateBuffers){setupVertexAttributes(object,material,program,geometry);if(index!==null){gl.bindBuffer(34963,attributes.get(index).buffer);}}}function createVertexArrayObject(){if(capabilities.isWebGL2)return gl.createVertexArray();return extension.createVertexArrayOES();}function bindVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.bindVertexArray(vao);return extension.bindVertexArrayOES(vao);}function deleteVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.deleteVertexArray(vao);return extension.deleteVertexArrayOES(vao);}function getBindingState(geometry,program,material){const wireframe=material.wireframe===true;let programMap=bindingStates[geometry.id];if(programMap===undefined){programMap={};bindingStates[geometry.id]=programMap;}let stateMap=programMap[program.id];if(stateMap===undefined){stateMap={};programMap[program.id]=stateMap;}let state=stateMap[wireframe];if(state===undefined){state=createBindingState(createVertexArrayObject());stateMap[wireframe]=state;}return state;}function createBindingState(vao){const newAttributes=[];const enabledAttributes=[];const attributeDivisors=[];for(let i=0;i<maxVertexAttributes;i++){newAttributes[i]=0;enabledAttributes[i]=0;attributeDivisors[i]=0;}return{// for backward compatibility on non-VAO support browser\ngeometry:null,program:null,wireframe:false,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null};}function needsUpdate(geometry,index){const cachedAttributes=currentState.attributes;const geometryAttributes=geometry.attributes;let attributesNum=0;for(const key in geometryAttributes){const cachedAttribute=cachedAttributes[key];const geometryAttribute=geometryAttributes[key];if(cachedAttribute===undefined)return true;if(cachedAttribute.attribute!==geometryAttribute)return true;if(cachedAttribute.data!==geometryAttribute.data)return true;attributesNum++;}if(currentState.attributesNum!==attributesNum)return true;if(currentState.index!==index)return true;return false;}function saveCache(geometry,index){const cache={};const attributes=geometry.attributes;let attributesNum=0;for(const key in attributes){const attribute=attributes[key];const data={};data.attribute=attribute;if(attribute.data){data.data=attribute.data;}cache[key]=data;attributesNum++;}currentState.attributes=cache;currentState.attributesNum=attributesNum;currentState.index=index;}function initAttributes(){const newAttributes=currentState.newAttributes;for(let i=0,il=newAttributes.length;i<il;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;const attributeDivisors=currentState.attributeDivisors;newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){const extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;for(let i=0,il=enabledAttributes.length;i<il;i++){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(capabilities.isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function setupVertexAttributes(object,material,program,geometry){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}initAttributes();const geometryAttributes=geometry.attributes;const programAttributes=program.getAttributes();const materialDefaultAttributeValues=material.defaultAttributeValues;for(const name in programAttributes){const programAttribute=programAttributes[name];if(programAttribute>=0){const geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){const normalized=geometryAttribute.normalized;const size=geometryAttribute.itemSize;const attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;const bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){const data=geometryAttribute.data;const stride=data.stride;const offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(name==='instanceMatrix'){const attribute=attributes.get(object.instanceMatrix);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute+0,1);enableAttributeAndDivisor(programAttribute+1,1);enableAttributeAndDivisor(programAttribute+2,1);enableAttributeAndDivisor(programAttribute+3,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute+0,4,type,false,64,0);gl.vertexAttribPointer(programAttribute+1,4,type,false,64,16);gl.vertexAttribPointer(programAttribute+2,4,type,false,64,32);gl.vertexAttribPointer(programAttribute+3,4,type,false,64,48);}else if(name==='instanceColor'){const attribute=attributes.get(object.instanceColor);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute,3,type,false,12,0);}else if(materialDefaultAttributeValues!==undefined){const value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:gl.vertexAttrib2fv(programAttribute,value);break;case 3:gl.vertexAttrib3fv(programAttribute,value);break;case 4:gl.vertexAttrib4fv(programAttribute,value);break;default:gl.vertexAttrib1fv(programAttribute,value);}}}}}disableUnusedAttributes();}function dispose(){reset();for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometryId];}}function releaseStatesOfGeometry(geometry){if(bindingStates[geometry.id]===undefined)return;const programMap=bindingStates[geometry.id];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometry.id];}function releaseStatesOfProgram(program){for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];if(programMap[program.id]===undefined)continue;const stateMap=programMap[program.id];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[program.id];}}function reset(){resetDefaultState();if(currentState===defaultState)return;currentState=defaultState;bindVertexArrayObject(currentState.object);}// for backward-compatilibity\nfunction resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=false;}return{setup:setup,reset:reset,resetDefaultState:resetDefaultState,dispose:dispose,releaseStatesOfGeometry:releaseStatesOfGeometry,releaseStatesOfProgram:releaseStatesOfProgram,initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes};}function WebGLBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}function WebGLCapabilities(gl,extensions,parameters){let maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */const isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */let precision=parameters.precision!==undefined?parameters.precision:'highp';const maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}const drawBuffers=isWebGL2||extensions.has('WEBGL_draw_buffers');const logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;const maxTextures=gl.getParameter(34930);const maxVertexTextures=gl.getParameter(35660);const maxTextureSize=gl.getParameter(3379);const maxCubemapSize=gl.getParameter(34076);const maxAttributes=gl.getParameter(34921);const maxVertexUniforms=gl.getParameter(36347);const maxVaryings=gl.getParameter(36348);const maxFragmentUniforms=gl.getParameter(36349);const vertexTextures=maxVertexTextures>0;const floatFragmentTextures=isWebGL2||extensions.has('OES_texture_float');const floatVertexTextures=vertexTextures&&floatFragmentTextures;const maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,drawBuffers:drawBuffers,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}function WebGLClipping(properties){const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false;const plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){const enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;const materialProperties=properties.get(material);if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{const nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4;let dstArray=materialProperties.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,useCache);for(let i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}materialProperties.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=planes!==null?planes.length:0;let dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){const flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}function WebGLCubeMaps(renderer){let cubemaps=new WeakMap();function mapTextureMapping(texture,mapping){if(mapping===EquirectangularReflectionMapping){texture.mapping=CubeReflectionMapping;}else if(mapping===EquirectangularRefractionMapping){texture.mapping=CubeRefractionMapping;}return texture;}function get(texture){if(texture&&texture.isTexture){const mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){const cubemap=cubemaps.get(texture).texture;return mapTextureMapping(cubemap,texture.mapping);}else{const image=texture.image;if(image&&image.height>0){const currentRenderTarget=renderer.getRenderTarget();const renderTarget=new WebGLCubeRenderTarget(image.height/2);renderTarget.fromEquirectangularTexture(renderer,texture);cubemaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);texture.addEventListener('dispose',onTextureDispose);return mapTextureMapping(renderTarget.texture,texture.mapping);}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);const cubemap=cubemaps.get(texture);if(cubemap!==undefined){cubemaps.delete(texture);cubemap.dispose();}}function dispose(){cubemaps=new WeakMap();}return{get:get,dispose:dispose};}function WebGLExtensions(gl){const extensions={};function getExtension(name){if(extensions[name]!==undefined){return extensions[name];}let extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}extensions[name]=extension;return extension;}return{has:function(name){return getExtension(name)!==null;},init:function(capabilities){if(capabilities.isWebGL2){getExtension('EXT_color_buffer_float');}else{getExtension('WEBGL_depth_texture');getExtension('OES_texture_float');getExtension('OES_texture_half_float');getExtension('OES_texture_half_float_linear');getExtension('OES_standard_derivatives');getExtension('OES_element_index_uint');getExtension('OES_vertex_array_object');getExtension('ANGLE_instanced_arrays');}getExtension('OES_texture_float_linear');getExtension('EXT_color_buffer_half_float');},get:function(name){const extension=getExtension(name);if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}return extension;}};}function WebGLGeometries(gl,attributes,info,bindingStates){const geometries={};const wireframeAttributes=new WeakMap();function onGeometryDispose(event){const geometry=event.target;if(geometry.index!==null){attributes.remove(geometry.index);}for(const name in geometry.attributes){attributes.remove(geometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];const attribute=wireframeAttributes.get(geometry);if(attribute){attributes.remove(attribute);wireframeAttributes.delete(geometry);}bindingStates.releaseStatesOfGeometry(geometry);if(geometry.isInstancedBufferGeometry===true){delete geometry._maxInstanceCount;}//\ninfo.memory.geometries--;}function get(object,geometry){if(geometries[geometry.id]===true)return geometry;geometry.addEventListener('dispose',onGeometryDispose);geometries[geometry.id]=true;info.memory.geometries++;return geometry;}function update(geometry){const geometryAttributes=geometry.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.\nfor(const name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nconst morphAttributes=geometry.morphAttributes;for(const name in morphAttributes){const array=morphAttributes[name];for(let i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function updateWireframeAttribute(geometry){const indices=[];const geometryIndex=geometry.index;const geometryPosition=geometry.attributes.position;let version=0;if(geometryIndex!==null){const array=geometryIndex.array;version=geometryIndex.version;for(let i=0,l=array.length;i<l;i+=3){const a=array[i+0];const b=array[i+1];const c=array[i+2];indices.push(a,b,b,c,c,a);}}else{const array=geometryPosition.array;version=geometryPosition.version;for(let i=0,l=array.length/3-1;i<l;i+=3){const a=i+0;const b=i+1;const c=i+2;indices.push(a,b,b,c,c,a);}}const attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;// Updating index buffer in VAO now. See WebGLBindingStates\n//\nconst previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//\nwireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one\nif(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}let type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}function WebGLInfo(gl){const memory={geometries:0,textures:0};const render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}function numericalSort(a,b){return a[0]-b[0];}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){const influencesList={};const morphInfluences=new Float32Array(8);const workInfluences=[];for(let i=0;i<8;i++){workInfluences[i]=[i,0];}function update(object,geometry,material,program){const objectInfluences=object.morphTargetInfluences;// When object doesn't have morph target influences defined, we treat it as a 0-length array\n// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\nconst length=objectInfluences===undefined?0:objectInfluences.length;let influences=influencesList[geometry.id];if(influences===undefined){// initialise list\ninfluences=[];for(let i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}// Collect influences\nfor(let i=0;i<length;i++){const influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);for(let i=0;i<8;i++){if(i<length&&influences[i][1]){workInfluences[i][0]=influences[i][0];workInfluences[i][1]=influences[i][1];}else{workInfluences[i][0]=Number.MAX_SAFE_INTEGER;workInfluences[i][1]=0;}}workInfluences.sort(numericalSort);const morphTargets=material.morphTargets&&geometry.morphAttributes.position;const morphNormals=material.morphNormals&&geometry.morphAttributes.normal;let morphInfluencesSum=0;for(let i=0;i<8;i++){const influence=workInfluences[i];const index=influence[0];const value=influence[1];if(index!==Number.MAX_SAFE_INTEGER&&value){if(morphTargets&&geometry.getAttribute('morphTarget'+i)!==morphTargets[index]){geometry.setAttribute('morphTarget'+i,morphTargets[index]);}if(morphNormals&&geometry.getAttribute('morphNormal'+i)!==morphNormals[index]){geometry.setAttribute('morphNormal'+i,morphNormals[index]);}morphInfluences[i]=value;morphInfluencesSum+=value;}else{if(morphTargets&&geometry.hasAttribute('morphTarget'+i)===true){geometry.deleteAttribute('morphTarget'+i);}if(morphNormals&&geometry.hasAttribute('morphNormal'+i)===true){geometry.deleteAttribute('morphNormal'+i);}morphInfluences[i]=0;}}// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n// This allows us to switch between absolute morphs and relative morphs without changing shader code\n// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\nconst morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}function WebGLObjects(gl,geometries,attributes,info){let updateMap=new WeakMap();function update(object){const frame=info.render.frame;const geometry=object.geometry;const buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateMap.get(buffergeometry)!==frame){geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){if(object.hasEventListener('dispose',onInstancedMeshDispose)===false){object.addEventListener('dispose',onInstancedMeshDispose);}attributes.update(object.instanceMatrix,34962);if(object.instanceColor!==null){attributes.update(object.instanceColor,34962);}}return buffergeometry;}function dispose(){updateMap=new WeakMap();}function onInstancedMeshDispose(event){const instancedMesh=event.target;instancedMesh.removeEventListener('dispose',onInstancedMeshDispose);attributes.remove(instancedMesh.instanceMatrix);if(instancedMesh.instanceColor!==null)attributes.remove(instancedMesh.instanceColor);}return{update:update,dispose:dispose};}class DataTexture2DArray extends Texture{constructor(data=null,width=1,height=1,depth=1){super(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture2DArray.prototype.isDataTexture2DArray=true;class DataTexture3D extends Texture{constructor(data=null,width=1,height=1,depth=1){// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\nsuper(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture3D.prototype.isDataTexture3D=true;/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */const emptyTexture=new Texture();const emptyTexture2dArray=new DataTexture2DArray();const emptyTexture3d=new DataTexture3D();const emptyCubeTexture=new CubeTexture();// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nconst arrayCacheF32=[];const arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nconst mat4array=new Float32Array(16);const mat3array=new Float32Array(9);const mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){const firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nconst n=nBlocks*blockSize;let r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(let i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(let i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(let i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation\nfunction allocTexUnits(textures,n){let r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(let i=0;i!==n;++i){r[i]=textures.allocateTextureUnit();}return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValueV1f(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValueV2f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or THREE.MatrixN)\nfunction setValueM2(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single integer / boolean\nfunction setValueV1i(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}// Single integer / boolean vector (from flat array)\nfunction setValueV2i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// Single unsigned integer\nfunction setValueV1ui(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Single unsigned integer vector (from flat array)\nfunction setValueV2ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2uiv(this.addr,v);copyArray(cache,v);}function setValueV3ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3uiv(this.addr,v);copyArray(cache,v);}function setValueV4ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4uiv(this.addr,v);copyArray(cache,v);}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT3D1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}function setValueT2DArray1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT\ncase 0x8b50:return setValueV2f;// _VEC2\ncase 0x8b51:return setValueV3f;// _VEC3\ncase 0x8b52:return setValueV4f;// _VEC4\ncase 0x8b5a:return setValueM2;// _MAT2\ncase 0x8b5b:return setValueM3;// _MAT3\ncase 0x8b5c:return setValueM4;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2i;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3i;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4i;// _VEC4\ncase 0x1405:return setValueV1ui;// UINT\ncase 0x8dc6:return setValueV2ui;// _VEC2\ncase 0x8dc7:return setValueV3ui;// _VEC3\ncase 0x8dc8:return setValueV4ui;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1;case 0x8b5f:// SAMPLER_3D\ncase 0x8dcb:// INT_SAMPLER_3D\ncase 0x8dd3:// UNSIGNED_INT_SAMPLER_3D\nreturn setValueT3D1;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY\ncase 0x8dcf:// INT_SAMPLER_2D_ARRAY\ncase 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY\ncase 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW\nreturn setValueT2DArray1;}}// Array of scalars\nfunction setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Array of vectors (from flat array or array of THREE.VectorN)\nfunction setValueV2fArray(gl,v){const data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){const data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){const data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (from flat array or array of THREE.MatrixN)\nfunction setValueM2Array(gl,v){const data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){const data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){const data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of integer / boolean\nfunction setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}// Array of integer / boolean vectors (from flat array)\nfunction setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of unsigned integer\nfunction setValueV1uiArray(gl,v){gl.uniform1uiv(this.addr,v);}// Array of unsigned integer vectors (from flat array)\nfunction setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v);}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v);}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v);}// Array of textures (2D / Cube)\nfunction setValueT1Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT\ncase 0x8b50:return setValueV2fArray;// _VEC2\ncase 0x8b51:return setValueV3fArray;// _VEC3\ncase 0x8b52:return setValueV4fArray;// _VEC4\ncase 0x8b5a:return setValueM2Array;// _MAT2\ncase 0x8b5b:return setValueM3Array;// _MAT3\ncase 0x8b5c:return setValueM4Array;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4\ncase 0x1405:return setValueV1uiArray;// UINT\ncase 0x8dc6:return setValueV2uiArray;// _VEC2\ncase 0x8dc7:return setValueV3uiArray;// _VEC3\ncase 0x8dc8:return setValueV4uiArray;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1Array;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6Array;}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){const cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){const seq=this.seq;for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nconst RePathPart=/(\\w+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){const path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){const match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;let id=match[1];const idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nconst map=container.map;let next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program){this.seq=[];this.map={};const n=gl.getProgramParameter(program,35718);for(let i=0;i<n;++i){const info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){const u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){const v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,textures){for(let i=0,n=seq.length;i!==n;++i){const u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){const r=[];for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];if(u.id in values)r.push(u);}return r;};function WebGLShader(gl,type,string){const shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}let programIdCount=0;function addLineNumbers(string){const lines=string.split('\\n');for(let i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:console.warn('THREE.WebGLProgram: Unsupported encoding:',encoding);return['Linear','( value )'];}}function getShaderErrors(gl,shader,type){const status=gl.getShaderParameter(shader,35713);const log=gl.getShaderInfoLog(shader).trim();if(status&&log==='')return'';// --enable-privileged-webgl-extension\n// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nconst source=gl.getShaderSource(shader);return'THREE.WebGLShader: gl.getShaderInfoLog() '+type+'\\n'+log+addLineNumbers(source);}function getTexelDecodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){let toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;case CustomToneMapping:toneMappingName='Custom';break;default:console.warn('THREE.WebGLProgram: Unsupported toneMapping:',toneMapping);toneMappingName='Linear';}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){const chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap||parameters.transmission>0.0)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){const chunks=[];for(const name in defines){const value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){const attributes={};const n=gl.getProgramParameter(program,35721);for(let i=0;i<n;i++){const info=gl.getActiveAttrib(program,i);const name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes\nconst includePattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){const string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops\nconst deprecatedUnrollLoopPattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;const unrollLoopPattern=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){let string='';for(let i=parseInt(start);i<parseInt(end);i++){string+=snippet.replace(/\\[\\s*i\\s*\\]/g,'[ '+i+' ]').replace(/UNROLLED_LOOP_INDEX/g,i);}return string;}//\nfunction generatePrecision(parameters){let precisionstring='precision '+parameters.precision+' float;\\nprecision '+parameters.precision+' int;';if(parameters.precision==='highp'){precisionstring+='\\n#define HIGH_PRECISION';}else if(parameters.precision==='mediump'){precisionstring+='\\n#define MEDIUM_PRECISION';}else if(parameters.precision==='lowp'){precisionstring+='\\n#define LOW_PRECISION';}return precisionstring;}function generateShadowMapTypeDefine(parameters){let shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){let envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){let envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){let envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){const gl=renderer.getContext();const defines=parameters.defines;let vertexShader=parameters.vertexShader;let fragmentShader=parameters.fragmentShader;const shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);const envMapTypeDefine=generateEnvMapTypeDefine(parameters);const envMapModeDefine=generateEnvMapModeDefine(parameters);const envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);const gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;const customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);const customDefines=generateDefines(defines);const program=gl.createProgram();let prefixVertex,prefixFragment;let versionString=parameters.glslVersion?'#version '+parameters.glslVersion+'\\n':'';if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.instancingColor?'#define USE_INSTANCING_COLOR':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#if defined( USE_COLOR_ALPHA )','\tattribute vec4 color;','#elif defined( USE_COLOR )','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer\n'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.sheen?'#define USE_SHEEN':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors||parameters.instancingColor?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',ShaderChunk['encodings_pars_fragment'],// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.map?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcap?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMap?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMap?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.lightMap?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding),parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&parameters.isRawShaderMaterial!==true){// GLSL 3.0 conversion for built-in materials and ShaderMaterial\nversionString='#version 300 es\\n';prefixVertex=['#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#define varying in',parameters.glslVersion===GLSL3?'':'out highp vec4 pc_fragColor;',parameters.glslVersion===GLSL3?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}const vertexGlsl=versionString+prefixVertex+vertexShader;const fragmentGlsl=versionString+prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nconst glVertexShader=WebGLShader(gl,35633,vertexGlsl);const glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors\nif(renderer.debug.checkShaderErrors){const programLog=gl.getProgramInfoLog(program).trim();const vertexLog=gl.getShaderInfoLog(glVertexShader).trim();const fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();let runnable=true;let haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;const vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');const fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexErrors,fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up\n// Crashes in iOS9 and iOS10. #18402\n// gl.detachShader( program, glVertexShader );\n// gl.detachShader( program, glFragmentShader );\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nlet cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations\nlet cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);this.program=undefined;};//\nthis.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}function WebGLPrograms(renderer,cubemaps,extensions,capabilities,bindingStates,clipping){const programs=[];const isWebGL2=capabilities.isWebGL2;const logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;const floatVertexTextures=capabilities.floatVertexTextures;const maxVertexUniforms=capabilities.maxVertexUniforms;const vertexTextures=capabilities.vertexTextures;let precision=capabilities.precision;const shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};const parameterNames=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','vertexAlphas','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','sheen','transmission','transmissionMap','thicknessMap'];function getMaxBones(object){const skeleton=object.skeleton;const bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nconst nVertexUniforms=maxVertexUniforms;const nVertexMatrices=Math.floor((nVertexUniforms-20)/4);const maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){let encoding;if(map&&map.isTexture){encoding=map.encoding;}else if(map&&map.isWebGLRenderTarget){console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');encoding=map.texture.encoding;}else{encoding=LinearEncoding;}return encoding;}function getParameters(material,lights,shadows,scene,object){const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const envMap=cubemaps.get(material.envMap||environment);const shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nconst maxBones=object.isSkinnedMesh?getMaxBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}let vertexShader,fragmentShader;if(shaderID){const shader=ShaderLib[shaderID];vertexShader=shader.vertexShader;fragmentShader=shader.fragmentShader;}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;}const currentRenderTarget=renderer.getRenderTarget();const parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:material.type,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial===true,glslVersion:material.glslVersion,precision:precision,instancing:object.isInstancedMesh===true,instancingColor:object.isInstancedMesh===true&&object.instanceColor!==null,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,transmission:!!material.transmission,transmissionMap:!!material.transmissionMap,thicknessMap:!!material.thicknessMap,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexAlphas:material.vertexColors===true&&object.geometry&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap||!!material.transmission||!!material.transmissionMap||!!material.thicknessMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap||!!material.transmission||!!material.transmissionMap||!!material.thicknessMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:!!material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:object.isSkinnedMesh===true&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.has('EXT_frag_depth'),rendererExtensionDrawBuffers:isWebGL2||extensions.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:isWebGL2||extensions.has('EXT_shader_texture_lod'),customProgramCacheKey:material.customProgramCacheKey()};return parameters;}function getProgramCacheKey(parameters){const array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(const name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===false){for(let i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.customProgramCacheKey);return array.join();}function getUniforms(material){const shaderID=shaderIDs[material.type];let uniforms;if(shaderID){const shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms);}else{uniforms=material.uniforms;}return uniforms;}function acquireProgram(parameters,cacheKey){let program;// Check if code has been already compiled\nfor(let p=0,pl=programs.length;p<pl;p++){const preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates);programs.push(program);}return program;}function releaseProgram(program){if(--program.usedTimes===0){// Remove from unordered set\nconst i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}}return{getParameters:getParameters,getProgramCacheKey:getProgramCacheKey,getUniforms:getUniforms,acquireProgram:acquireProgram,releaseProgram:releaseProgram,// Exposed for resource monitoring & error feedback via renderer.info:\nprograms:programs};}function WebGLProperties(){let properties=new WeakMap();function get(object){let map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(properties){const renderItems=[];let renderItemsIndex=0;const opaque=[];const transmissive=[];const transparent=[];const defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transmissive.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){let renderItem=renderItems[renderItemsIndex];const materialProperties=properties.get(material);if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:materialProperties.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=materialProperties.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.push(renderItem);}else if(material.transparent===true){transparent.push(renderItem);}else{opaque.push(renderItem);}}function unshift(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.unshift(renderItem);}else if(material.transparent===true){transparent.unshift(renderItem);}else{opaque.unshift(renderItem);}}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transmissive.length>1)transmissive.sort(customTransparentSort||reversePainterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list\nfor(let i=renderItemsIndex,il=renderItems.length;i<il;i++){const renderItem=renderItems[i];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transmissive:transmissive,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(properties){let lists=new WeakMap();function get(scene,renderCallDepth){let list;if(lists.has(scene)===false){list=new WebGLRenderList(properties);lists.set(scene,[list]);}else{if(renderCallDepth>=lists.get(scene).length){list=new WebGLRenderList(properties);lists.get(scene).push(list);}else{list=lists.get(scene)[renderCallDepth];}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}function UniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms\n}lights[light.id]=uniforms;return uniforms;}};}let nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(extensions,capabilities){const cache=new UniformsCache();const shadowCache=ShadowUniformsCache();const state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)state.probe.push(new Vector3());const vector3=new Vector3();const matrix4=new Matrix4();const matrix42=new Matrix4();function setup(lights){let r=0,g=0,b=0;for(let i=0;i<9;i++)state.probe[i].set(0,0,0);let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;let numDirectionalShadows=0;let numPointShadows=0;let numSpotShadows=0;lights.sort(shadowCastingLightsFirst);for(let i=0,l=lights.length;i<l;i++){const light=lights[i];const color=light.color;const intensity=light.intensity;const distance=light.distance;const shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isLightProbe){for(let j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){const uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.spotShadow[spotLength]=shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){const uniforms=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\nuniforms.color.copy(color).multiplyScalar(intensity);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);state.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;shadowUniforms.shadowCameraNear=shadow.camera.near;shadowUniforms.shadowCameraFar=shadow.camera.far;state.pointShadow[pointLength]=shadowUniforms;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){const uniforms=cache.get(light);uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}if(rectAreaLength>0){if(capabilities.isWebGL2){// WebGL 2\nstate.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else{// WebGL 1\nif(extensions.has('OES_texture_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else if(extensions.has('OES_texture_half_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_HALF_1;state.rectAreaLTC2=UniformsLib.LTC_HALF_2;}else{console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');}}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;const hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}function setupView(lights,camera){let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;const viewMatrix=camera.matrixWorldInverse;for(let i=0,l=lights.length;i<l;i++){const light=lights[i];if(light.isDirectionalLight){const uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);directionalLength++;}else if(light.isSpotLight){const uniforms=state.spot[spotLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);spotLength++;}else if(light.isRectAreaLight){const uniforms=state.rectArea[rectAreaLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);rectAreaLength++;}else if(light.isPointLight){const uniforms=state.point[pointLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);pointLength++;}else if(light.isHemisphereLight){const uniforms=state.hemi[hemiLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();hemiLength++;}}}return{setup:setup,setupView:setupView,state:state};}function WebGLRenderState(extensions,capabilities){const lights=new WebGLLights(extensions,capabilities);const lightsArray=[];const shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(){lights.setup(lightsArray);}function setupLightsView(camera){lights.setupView(lightsArray,camera);}const state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,setupLightsView:setupLightsView,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(extensions,capabilities){let renderStates=new WeakMap();function get(scene,renderCallDepth=0){let renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState(extensions,capabilities);renderStates.set(scene,[renderState]);}else{if(renderCallDepth>=renderStates.get(scene).length){renderState=new WebGLRenderState(extensions,capabilities);renderStates.get(scene).push(renderState);}else{renderState=renderStates.get(scene)[renderCallDepth];}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */class MeshDepthMaterial extends Material{constructor(parameters){super();this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.depthPacking=source.depthPacking;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;}}MeshDepthMaterial.prototype.isMeshDepthMaterial=true;/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */class MeshDistanceMaterial extends Material{constructor(parameters){super();this.type='MeshDistanceMaterial';this.referencePosition=new Vector3();this.nearDistance=1;this.farDistance=1000;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;}}MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;var vsm_frag=\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";var vsm_vert=\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";function WebGLShadowMap(_renderer,_objects,_capabilities){let _frustum=new Frustum();const _shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterials=[],_distanceMaterials=[],_materialCache={},_maxTextureSize=_capabilities.maxTextureSize;const shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};const shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:2.0/8.0,HALF_SAMPLE_RATE:1.0/8.0},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0}},vertexShader:vsm_vert,fragmentShader:vsm_frag});const shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;const fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute('position',new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));const fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);const scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;const currentRenderTarget=_renderer.getRenderTarget();const activeCubeFace=_renderer.getActiveCubeFace();const activeMipmapLevel=_renderer.getActiveMipmapLevel();const _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nfor(let i=0,il=lights.length;i<il;i++){const light=lights[i];const shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}if(shadow.autoUpdate===false&&shadow.needsUpdate===false)continue;_shadowMapSize.copy(shadow.mapSize);const shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize){if(_shadowMapSize.x>_maxTextureSize){_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>_maxTextureSize){_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){const pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){const pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();const viewportCount=shadow.getViewportCount();for(let vp=0;vp<viewportCount;vp++){const viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM\nif(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}shadow.needsUpdate=false;}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){const geometry=_objects.update(fullScreenMesh);// vertical pass\nshadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizontal pass\nshadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizontal.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null);}function getDepthMaterialVariant(useMorphing){const index=useMorphing<<0;let material=_depthMaterials[index];if(material===undefined){material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing});_depthMaterials[index]=material;}return material;}function getDistanceMaterialVariant(useMorphing){const index=useMorphing<<0;let material=_distanceMaterials[index];if(material===undefined){material=new MeshDistanceMaterial({morphTargets:useMorphing});_distanceMaterials[index]=material;}return material;}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){let result=null;let getMaterialVariant=getDepthMaterialVariant;let customMaterial=object.customDepthMaterial;if(light.isPointLight===true){getMaterialVariant=getDistanceMaterialVariant;customMaterial=object.customDistanceMaterial;}if(customMaterial===undefined){let useMorphing=false;if(material.morphTargets===true){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}result=getMaterialVariant(useMorphing);}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the\n// appropriate state\nconst keyA=result.uuid,keyB=material.uuid;let materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}let cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);const geometry=_objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let k=0,kl=groups.length;k<kl;k++){const group=groups[k];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){const depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){const depthMaterial=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,light,type);}}}function WebGLState(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function ColorBuffer(){let locked=false;const color=new Vector4();let currentColorMask=null;const currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function(lock){locked=lock;},setClear:function(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){let locked=false;let currentDepthMask=null;let currentDepthFunc=null;let currentDepthClear=null;return{setTest:function(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function(lock){locked=lock;},setClear:function(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){let locked=false;let currentStencilMask=null;let currentStencilFunc=null;let currentStencilRef=null;let currentStencilFuncMask=null;let currentStencilFail=null;let currentStencilZFail=null;let currentStencilZPass=null;let currentStencilClear=null;return{setTest:function(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function(lock){locked=lock;},setClear:function(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nconst colorBuffer=new ColorBuffer();const depthBuffer=new DepthBuffer();const stencilBuffer=new StencilBuffer();let enabledCapabilities={};let xrFramebuffer=null;let currentBoundFramebuffers={};let currentProgram=null;let currentBlendingEnabled=false;let currentBlending=null;let currentBlendEquation=null;let currentBlendSrc=null;let currentBlendDst=null;let currentBlendEquationAlpha=null;let currentBlendSrcAlpha=null;let currentBlendDstAlpha=null;let currentPremultipledAlpha=false;let currentFlipSided=null;let currentCullFace=null;let currentLineWidth=null;let currentPolygonOffsetFactor=null;let currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(35661);let lineWidthAvailable=false;let version=0;const glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}let currentTextureSlot=null;let currentBoundTextures={};const scissorParam=gl.getParameter(3088);const viewportParam=gl.getParameter(2978);const currentScissor=new Vector4().fromArray(scissorParam);const currentViewport=new Vector4().fromArray(viewportParam);function createTexture(type,target,count){const data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nconst texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(let i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}const emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function bindXRFramebuffer(framebuffer){if(framebuffer!==xrFramebuffer){gl.bindFramebuffer(36160,framebuffer);xrFramebuffer=framebuffer;}}function bindFramebuffer(target,framebuffer){if(framebuffer===null&&xrFramebuffer!==null)framebuffer=xrFramebuffer;// use active XR framebuffer if available\nif(currentBoundFramebuffers[target]!==framebuffer){gl.bindFramebuffer(target,framebuffer);currentBoundFramebuffers[target]=framebuffer;if(isWebGL2){// 36009 is equivalent to 36160\nif(target===36009){currentBoundFramebuffers[36160]=framebuffer;}if(target===36160){currentBoundFramebuffers[36009]=framebuffer;}}return true;}return false;}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}const equationToGL={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{const extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}const factorToGL={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled===true){disable(3042);currentBlendingEnabled=false;}return;}if(currentBlendingEnabled===false){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);let flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);const stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);material.alphaToCoverage===true?enable(32926):disable(32926);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}let boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){const boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){// reset state\ngl.disable(3042);gl.disable(2884);gl.disable(2929);gl.disable(32823);gl.disable(3089);gl.disable(2960);gl.disable(32926);gl.blendEquation(32774);gl.blendFunc(1,0);gl.blendFuncSeparate(1,0,1,0);gl.colorMask(true,true,true,true);gl.clearColor(0,0,0,0);gl.depthMask(true);gl.depthFunc(513);gl.clearDepth(1);gl.stencilMask(0xffffffff);gl.stencilFunc(519,0,0xffffffff);gl.stencilOp(7680,7680,7680);gl.clearStencil(0);gl.cullFace(1029);gl.frontFace(2305);gl.polygonOffset(0,0);gl.activeTexture(33984);gl.bindFramebuffer(36160,null);if(isWebGL2===true){gl.bindFramebuffer(36009,null);gl.bindFramebuffer(36008,null);}gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);// reset internals\nenabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};xrFramebuffer=null;currentBoundFramebuffers={};currentProgram=null;currentBlendingEnabled=false;currentBlending=null;currentBlendEquation=null;currentBlendSrc=null;currentBlendDst=null;currentBlendEquationAlpha=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentPremultipledAlpha=false;currentFlipSided=null;currentCullFace=null;currentLineWidth=null;currentPolygonOffsetFactor=null;currentPolygonOffsetUnits=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);currentViewport.set(0,0,gl.canvas.width,gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,bindFramebuffer:bindFramebuffer,bindXRFramebuffer:bindXRFramebuffer,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){const isWebGL2=capabilities.isWebGL2;const maxTextures=capabilities.maxTextures;const maxCubemapSize=capabilities.maxCubemapSize;const maxTextureSize=capabilities.maxTextureSize;const maxSamples=capabilities.maxSamples;const _videoTextures=new WeakMap();let _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\nlet useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext('2d')!==null;}catch(err){// Ignore any errors\n}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers\nreturn useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS('http://www.w3.org/1999/xhtml','canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){let scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){const floor=needsPowerOfTwo?floorPowerOfTwo:Math.floor;const width=floor(scale*image.width);const height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas\nconst canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;const context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo$1(image){return isPowerOfTwo(image.width)&&isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);const textureProperties=properties.get(texture);textureProperties.__maxMipLevel=Math.log2(Math.max(width,height));}function getInternalFormat(internalFormatName,glFormat,glType){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\''+internalFormatName+'\\'');}let internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures.delete(texture);}info.memory.textures--;}function onRenderTargetDispose(event){const renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);}//\nfunction deallocateTexture(texture){const textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);info.memory.textures--;}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(let i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}if(renderTarget.isWebGLMultipleRenderTargets){for(let i=0,il=texture.length;i<il;i++){const attachmentProperties=properties.get(texture[i]);if(attachmentProperties.__webglTexture){_gl.deleteTexture(attachmentProperties.__webglTexture);info.memory.textures--;}properties.remove(texture[i]);}}properties.remove(texture);properties.remove(renderTarget);}//\nlet textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){const textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//\nfunction setTexture2D(texture,slot){const textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){const image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadCubeTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}const wrappingToGL={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648};const filterToGL={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');if(texture.type===FloatType&&extensions.has('OES_texture_float_linear')===false)return;// verify extension for WebGL 1 and WebGL 2\nif(isWebGL2===false&&texture.type===HalfFloatType&&extensions.has('OES_texture_half_float_linear')===false)return;// verify extension for WebGL 1 only\nif(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){let textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo$1(texture.image)===false;const image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);const supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format);let glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,texture,supportsMips);let mipmap;const mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D\n}}else{if(texture.type===FloatType){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1\nif(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nglInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//\nstate.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}function uploadCubeTexture(textureProperties,texture,slot){if(texture.image.length!==6)return;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);const isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;const cubeImage=[];for(let i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}const image=cubeImage[0],supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);let mipmaps;if(isCompressed){for(let i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(let i=0;i<6;i++){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];const mipmapImage=mipmap.image[i].image;state.texImage2D(34069+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];state.texImage2D(34069+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,texture,attachment,textureTarget){const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(textureTarget===32879||textureTarget===35866){state.texImage3D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,renderTarget.depth,0,glFormat,glType,null);}else{state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);}state.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(texture).__webglTexture,0);state.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){let glInternalFormat=33189;if(isMultisample){const depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{// Use the first texture for MRT so far\nconst texture=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture[0]:renderTarget.texture;const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){const isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');state.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);const webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){const renderTargetProperties=properties.get(renderTarget);const isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(let i=0;i<6;i++){state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,false);}}else{state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}state.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);if(renderTarget.isWebGLMultipleRenderTargets!==true){textureProperties.__webglTexture=_gl.createTexture();textureProperties.__version=texture.version;info.memory.textures++;}const isCube=renderTarget.isWebGLCubeRenderTarget===true;const isMultipleRenderTargets=renderTarget.isWebGLMultipleRenderTargets===true;const isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;const isRenderTarget3D=texture.isDataTexture3D||texture.isDataTexture2DArray;const supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858\nif(isWebGL2&&texture.format===RGBFormat&&(texture.type===FloatType||texture.type===HalfFloatType)){texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(let i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultipleRenderTargets){if(capabilities.drawBuffers){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachmentProperties=properties.get(textures[i]);if(attachmentProperties.__webglTexture===undefined){attachmentProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}}else{console.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');}}else if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);state.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}state.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,texture,supportsMips);for(let i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,texture,36064,34069+i);}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(34067,texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else if(isMultipleRenderTargets){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachment=textures[i];const attachmentProperties=properties.get(attachment);state.bindTexture(3553,attachmentProperties.__webglTexture);setTextureParameters(3553,attachment,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,attachment,36064+i,3553);if(textureNeedsGenerateMipmaps(attachment,supportsMips)){generateMipmap(3553,attachment,renderTarget.width,renderTarget.height);}}state.bindTexture(3553,null);}else{let glTextureType=3553;if(isRenderTarget3D){// Render targets containing layers, i.e: Texture 3D and 2d arrays\nif(isWebGL2){const isTexture3D=texture.isDataTexture3D;glTextureType=isTexture3D?32879:35866;}else{console.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');}}state.bindTexture(glTextureType,textureProperties.__webglTexture);setTextureParameters(glTextureType,texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,texture,36064,glTextureType);if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(3553,texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){const supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;const textures=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture:[renderTarget.texture];for(let i=0,il=textures.length;i<il;i++){const texture=textures[i];if(textureNeedsGenerateMipmaps(texture,supportsMips)){const target=renderTarget.isWebGLCubeRenderTarget?34067:3553;const webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){const width=renderTarget.width;const height=renderTarget.height;let mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;const renderTargetProperties=properties.get(renderTarget);state.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);state.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);state.bindFramebuffer(36008,null);state.bindFramebuffer(36009,renderTargetProperties.__webglMultisampledFramebuffer);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){const frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility\nlet warnedTexture2D=false;let warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');warnedTextureCube=true;}texture=texture.texture;}setTextureCube(texture,slot);}//\nthis.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}function WebGLUtils(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function convert(p){let extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.\nif(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}class ArrayCamera extends PerspectiveCamera{constructor(array=[]){super();this.cameras=array;}}ArrayCamera.prototype.isArrayCamera=true;class Group extends Object3D{constructor(){super();this.type='Group';}}Group.prototype.isGroup=true;const _moveEvent={type:'move'};class WebXRController{constructor(){this._targetRay=null;this._grip=null;this._hand=null;}getHandSpace(){if(this._hand===null){this._hand=new Group();this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false};}return this._hand;}getTargetRaySpace(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;this._targetRay.hasLinearVelocity=false;this._targetRay.linearVelocity=new Vector3();this._targetRay.hasAngularVelocity=false;this._targetRay.angularVelocity=new Vector3();}return this._targetRay;}getGripSpace(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;this._grip.hasLinearVelocity=false;this._grip.linearVelocity=new Vector3();this._grip.hasAngularVelocity=false;this._grip.angularVelocity=new Vector3();}return this._grip;}dispatchEvent(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}if(this._hand!==null){this._hand.dispatchEvent(event);}return this;}disconnect(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}if(this._hand!==null){this._hand.visible=false;}return this;}update(inputSource,frame,referenceSpace){let inputPose=null;let gripPose=null;let handPose=null;const targetRay=this._targetRay;const grip=this._grip;const hand=this._hand;if(inputSource&&frame.session.visibilityState!=='visible-blurred'){if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);if(inputPose.linearVelocity){targetRay.hasLinearVelocity=true;targetRay.linearVelocity.copy(inputPose.linearVelocity);}else{targetRay.hasLinearVelocity=false;}if(inputPose.angularVelocity){targetRay.hasAngularVelocity=true;targetRay.angularVelocity.copy(inputPose.angularVelocity);}else{targetRay.hasAngularVelocity=false;}this.dispatchEvent(_moveEvent);}}if(hand&&inputSource.hand){handPose=true;for(const inputjoint of inputSource.hand.values()){// Update the joints groups with the XRJoint poses\nconst jointPose=frame.getJointPose(inputjoint,referenceSpace);if(hand.joints[inputjoint.jointName]===undefined){// The transform of this joint will be updated with the joint pose on each frame\nconst joint=new Group();joint.matrixAutoUpdate=false;joint.visible=false;hand.joints[inputjoint.jointName]=joint;// ??\nhand.add(joint);}const joint=hand.joints[inputjoint.jointName];if(jointPose!==null){joint.matrix.fromArray(jointPose.transform.matrix);joint.matrix.decompose(joint.position,joint.rotation,joint.scale);joint.jointRadius=jointPose.radius;}joint.visible=jointPose!==null;}// Custom events\n// Check pinchz\nconst indexTip=hand.joints['index-finger-tip'];const thumbTip=hand.joints['thumb-tip'];const distance=indexTip.position.distanceTo(thumbTip.position);const distanceToPinch=0.02;const threshold=0.005;if(hand.inputState.pinching&&distance>distanceToPinch+threshold){hand.inputState.pinching=false;this.dispatchEvent({type:'pinchend',handedness:inputSource.handedness,target:this});}else if(!hand.inputState.pinching&&distance<=distanceToPinch-threshold){hand.inputState.pinching=true;this.dispatchEvent({type:'pinchstart',handedness:inputSource.handedness,target:this});}}else{if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);if(gripPose.linearVelocity){grip.hasLinearVelocity=true;grip.linearVelocity.copy(gripPose.linearVelocity);}else{grip.hasLinearVelocity=false;}if(gripPose.angularVelocity){grip.hasAngularVelocity=true;grip.angularVelocity.copy(gripPose.angularVelocity);}else{grip.hasAngularVelocity=false;}}}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}if(hand!==null){hand.visible=handPose!==null;}return this;}}class WebXRManager extends EventDispatcher{constructor(renderer,gl){super();const scope=this;const state=renderer.state;let session=null;let framebufferScaleFactor=1.0;let referenceSpace=null;let referenceSpaceType='local-floor';let pose=null;const controllers=[];const inputSourcesMap=new Map();//\nconst cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();const cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();const cameras=[cameraL,cameraR];const cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);let _currentDepthNear=null;let _currentDepthFar=null;//\nthis.cameraAutoUpdate=true;this.enabled=false;this.isPresenting=false;this.getController=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};this.getControllerGrip=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};this.getHand=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getHandSpace();};//\nfunction onSessionEvent(event){const controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type,data:event.inputSource});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();_currentDepthNear=null;_currentDepthFar=null;// restore framebuffer/rendering state\nstate.bindXRFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());//\nanimation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};this.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};this.getReferenceSpace=function(){return referenceSpace;};this.getSession=function(){return session;};this.setSession=async function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.addEventListener('inputsourceschange',onInputSourcesChange);const attributes=gl.getContextAttributes();if(attributes.xrCompatible!==true){await gl.makeXRCompatible();}const layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};// eslint-disable-next-line no-undef\nconst baseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:baseLayer});referenceSpace=await session.requestReferenceSpace(referenceSpaceType);animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});}};function onInputSourcesChange(event){const inputSources=session.inputSources;// Assign inputSources to available controllers\nfor(let i=0;i<controllers.length;i++){inputSourcesMap.set(inputSources[i],controllers[i]);}// Notify disconnected\nfor(let i=0;i<event.removed.length;i++){const inputSource=event.removed[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap.delete(inputSource);}}// Notify connected\nfor(let i=0;i<event.added.length;i++){const inputSource=event.added[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'connected',data:inputSource});}}}//\nconst cameraLPos=new Vector3();const cameraRPos=new Vector3();/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);const ipd=cameraLPos.distanceTo(cameraRPos);const projL=cameraL.projectionMatrix.elements;const projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nconst near=projL[14]/(projL[10]-1);const far=projL[14]/(projL[10]+1);const topFov=(projL[9]+1)/projL[5];const bottomFov=(projL[9]-1)/projL[5];const leftFov=(projL[8]-1)/projL[0];const rightFov=(projR[8]+1)/projR[0];const left=near*leftFov;const right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nconst zOffset=ipd/(-leftFov+rightFov);const xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.copy(camera.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nconst near2=near+zOffset;const far2=far+zOffset;const left2=left-xOffset;const right2=right+(ipd-xOffset);const top2=topFov*far/far2*near2;const bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.copy(camera.matrixWorld).invert();}this.updateCamera=function(camera){if(session===null)return;cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320\nsession.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}const parent=camera.parent;const cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(let i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children\ncamera.matrixWorld.copy(cameraVR.matrixWorld);camera.matrix.copy(cameraVR.matrix);camera.matrix.decompose(camera.position,camera.quaternion,camera.scale);const children=camera.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling\nif(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)\ncameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}};this.getCamera=function(){return cameraVR;};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);if(pose!==null){const views=pose.views;const baseLayer=session.renderState.baseLayer;state.bindXRFramebuffer(baseLayer.framebuffer);let cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list\nif(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(let i=0;i<views.length;i++){const view=views[i];const viewport=baseLayer.getViewport(view);const camera=cameras[i];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}}//\nconst inputSources=session.inputSources;for(let i=0;i<controllers.length;i++){const controller=controllers[i];const inputSource=inputSources[i];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};}}function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,pixelRatio,height,transmissionRenderTarget){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material,transmissionRenderTarget);}else{refreshUniformsStandard(uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581\n}}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}const envMap=properties.get(material).envMap;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture&&envMap._needsFlipEnvMap?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;const maxMipLevel=properties.get(envMap).__maxMipLevel;if(maxMipLevel!==undefined){uniforms.maxMipLevel.value=maxMipLevel;}}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. displacementMap map\n// 4. normal map\n// 5. bump map\n// 6. roughnessMap map\n// 7. metalnessMap map\n// 8. alphaMap map\n// 9. emissiveMap map\n// 10. clearcoat map\n// 11. clearcoat normal map\n// 12. clearcoat roughnessMap map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}else if(material.clearcoatMap){uvScaleMap=material.clearcoatMap;}else if(material.clearcoatNormalMap){uvScaleMap=material.clearcoatNormalMap;}else if(material.clearcoatRoughnessMap){uvScaleMap=material.clearcoatRoughnessMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2\n// 1. ao map\n// 2. light map\nlet uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility\nif(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}const envMap=properties.get(material).envMap;if(envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material,transmissionRenderTarget){refreshUniformsStandard(uniforms,material);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common\nuniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.sheen)uniforms.sheen.value.copy(material.sheen);if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}uniforms.transmission.value=material.transmission;if(material.transmissionMap){uniforms.transmissionMap.value=material.transmissionMap;}if(material.transmission>0.0){uniforms.transmissionSamplerMap.value=transmissionRenderTarget.texture;uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width,transmissionRenderTarget.height);}uniforms.thickness.value=material.thickness;if(material.thicknessMap){uniforms.thicknessMap.value=material.thicknessMap;}uniforms.attenuationDistance.value=material.attenuationDistance;uniforms.attenuationColor.value.copy(material.attenuationColor);}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}function createCanvasElement(){const canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');canvas.style.display='block';return canvas;}function WebGLRenderer(parameters){parameters=parameters||{};const _canvas=parameters.canvas!==undefined?parameters.canvas:createCanvasElement(),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;let currentRenderList=null;let currentRenderState=null;// render() can be called from within a callback triggered by another render.\n// We track this so that the nested render call gets its list and state isolated from the parent render call.\nconst renderListStack=[];const renderStateStack=[];// public properties\nthis.domElement=_canvas;// Debug configuration container\nthis.debug={/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */checkShaderErrors:true};// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.outputEncoding=LinearEncoding;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;// internal properties\nconst _this=this;let _isContextLost=false;// internal state cache\nlet _currentActiveCubeFace=0;let _currentActiveMipmapLevel=0;let _currentRenderTarget=null;let _currentMaterialId=-1;let _currentCamera=null;const _currentViewport=new Vector4();const _currentScissor=new Vector4();let _currentScissorTest=null;//\nlet _width=_canvas.width;let _height=_canvas.height;let _pixelRatio=1;let _opaqueSort=null;let _transparentSort=null;const _viewport=new Vector4(0,0,_width,_height);const _scissor=new Vector4(0,0,_width,_height);let _scissorTest=false;//\nconst _currentDrawBuffers=[];// frustum\nconst _frustum=new Frustum();// clipping\nlet _clippingEnabled=false;let _localClippingEnabled=false;// transmission\nlet _transmissionRenderTarget=null;// camera matrices cache\nconst _projScreenMatrix=new Matrix4();const _vector3=new Vector3();const _emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nlet _gl=_context;function getContext(contextNames,contextAttributes){for(let i=0;i<contextNames.length;i++){const contextName=contextNames[i];const context=_canvas.getContext(contextName,contextAttributes);if(context!==null)return context;}return null;}try{const contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);if(_gl===null){const contextNames=['webgl2','webgl','experimental-webgl'];if(_this.isWebGL1Renderer===true){contextNames.shift();}_gl=getContext(contextNames,contextAttributes);if(_gl===null){if(getContext(contextNames)){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}let extensions,capabilities,state,info;let properties,textures,cubemaps,attributes,geometries,objects;let programCache,materials,renderLists,renderStates,clipping,shadowMap;let background,morphtargets,bufferRenderer,indexedBufferRenderer;let utils,bindingStates;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);extensions.init(capabilities);utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);_currentDrawBuffers[0]=1029;info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,extensions,capabilities,bindingStates,clipping);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists(properties);renderStates=new WebGLRenderStates(extensions,capabilities);background=new WebGLBackground(_this,cubemaps,state,objects,_premultipliedAlpha);shadowMap=new WebGLShadowMap(_this,objects,capabilities);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.shadowMap=shadowMap;_this.state=state;_this.info=info;}initGLContext();// xr\nconst xr=new WebXRManager(_this,_gl);this.xr=xr;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){if(target===undefined){console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');target=new Vector4();}return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing\nthis.getClearColor=function(target){if(target===undefined){console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');target=new Color();}return target.copy(background.getClearColor());};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){let bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();objects.dispose();bindingStates.dispose();xr.dispose();xr.removeEventListener('sessionstart',onXRSessionStart);xr.removeEventListener('sessionend',onXRSessionEnd);if(_transmissionRenderTarget){_transmissionRenderTarget.dispose();_transmissionRenderTarget=null;}animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore()/* event */{console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;const infoAutoReset=info.autoReset;const shadowMapEnabled=shadowMap.enabled;const shadowMapAutoUpdate=shadowMap.autoUpdate;const shadowMapNeedsUpdate=shadowMap.needsUpdate;const shadowMapType=shadowMap.type;initGLContext();info.autoReset=infoAutoReset;shadowMap.enabled=shadowMapEnabled;shadowMap.autoUpdate=shadowMapAutoUpdate;shadowMap.needsUpdate=shadowMapNeedsUpdate;shadowMap.type=shadowMapType;}function onMaterialDispose(event){const material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReferences(material);properties.remove(material);}function releaseMaterialProgramReferences(material){const programs=properties.get(material).programs;if(programs!==undefined){programs.forEach(function(program){programCache.releaseProgram(program);});}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();const buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();const programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);bindingStates.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);bindingStates.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);bindingStates.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);bindingStates.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=_emptyScene;// renderBufferDirect second parameter used to be fog (could be null)\nconst frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;const program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);//\nlet index=geometry.index;const position=geometry.attributes.position;//\nif(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//\nlet rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}if(material.morphTargets||material.morphNormals){morphtargets.update(object,geometry,material,program);}bindingStates.setup(object,material,program,geometry,index);let attribute;let renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}//\nconst dataCount=index!==null?index.count:position.count;const rangeStart=geometry.drawRange.start*rangeFactor;const rangeCount=geometry.drawRange.count*rangeFactor;const groupStart=group!==null?group.start*rangeFactor:0;const groupCount=group!==null?group.count*rangeFactor:Infinity;const drawStart=Math.max(rangeStart,groupStart);const drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;const drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){let lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){const instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene);currentRenderState.init();scene.traverseVisible(function(object){if(object.isLight&&object.layers.test(camera.layers)){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights();scene.traverse(function(object){const material=object.material;if(material){if(Array.isArray(material)){for(let i=0;i<material.length;i++){const material2=material[i];getProgram(material2,scene,object);}}else{getProgram(material,scene,object);}}});};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time){if(onAnimationFrameCallback)onAnimationFrameCallback(time);}function onXRSessionStart(){animation.stop();}function onXRSessionEnd(){animation.start();}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);callback===null?animation.stop():animation.start();};xr.addEventListener('sessionstart',onXRSessionStart);xr.addEventListener('sessionend',onXRSessionEnd);// Rendering\nthis.render=function(scene,camera){if(camera!==undefined&&camera.isCamera!==true){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost===true)return;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled===true&&xr.isPresenting===true){if(xr.cameraAutoUpdate===true)xr.updateCamera(camera);camera=xr.getCamera();// use XR camera for rendering\n}//\nif(scene.isScene===true)scene.onBeforeRender(_this,scene,camera,_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init();renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,renderListStack.length);currentRenderList.init();renderListStack.push(currentRenderList);projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//\nif(_clippingEnabled===true)clipping.beginShadows();const shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights();currentRenderState.setupLightsView(camera);if(_clippingEnabled===true)clipping.endShadows();//\nif(this.info.autoReset===true)this.info.reset();//\nbackground.render(currentRenderList,scene);// render scene\nconst opaqueObjects=currentRenderList.opaque;const transmissiveObjects=currentRenderList.transmissive;const transparentObjects=currentRenderList.transparent;if(opaqueObjects.length>0)renderObjects(opaqueObjects,scene,camera);if(transmissiveObjects.length>0)renderTransmissiveObjects(opaqueObjects,transmissiveObjects,scene,camera);if(transparentObjects.length>0)renderObjects(transparentObjects,scene,camera);//\nif(_currentRenderTarget!==null){// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(_currentRenderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(_currentRenderTarget);}//\nif(scene.isScene===true)scene.onAfterRender(_this,scene,camera);// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();\nbindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;renderStateStack.pop();if(renderStateStack.length>0){currentRenderState=renderStateStack[renderStateStack.length-1];}else{currentRenderState=null;}renderListStack.pop();if(renderListStack.length>0){currentRenderList=renderListStack[renderListStack.length-1];}else{currentRenderList=null;}};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame\nif(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderTransmissiveObjects(opaqueObjects,transmissiveObjects,scene,camera){if(_transmissionRenderTarget===null){_transmissionRenderTarget=new WebGLRenderTarget(1024,1024,{generateMipmaps:true,minFilter:LinearMipmapLinearFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping});}const currentRenderTarget=_this.getRenderTarget();_this.setRenderTarget(_transmissionRenderTarget);_this.clear();renderObjects(opaqueObjects,scene,camera);textures.updateRenderTargetMipmap(_transmissionRenderTarget);_this.setRenderTarget(currentRenderTarget);renderObjects(transmissiveObjects,scene,camera);}function renderObjects(renderList,scene,camera){const overrideMaterial=scene.isScene===true?scene.overrideMaterial:null;for(let i=0,l=renderList.length;i<l;i++){const renderItem=renderList[i];const object=renderItem.object;const geometry=renderItem.geometry;const material=overrideMaterial===null?renderItem.material:overrideMaterial;const group=renderItem.group;if(camera.isArrayCamera){const cameras=camera.cameras;for(let j=0,jl=cameras.length;j<jl;j++){const camera2=cameras[j];if(object.layers.test(camera2.layers)){state.viewport(_currentViewport.copy(camera2.viewport));currentRenderState.setupLightsView(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){const program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);}function getProgram(material,scene,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\nconst materialProperties=properties.get(material);const lights=currentRenderState.state.lights;const shadowsArray=currentRenderState.state.shadowsArray;const lightsStateVersion=lights.state.version;const parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object);const programCacheKey=programCache.getProgramCacheKey(parameters);let programs=materialProperties.programs;// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\nmaterialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=cubemaps.get(material.envMap||materialProperties.environment);if(programs===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);programs=new Map();materialProperties.programs=programs;}let program=programs.get(programCacheKey);if(program!==undefined){// early out if program and light state is identical\nif(materialProperties.currentProgram===program&&materialProperties.lightsStateVersion===lightsStateVersion){updateCommonMaterialProperties(material,parameters);return program;}}else{parameters.uniforms=programCache.getUniforms(material);material.onBuild(parameters,_this);material.onBeforeCompile(parameters,_this);program=programCache.acquireProgram(parameters,programCacheKey);programs.set(programCacheKey,program);materialProperties.uniforms=parameters.uniforms;}const uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){uniforms.clippingPlanes=clipping.uniform;}updateCommonMaterialProperties(material,parameters);// store the light setup it was created for\nmaterialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.ltc_1.value=lights.state.rectAreaLTC1;uniforms.ltc_2.value=lights.state.rectAreaLTC2;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}const progUniforms=program.getUniforms();const uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.currentProgram=program;materialProperties.uniformsList=uniformsList;return program;}function updateCommonMaterialProperties(material,parameters){const materialProperties=properties.get(material);materialProperties.outputEncoding=parameters.outputEncoding;materialProperties.instancing=parameters.instancing;materialProperties.skinning=parameters.skinning;materialProperties.numClippingPlanes=parameters.numClippingPlanes;materialProperties.numIntersection=parameters.numClipIntersection;materialProperties.vertexAlphas=parameters.vertexAlphas;}function setProgram(camera,scene,material,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\ntextures.resetTextureUnits();const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;const envMap=cubemaps.get(material.envMap||environment);const vertexAlphas=material.vertexColors===true&&object.geometry&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4;const materialProperties=properties.get(material);const lights=currentRenderState.state.lights;if(_clippingEnabled===true){if(_localClippingEnabled===true||camera!==_currentCamera){const useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\nclipping.setState(material,camera,useCache);}}//\nlet needsProgramChange=false;if(material.version===materialProperties.__version){if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){needsProgramChange=true;}else if(materialProperties.outputEncoding!==encoding){needsProgramChange=true;}else if(object.isInstancedMesh&&materialProperties.instancing===false){needsProgramChange=true;}else if(!object.isInstancedMesh&&materialProperties.instancing===true){needsProgramChange=true;}else if(object.isSkinnedMesh&&materialProperties.skinning===false){needsProgramChange=true;}else if(!object.isSkinnedMesh&&materialProperties.skinning===true){needsProgramChange=true;}else if(materialProperties.envMap!==envMap){needsProgramChange=true;}else if(material.fog&&materialProperties.fog!==fog){needsProgramChange=true;}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==clipping.numPlanes||materialProperties.numIntersection!==clipping.numIntersection)){needsProgramChange=true;}else if(materialProperties.vertexAlphas!==vertexAlphas){needsProgramChange=true;}}else{needsProgramChange=true;materialProperties.__version=material.version;}//\nlet program=materialProperties.currentProgram;if(needsProgramChange===true){program=getProgram(material,scene,object);}let refreshProgram=false;let refreshMaterial=false;let refreshLights=false;const p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){const uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||object.isSkinnedMesh){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// otherwise textures used for skinning can take over texture units reserved for other material textures\nif(object.isSkinnedMesh){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');const skeleton=object.skeleton;if(skeleton){if(capabilities.floatVertexTextures){if(skeleton.boneTexture===null)skeleton.computeBoneTexture();p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);if(materialProperties.needsLights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height,_transmissionRenderTarget);WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget,activeCubeFace=0,activeMipmapLevel=0){_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}let framebuffer=null;let isCube=false;let isRenderTarget3D=false;if(renderTarget){const texture=renderTarget.texture;if(texture.isDataTexture3D||texture.isDataTexture2DArray){isRenderTarget3D=true;}const __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}const framebufferBound=state.bindFramebuffer(36160,framebuffer);if(framebufferBound&&capabilities.drawBuffers){let needsUpdate=false;if(renderTarget){if(renderTarget.isWebGLMultipleRenderTargets){const textures=renderTarget.texture;if(_currentDrawBuffers.length!==textures.length||_currentDrawBuffers[0]!==36064){for(let i=0,il=textures.length;i<il;i++){_currentDrawBuffers[i]=36064+i;}_currentDrawBuffers.length=textures.length;needsUpdate=true;}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==36064){_currentDrawBuffers[0]=36064;_currentDrawBuffers.length=1;needsUpdate=true;}}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==1029){_currentDrawBuffers[0]=1029;_currentDrawBuffers.length=1;needsUpdate=true;}}if(needsUpdate){if(capabilities.isWebGL2){_gl.drawBuffers(_currentDrawBuffers);}else{extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);}}}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){const textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel);}else if(isRenderTarget3D){const textureProperties=properties.get(renderTarget.texture);const layer=activeCubeFace||0;_gl.framebufferTextureLayer(36160,36064,textureProperties.__webglTexture,activeMipmapLevel||0,layer);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}let framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){state.bindFramebuffer(36160,framebuffer);try{const texture=renderTarget.texture;const textureFormat=texture.format;const textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}const halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has('EXT_color_buffer_half_float')||capabilities.isWebGL2&&extensions.has('EXT_color_buffer_float'));if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.has('OES_texture_float')||extensions.has('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!halfFloatSupportedByExt){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{// restore framebuffer of current render target if necessary\nconst framebuffer=_currentRenderTarget!==null?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(36160,framebuffer);}}};this.copyFramebufferToTexture=function(position,texture,level=0){const levelScale=Math.pow(2,-level);const width=Math.floor(texture.image.width*levelScale);const height=Math.floor(texture.image.height*levelScale);let glFormat=utils.convert(texture.format);if(capabilities.isWebGL2){// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\nif(glFormat===6407)glFormat=32849;if(glFormat===6408)glFormat=32856;}textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level=0){const width=srcTexture.image.width;const height=srcTexture.image.height;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);// As another texture upload may have changed pixelStorei\n// parameters, make sure they are correct for the dstTexture\n_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.copyTextureToTexture3D=function(sourceBox,position,srcTexture,dstTexture,level=0){if(_this.isWebGL1Renderer){console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');return;}const{width,height,data}=srcTexture.image;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);let glTarget;if(dstTexture.isDataTexture3D){textures.setTexture3D(dstTexture,0);glTarget=32879;}else if(dstTexture.isDataTexture2DArray){textures.setTexture2DArray(dstTexture,0);glTarget=35866;}else{console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');return;}_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);const unpackRowLen=_gl.getParameter(3314);const unpackImageHeight=_gl.getParameter(32878);const unpackSkipPixels=_gl.getParameter(3316);const unpackSkipRows=_gl.getParameter(3315);const unpackSkipImages=_gl.getParameter(32877);_gl.pixelStorei(3314,width);_gl.pixelStorei(32878,height);_gl.pixelStorei(3316,sourceBox.min.x);_gl.pixelStorei(3315,sourceBox.min.y);_gl.pixelStorei(32877,sourceBox.min.z);_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,sourceBox.max.x-sourceBox.min.x+1,sourceBox.max.y-sourceBox.min.y+1,sourceBox.max.z-sourceBox.min.z+1,glFormat,glType,data);_gl.pixelStorei(3314,unpackRowLen);_gl.pixelStorei(32878,unpackImageHeight);_gl.pixelStorei(3316,unpackSkipPixels);_gl.pixelStorei(3315,unpackSkipRows);_gl.pixelStorei(32877,unpackSkipImages);// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(glTarget);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};this.resetState=function(){_currentActiveCubeFace=0;_currentActiveMipmapLevel=0;_currentRenderTarget=null;state.reset();bindingStates.reset();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=true;class FogExp2{constructor(color,density=0.00025){this.name='';this.color=new Color(color);this.density=density;}clone(){return new FogExp2(this.color,this.density);}toJSON()/* meta */{return{type:'FogExp2',color:this.color.getHex(),density:this.density};}}FogExp2.prototype.isFogExp2=true;class Fog{constructor(color,near=1,far=1000){this.name='';this.color=new Color(color);this.near=near;this.far=far;}clone(){return new Fog(this.color,this.near,this.far);}toJSON()/* meta */{return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}}Fog.prototype.isFog=true;class Scene extends Object3D{constructor(){super();this.type='Scene';this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer\nif(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}copy(source,recursive){super.copy(source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;}toJSON(meta){const data=super.toJSON(meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.environment!==null)data.object.environment=this.environment.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;}}Scene.prototype.isScene=true;class InterleavedBuffer{constructor(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=generateUUID();}onUploadCallback(){}set needsUpdate(value){if(value===true)this.version++;}setUsage(value){this.usage=value;return this;}copy(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;}copyAt(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(let i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;}set(value,offset=0){this.array.set(value,offset);return this;}clone(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer;}const array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);const ib=new this.constructor(array,this.stride);ib.setUsage(this.usage);return ib;}onUpload(callback){this.onUploadCallback=callback;return this;}toJSON(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}// generate UUID for array buffer if necessary\nif(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer));}//\nreturn{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride};}}InterleavedBuffer.prototype.isInterleavedBuffer=true;const _vector$6=/*@__PURE__*/new Vector3();class InterleavedBufferAttribute{constructor(interleavedBuffer,itemSize,offset,normalized){this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}get count(){return this.data.count;}get array(){return this.data.array;}set needsUpdate(value){this.data.needsUpdate=value;}applyMatrix4(m){for(let i=0,l=this.data.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyMatrix4(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyNormalMatrix(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}transformDirection(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.transformDirection(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}setX(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;}setY(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;}setZ(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;}setW(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;}getX(index){return this.data.array[index*this.data.stride+this.offset];}getY(index){return this.data.array[index*this.data.stride+this.offset+1];}getZ(index){return this.data.array[index*this.data.stride+this.offset+2];}getW(index){return this.data.array[index*this.data.stride+this.offset+3];}setXY(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;}setXYZ(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;}setXYZW(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;}clone(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);}else{if(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.clone(data);}return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);}}toJSON(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now\nreturn{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}else{// save as true interlaved attribtue\nif(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data);}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};}}}InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute=true;/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */class SpriteMaterial extends Material{constructor(parameters){super();this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;}}SpriteMaterial.prototype.isSpriteMaterial=true;let _geometry;const _intersectPoint=/*@__PURE__*/new Vector3();const _worldScale=/*@__PURE__*/new Vector3();const _mvPosition=/*@__PURE__*/new Vector3();const _alignedPosition=/*@__PURE__*/new Vector2();const _rotatedPosition=/*@__PURE__*/new Vector2();const _viewWorldMatrix=/*@__PURE__*/new Matrix4();const _vA=/*@__PURE__*/new Vector3();const _vB=/*@__PURE__*/new Vector3();const _vC=/*@__PURE__*/new Vector3();const _uvA=/*@__PURE__*/new Vector2();const _uvB=/*@__PURE__*/new Vector2();const _uvC=/*@__PURE__*/new Vector2();class Sprite extends Object3D{constructor(material){super();this.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();const float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);const interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=_geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}raycast(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}const rotation=this.material.rotation;let sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}const center=this.center;transformVertex(_vA.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA.set(0,0);_uvB.set(1,0);_uvC.set(1,1);// check first triangle\nlet intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,false,_intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(_vB.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,false,_intersectPoint);if(intersect===null){return;}}const distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2()),face:null,object:this});}copy(source){super.copy(source);if(source.center!==undefined)this.center.copy(source.center);this.material=source.material;return this;}}Sprite.prototype.isSprite=true;function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\n_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(_viewWorldMatrix);}const _v1$2=/*@__PURE__*/new Vector3();const _v2$1=/*@__PURE__*/new Vector3();class LOD extends Object3D{constructor(){super();this._currentLevel=0;this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]},isLOD:{value:true}});this.autoUpdate=true;}copy(source){super.copy(source,false);const levels=source.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;}addLevel(object,distance=0){distance=Math.abs(distance);const levels=this.levels;let l;for(l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;}getCurrentLevel(){return this._currentLevel;}getObjectForDistance(distance){const levels=this.levels;if(levels.length>0){let i,l;for(i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;}return null;}raycast(raycaster,intersects){const levels=this.levels;if(levels.length>0){_v1$2.setFromMatrixPosition(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects);}}update(camera){const levels=this.levels;if(levels.length>1){_v1$2.setFromMatrixPosition(camera.matrixWorld);_v2$1.setFromMatrixPosition(this.matrixWorld);const distance=_v1$2.distanceTo(_v2$1)/camera.zoom;levels[0].object.visible=true;let i,l;for(i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}this._currentLevel=i-1;for(;i<l;i++){levels[i].object.visible=false;}}}toJSON(meta){const data=super.toJSON(meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];const levels=this.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}}const _basePosition=/*@__PURE__*/new Vector3();const _skinIndex=/*@__PURE__*/new Vector4();const _skinWeight=/*@__PURE__*/new Vector4();const _vector$5=/*@__PURE__*/new Vector3();const _matrix=/*@__PURE__*/new Matrix4();class SkinnedMesh extends Mesh{constructor(geometry,material){super(geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}copy(source){super.copy(source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this;}bind(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert();}pose(){this.skeleton.pose();}normalizeSkinWeights(){const vector=new Vector4();const skinWeight=this.geometry.attributes.skinWeight;for(let i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);const scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.bindMode==='attached'){this.bindMatrixInverse.copy(this.matrixWorld).invert();}else if(this.bindMode==='detached'){this.bindMatrixInverse.copy(this.bindMatrix).invert();}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}}boneTransform(index,target){const skeleton=this.skeleton;const geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(let i=0;i<4;i++){const weight=_skinWeight.getComponent(i);if(weight!==0){const boneIndex=_skinIndex.getComponent(i);_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),weight);}}return target.applyMatrix4(this.bindMatrixInverse);}}SkinnedMesh.prototype.isSkinnedMesh=true;class Bone extends Object3D{constructor(){super();this.type='Bone';}}Bone.prototype.isBone=true;class DataTexture extends Texture{constructor(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture.prototype.isDataTexture=true;const _offsetMatrix=/*@__PURE__*/new Matrix4();const _identityMatrix=/*@__PURE__*/new Matrix4();class Skeleton{constructor(bones=[],boneInverses=[]){this.uuid=generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init();}init(){const bones=this.bones;const boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(bones.length*16);// calculate inverse bone matrices if necessary\nif(boneInverses.length===0){this.calculateInverses();}else{// handle special case\nif(bones.length!==boneInverses.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');this.boneInverses=[];for(let i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}}calculateInverses(){this.boneInverses.length=0;for(let i=0,il=this.bones.length;i<il;i++){const inverse=new Matrix4();if(this.bones[i]){inverse.copy(this.bones[i].matrixWorld).invert();}this.boneInverses.push(inverse);}}pose(){// recover the bind-time world matrices\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){bone.matrixWorld.copy(this.boneInverses[i]).invert();}}// compute the local matrices, positions, rotations and scales\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.copy(bone.parent.matrixWorld).invert();bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}}update(){const bones=this.bones;const boneInverses=this.boneInverses;const boneMatrices=this.boneMatrices;const boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(let i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform\nconst matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);_offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==null){boneTexture.needsUpdate=true;}}clone(){return new Skeleton(this.bones,this.boneInverses);}computeBoneTexture(){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nlet size=Math.sqrt(this.bones.length*4);// 4 pixels needed for 1 matrix\nsize=ceilPowerOfTwo(size);size=Math.max(size,4);const boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(this.boneMatrices);// copy current values\nconst boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);this.boneMatrices=boneMatrices;this.boneTexture=boneTexture;this.boneTextureSize=size;return this;}getBoneByName(name){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;}dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null;}}fromJSON(json,bones){this.uuid=json.uuid;for(let i=0,l=json.bones.length;i<l;i++){const uuid=json.bones[i];let bone=bones[uuid];if(bone===undefined){console.warn('THREE.Skeleton: No bone found with UUID:',uuid);bone=new Bone();}this.bones.push(bone);this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));}this.init();return this;}toJSON(){const data={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[]};data.uuid=this.uuid;const bones=this.bones;const boneInverses=this.boneInverses;for(let i=0,l=bones.length;i<l;i++){const bone=bones[i];data.bones.push(bone.uuid);const boneInverse=boneInverses[i];data.boneInverses.push(boneInverse.toArray());}return data;}}const _instanceLocalMatrix=/*@__PURE__*/new Matrix4();const _instanceWorldMatrix=/*@__PURE__*/new Matrix4();const _instanceIntersects=[];const _mesh=/*@__PURE__*/new Mesh();class InstancedMesh extends Mesh{constructor(geometry,material,count){super(geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(count*16),16);this.instanceColor=null;this.count=count;this.frustumCulled=false;}copy(source){super.copy(source);this.instanceMatrix.copy(source.instanceMatrix);if(source.instanceColor!==null)this.instanceColor=source.instanceColor.clone();this.count=source.count;return this;}getColorAt(index,color){color.fromArray(this.instanceColor.array,index*3);}getMatrixAt(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);}raycast(raycaster,intersects){const matrixWorld=this.matrixWorld;const raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(let instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance\nthis.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance\n_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast\nfor(let i=0,l=_instanceIntersects.length;i<l;i++){const intersect=_instanceIntersects[i];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}}setColorAt(index,color){if(this.instanceColor===null){this.instanceColor=new BufferAttribute(new Float32Array(this.count*3),3);}color.toArray(this.instanceColor.array,index*3);}setMatrixAt(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);}updateMorphTargets(){}dispose(){this.dispatchEvent({type:'dispose'});}}InstancedMesh.prototype.isInstancedMesh=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */class LineBasicMaterial extends Material{constructor(parameters){super();this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this;}}LineBasicMaterial.prototype.isLineBasicMaterial=true;const _start$1=/*@__PURE__*/new Vector3();const _end$1=/*@__PURE__*/new Vector3();const _inverseMatrix$1=/*@__PURE__*/new Matrix4();const _ray$1=/*@__PURE__*/new Ray();const _sphere$1=/*@__PURE__*/new Sphere();class Line extends Object3D{constructor(geometry=new BufferGeometry(),material=new LineBasicMaterial()){super();this.type='Line';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);this.material=source.material;this.geometry=source.geometry;return this;}computeLineDistances(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[0];for(let i=1,l=positionAttribute.count;i<l;i++){_start$1.fromBufferAttribute(positionAttribute,i-1);_end$1.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}raycast(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Line.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere);_sphere$1.applyMatrix4(matrixWorld);_sphere$1.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$1)===false)return;//\n_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;const vStart=new Vector3();const vEnd=new Vector3();const interSegment=new Vector3();const interRay=new Vector3();const step=this.isLineSegments?2:1;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){const a=index.getX(i);const b=index.getX(i+1);vStart.fromBufferAttribute(positionAttribute,a);vEnd.fromBufferAttribute(positionAttribute,b);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){vStart.fromBufferAttribute(positionAttribute,i);vEnd.fromBufferAttribute(positionAttribute,i+1);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}Line.prototype.isLine=true;const _start=/*@__PURE__*/new Vector3();const _end=/*@__PURE__*/new Vector3();class LineSegments extends Line{constructor(geometry,material){super(geometry,material);this.type='LineSegments';}computeLineDistances(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[];for(let i=0,l=positionAttribute.count;i<l;i+=2){_start.fromBufferAttribute(positionAttribute,i);_end.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}}LineSegments.prototype.isLineSegments=true;class LineLoop extends Line{constructor(geometry,material){super(geometry,material);this.type='LineLoop';}}LineLoop.prototype.isLineLoop=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */class PointsMaterial extends Material{constructor(parameters){super();this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;}}PointsMaterial.prototype.isPointsMaterial=true;const _inverseMatrix=/*@__PURE__*/new Matrix4();const _ray=/*@__PURE__*/new Ray();const _sphere=/*@__PURE__*/new Sphere();const _position$2=/*@__PURE__*/new Vector3();class Points extends Object3D{constructor(geometry=new BufferGeometry(),material=new PointsMaterial()){super();this.type='Points';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);this.material=source.material;this.geometry=source.geometry;return this;}raycast(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Points.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);_sphere.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere)===false)return;//\n_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i++){const a=index.getX(i);_position$2.fromBufferAttribute(positionAttribute,a);testPoint(_position$2,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end;i<l;i++){_position$2.fromBufferAttribute(positionAttribute,i);testPoint(_position$2,i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}Points.prototype.isPoints=true;function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){const rayPointDistanceSq=_ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){const intersectPoint=new Vector3();_ray.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);const distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}class VideoTexture extends Texture{constructor(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;const scope=this;function updateVideo(){scope.needsUpdate=true;video.requestVideoFrameCallback(updateVideo);}if('requestVideoFrameCallback'in video){video.requestVideoFrameCallback(updateVideo);}}clone(){return new this.constructor(this.image).copy(this);}update(){const video=this.image;const hasVideoFrameCallback=('requestVideoFrameCallback'in video);if(hasVideoFrameCallback===false&&video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}}VideoTexture.prototype.isVideoTexture=true;class CompressedTexture extends Texture{constructor(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\nthis.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\nthis.generateMipmaps=false;}}CompressedTexture.prototype.isCompressedTexture=true;class CanvasTexture extends Texture{constructor(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}}CanvasTexture.prototype.isCanvasTexture=true;class DepthTexture extends Texture{constructor(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}}DepthTexture.prototype.isDepthTexture=true;class CircleGeometry extends BufferGeometry{constructor(radius=1,segments=8,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(let s=0,i=3;s<=segments;s++,i+=3){const segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(let i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class CylinderGeometry extends BufferGeometry{constructor(radiusTop=1,radiusBottom=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};const scope=this;radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet index=0;const indexArray=[];const halfHeight=height/2;let groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){const normal=new Vector3();const vertex=new Vector3();let groupCount=0;// this will be used to calculate the normal\nconst slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(let y=0;y<=heightSegments;y++){const indexRow=[];const v=y/heightSegments;// calculate the radius of the current row\nconst radius=v*(radiusBottom-radiusTop)+radiusTop;for(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const sinTheta=Math.sin(theta);const cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(let x=0;x<radialSegments;x++){for(let y=0;y<heightSegments;y++){// we use the index array to access the correct indices\nconst a=indexArray[y][x];const b=indexArray[y+1][x];const c=indexArray[y+1][x+1];const d=indexArray[y][x+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){// save the index of the first center vertex\nconst centerIndexStart=index;const uv=new Vector2();const vertex=new Vector3();let groupCount=0;const radius=top===true?radiusTop:radiusBottom;const sign=top===true?1:-1;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(let x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\nconst centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const cosTheta=Math.cos(theta);const sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(let x=0;x<radialSegments;x++){const c=centerIndexStart+x;const i=centerIndexEnd+x;if(top===true){// face top\nindices.push(i,i+1,c);}else{// face bottom\nindices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}}}class ConeGeometry extends CylinderGeometry{constructor(radius=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super(0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}}class PolyhedronGeometry extends BufferGeometry{constructor(vertices,indices,radius=1,detail=0){super();this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};// default buffer data\nconst vertexBuffer=[];const uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\napplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals\n}else{this.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){const a=new Vector3();const b=new Vector3();const c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(let i=0;i<indices.length;i+=3){// get the vertices of the face\ngetVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){const cols=detail+1;// we use this multidimensional array as a data structure for creating the subdivision\nconst v=[];// construct all of the vertices for this subdivision\nfor(let i=0;i<=cols;i++){v[i]=[];const aj=a.clone().lerp(c,i/cols);const bj=b.clone().lerp(c,i/cols);const rows=cols-i;for(let j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(let i=0;i<cols;i++){for(let j=0;j<2*(cols-i)-1;j++){const k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function applyRadius(radius){const vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){const vertex=new Vector3();for(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];const u=azimuth(vertex)/2/Math.PI+0.5;const v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(let i=0;i<uvBuffer.length;i+=6){// uv data of a single face\nconst x0=uvBuffer[i+0];const x1=uvBuffer[i+2];const x2=uvBuffer[i+4];const max=Math.max(x0,x1,x2);const min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){const stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){const a=new Vector3();const b=new Vector3();const c=new Vector3();const centroid=new Vector3();const uvA=new Vector2();const uvB=new Vector2();const uvC=new Vector2();for(let i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);const azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const r=1/t;const vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];const indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(vertices,indices,radius,detail);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};}}const _v0=new Vector3();const _v1$1=new Vector3();const _normal=new Vector3();const _triangle=new Triangle();class EdgesGeometry extends BufferGeometry{constructor(geometry,thresholdAngle){super();this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;if(geometry.isGeometry===true){console.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}const precisionPoints=4;const precision=Math.pow(10,precisionPoints);const thresholdDot=Math.cos(DEG2RAD*thresholdAngle);const indexAttr=geometry.getIndex();const positionAttr=geometry.getAttribute('position');const indexCount=indexAttr?indexAttr.count:positionAttr.count;const indexArr=[0,0,0];const vertKeys=['a','b','c'];const hashes=new Array(3);const edgeData={};const vertices=[];for(let i=0;i<indexCount;i+=3){if(indexAttr){indexArr[0]=indexAttr.getX(i);indexArr[1]=indexAttr.getX(i+1);indexArr[2]=indexAttr.getX(i+2);}else{indexArr[0]=i;indexArr[1]=i+1;indexArr[2]=i+2;}const{a,b,c}=_triangle;a.fromBufferAttribute(positionAttr,indexArr[0]);b.fromBufferAttribute(positionAttr,indexArr[1]);c.fromBufferAttribute(positionAttr,indexArr[2]);_triangle.getNormal(_normal);// create hashes for the edge from the vertices\nhashes[0]=`${Math.round(a.x*precision)},${Math.round(a.y*precision)},${Math.round(a.z*precision)}`;hashes[1]=`${Math.round(b.x*precision)},${Math.round(b.y*precision)},${Math.round(b.z*precision)}`;hashes[2]=`${Math.round(c.x*precision)},${Math.round(c.y*precision)},${Math.round(c.z*precision)}`;// skip degenerate triangles\nif(hashes[0]===hashes[1]||hashes[1]===hashes[2]||hashes[2]===hashes[0]){continue;}// iterate over every edge\nfor(let j=0;j<3;j++){// get the first and next vertex making up the edge\nconst jNext=(j+1)%3;const vecHash0=hashes[j];const vecHash1=hashes[jNext];const v0=_triangle[vertKeys[j]];const v1=_triangle[vertKeys[jNext]];const hash=`${vecHash0}_${vecHash1}`;const reverseHash=`${vecHash1}_${vecHash0}`;if(reverseHash in edgeData&&edgeData[reverseHash]){// if we found a sibling edge add it into the vertex array if\n// it meets the angle threshold and delete the edge from the map.\nif(_normal.dot(edgeData[reverseHash].normal)<=thresholdDot){vertices.push(v0.x,v0.y,v0.z);vertices.push(v1.x,v1.y,v1.z);}edgeData[reverseHash]=null;}else if(!(hash in edgeData)){// if we've already got an edge here then skip adding a new one\nedgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal.clone()};}}}// iterate over all remaining, unmatched edges and add them to the vertex array\nfor(const key in edgeData){if(edgeData[key]){const{index0,index1}=edgeData[key];_v0.fromBufferAttribute(positionAttr,index0);_v1$1.fromBufferAttribute(positionAttr,index1);vertices.push(_v0.x,_v0.y,_v0.z);vertices.push(_v1$1.x,_v1$1.y,_v1$1.z);}}this.setAttribute('position',new Float32BufferAttribute(vertices,3));}}/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */const Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;const hasHoles=holeIndices&&holeIndices.length;const outerLen=hasHoles?holeIndices[0]*dim:data.length;let outerNode=linkedList(data,0,outerLen,dim,true);const triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;let minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(let i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){let i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);}else{for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;let p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);let stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nlet p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nconst minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nconst minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);let p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions\nwhile(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order\nwhile(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order\nwhile(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){let p=start;do{const a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nlet a=start;do{let b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nlet c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){const queue=[];let i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){const b=splitPolygon(outerNode,hole);// filter collinear points around the cuts\nfilterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){let p=outerNode;const hx=hole.x;const hy=hole.y;let qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){const x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nconst stop=m,mx=m.x,my=m.y;let tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){let p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){let i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){let p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges\nlocallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible\narea(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors\nequals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case\n}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){const o1=sign(area(p1,q1,p2));const o2=sign(area(p1,q1,q2));const o3=sign(area(p2,q2,p1));const o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case\nif(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1\nif(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1\nif(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2\nif(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2\nreturn false;}// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){let p=a,inside=false;const px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){const a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){const p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertex index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertex nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){let sum=0;for(let i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}class ShapeUtils{// calculate area of the contour polygon\nstatic area(contour){const n=contour.length;let a=0.0;for(let p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;}static isClockWise(pts){return ShapeUtils.area(pts)<0;}static triangulateShape(contour,holes){const vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nconst holeIndices=[];// array of hole indices\nconst faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nlet holeIndex=contour.length;holes.forEach(removeDupEndPts);for(let i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//\nconst triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(let i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}}function removeDupEndPts(points){const l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(let i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */class ExtrudeGeometry extends BufferGeometry{constructor(shapes,options){super();this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];const scope=this;const verticesArray=[];const uvArray=[];for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];addShape(shape);}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(verticesArray,3));this.setAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions\nfunction addShape(shape){const placeholder=[];// options\nconst curveSegments=options.curveSegments!==undefined?options.curveSegments:12;const steps=options.steps!==undefined?options.steps:1;let depth=options.depth!==undefined?options.depth:100;let bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;let bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;let bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;let bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;let bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;const extrudePath=options.extrudePath;const uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nlet extrudePts,extrudeByPath=false;let splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization\nconst shapePoints=shape.extractPoints(curveSegments);let vertices=shapePoints.shape;const holes=shapePoints.holes;const reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}const faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */const contour=vertices;// vertices has all points but contour has only points of circumference\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error('THREE.ExtrudeGeometry: vec does not exist');return vec.clone().multiplyScalar(size).add(pt);}const vlen=vertices.length,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nlet v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nconst v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;const v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;const v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nconst collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nconst v_prev_len=Math.sqrt(v_prev_lensq);const v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nconst ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;const ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;const ptNextShift_x=inNext.x-v_next_y/v_next_len;const ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nconst sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nconst v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nlet direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}const contourMovements=[];for(let i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}const holesMovements=[];let oneHoleMovements,verticesMovements=contourMovements.concat();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=[];for(let i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\noneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(let b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nconst t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}const bs=bevelSize+bevelOffset;// Back facing vertices\nfor(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nfor(let s=1;s<=steps;s++){for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(let b=bevelSegments-1;b>=0;b--){const t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){const start=verticesArray.length/3;if(bevelEnabled){let layer=0;// steps + 1\nlet offset=vlen*layer;// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2],face[1],face[0]);}// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){const start=verticesArray.length/3;let layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];sidewalls(ahole,layeroffset);//, true\nlayeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){let i=contour.length;while(--i>=0){const j=i;let k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nfor(let s=0,sl=steps+bevelSegments*2;s<sl;s++){const slen1=vlen*s;const slen2=vlen*(s+1);const a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}toJSON(){const data=super.toJSON();const shapes=this.parameters.shapes;const options=this.parameters.options;return toJSON$1(shapes,options,data);}}const WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const a_z=vertices[indexA*3+2];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const b_z=vertices[indexB*3+2];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];const c_z=vertices[indexC*3+2];const d_x=vertices[indexD*3];const d_y=vertices[indexD*3+1];const d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<Math.abs(a_x-b_x)){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON$1(shapes,options,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}class IcosahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];const indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(vertices,indices,radius,detail);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};}}class LatheGeometry extends BufferGeometry{constructor(points,segments=12,phiStart=0,phiLength=Math.PI*2){super();this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=clamp(phiLength,0,Math.PI*2);// buffers\nconst indices=[];const vertices=[];const uvs=[];// helper variables\nconst inverseSegments=1.0/segments;const vertex=new Vector3();const uv=new Vector2();// generate vertices and uvs\nfor(let i=0;i<=segments;i++){const phi=phiStart+i*inverseSegments*phiLength;const sin=Math.sin(phi);const cos=Math.cos(phi);for(let j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(let i=0;i<segments;i++){for(let j=0;j<points.length-1;j++){const base=j+i*points.length;const a=base;const b=base+points.length;const c=base+points.length+1;const d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\nthis.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){const normals=this.attributes.normal.array;const n1=new Vector3();const n2=new Vector3();const n=new Vector3();// this is the buffer offset for the last line of vertices\nconst base=segments*points.length*3;for(let i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line\nn1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line\nn2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}}class OctahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(vertices,indices,radius,detail);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */class ParametricGeometry extends BufferGeometry{constructor(func,slices,stacks){super();this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];const EPS=0.00001;const normal=new Vector3();const p0=new Vector3(),p1=new Vector3();const pu=new Vector3(),pv=new Vector3();if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs\nconst sliceCount=slices+1;for(let i=0;i<=stacks;i++){const v=i/stacks;for(let j=0;j<=slices;j++){const u=j/slices;// vertex\nfunc(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal\n// approximate tangent vectors via finite differences\nif(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal\nnormal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,v);}}// generate indices\nfor(let i=0;i<stacks;i++){for(let j=0;j<slices;j++){const a=i*sliceCount+j;const b=i*sliceCount+j+1;const c=(i+1)*sliceCount+j+1;const d=(i+1)*sliceCount+j;// faces one and two\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class RingGeometry extends BufferGeometry{constructor(innerRadius=0.5,outerRadius=1,thetaSegments=8,phiSegments=1,thetaStart=0,thetaLength=Math.PI*2){super();this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// some helper variables\nlet radius=innerRadius;const radiusStep=(outerRadius-innerRadius)/phiSegments;const vertex=new Vector3();const uv=new Vector2();// generate vertices, normals and uvs\nfor(let j=0;j<=phiSegments;j++){for(let i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside\nconst segment=thetaStart+i/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(let j=0;j<phiSegments;j++){const thetaSegmentLevel=j*(thetaSegments+1);for(let i=0;i<thetaSegments;i++){const segment=i+thetaSegmentLevel;const a=segment;const b=segment+thetaSegments+1;const c=segment+thetaSegments+2;const d=segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class ShapeGeometry extends BufferGeometry{constructor(shapes,curveSegments=12){super();this.type='ShapeGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet groupStart=0;let groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(let i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){const indexOffset=vertices.length/3;const points=shape.extractPoints(curveSegments);let shapeVertices=points.shape;const shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}const faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs\nfor(let i=0,l=shapeVertices.length;i<l;i++){const vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs\n}// incides\nfor(let i=0,l=faces.length;i<l;i++){const face=faces[i];const a=face[0]+indexOffset;const b=face[1]+indexOffset;const c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}toJSON(){const data=super.toJSON();const shapes=this.parameters.shapes;return toJSON(shapes,data);}}function toJSON(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}class SphereGeometry extends BufferGeometry{constructor(radius=1,widthSegments=8,heightSegments=6,phiStart=0,phiLength=Math.PI*2,thetaStart=0,thetaLength=Math.PI){super();this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));const thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);let index=0;const grid=[];const vertex=new Vector3();const normal=new Vector3();// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// generate vertices, normals and uvs\nfor(let iy=0;iy<=heightSegments;iy++){const verticesRow=[];const v=iy/heightSegments;// special case for the poles\nlet uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(let ix=0;ix<=widthSegments;ix++){const u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(let iy=0;iy<heightSegments;iy++){for(let ix=0;ix<widthSegments;ix++){const a=grid[iy][ix+1];const b=grid[iy][ix];const c=grid[iy+1][ix];const d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const indices=[2,1,0,0,3,2,1,3,0,2,3,1];super(vertices,indices,radius,detail);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */class TextGeometry extends ExtrudeGeometry{constructor(text,parameters={}){const font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new BufferGeometry();}const shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API\nparameters.depth=parameters.height!==undefined?parameters.height:50;// defaults\nif(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;super(shapes,parameters);this.type='TextGeometry';}}class TorusGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,radialSegments=8,tubularSegments=6,arc=Math.PI*2){super();this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst center=new Vector3();const vertex=new Vector3();const normal=new Vector3();// generate vertices, normals and uvs\nfor(let j=0;j<=radialSegments;j++){for(let i=0;i<=tubularSegments;i++){const u=i/tubularSegments*arc;const v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=radialSegments;j++){for(let i=1;i<=tubularSegments;i++){// indices\nconst a=(tubularSegments+1)*j+i-1;const b=(tubularSegments+1)*(j-1)+i-1;const c=(tubularSegments+1)*(j-1)+i;const d=(tubularSegments+1)*j+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TorusKnotGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,tubularSegments=64,radialSegments=8,p=2,q=3){super();this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const P1=new Vector3();const P2=new Vector3();const B=new Vector3();const T=new Vector3();const N=new Vector3();// generate vertices, normals and uvs\nfor(let i=0;i<=tubularSegments;++i){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nconst u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(let j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nconst v=j/radialSegments*Math.PI*2;const cx=-tube*Math.cos(v);const cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){// indices\nconst a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){const cu=Math.cos(u);const su=Math.sin(u);const quOverP=q/p*u;const cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}}class TubeGeometry extends BufferGeometry{constructor(path,tubularSegments=64,radius=1,radialSegments=8,closed=false){super();this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};const frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\nthis.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const uv=new Vector2();let P=new Vector3();// buffer\nconst vertices=[];const normals=[];const uvs=[];const indices=[];// create buffer data\ngenerateBufferData();// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(let i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nconst N=frames.normals[i];const B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(let j=0;j<=radialSegments;j++){const v=j/radialSegments*Math.PI*2;const sin=Math.sin(v);const cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(let i=0;i<=tubularSegments;i++){for(let j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}toJSON(){const data=super.toJSON();data.path=this.parameters.path.toJSON();return data;}}class WireframeGeometry extends BufferGeometry{constructor(geometry){super();this.type='WireframeGeometry';if(geometry.isGeometry===true){console.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}// buffer\nconst vertices=[];// helper variables\nconst edge=[0,0],edges={};const vertex=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nconst position=geometry.attributes.position;const indices=geometry.index;let groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(let o=0,ol=groups.length;o<ol;++o){const group=groups[o];const start=group.start;const count=group.count;for(let i=start,l=start+count;i<l;i+=3){for(let j=0;j<3;j++){const edge1=indices.getX(i+j);const edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);const key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices\nfor(const key in edges){const e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry\nconst position=geometry.attributes.position;for(let i=0,l=position.count/3;i<l;i++){for(let j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nconst index1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);const index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertices,3));}}var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */class ShadowMaterial extends Material{constructor(parameters){super();this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);return this;}}ShadowMaterial.prototype.isShadowMaterial=true;class RawShaderMaterial extends ShaderMaterial{constructor(parameters){super(parameters);this.type='RawShaderMaterial';}}RawShaderMaterial.prototype.isRawShaderMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshStandardMaterial extends Material{constructor(parameters){super();this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse\nthis.roughness=1.0;this.metalness=0.0;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.vertexTangents=false;this.setValues(parameters);}copy(source){super.copy(source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;this.vertexTangents=source.vertexTangents;return this;}}MeshStandardMaterial.prototype.isMeshStandardMaterial=true;/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>\n * }\n */class MeshPhysicalMaterial extends MeshStandardMaterial{constructor(parameters){super();this.defines={'STANDARD':'','PHYSICAL':''};this.type='MeshPhysicalMaterial';this.clearcoat=0.0;this.clearcoatMap=null;this.clearcoatRoughness=0.0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=0.5;// maps to F0 = 0.04\nObject.defineProperty(this,'ior',{get:function(){return(1+0.4*this.reflectivity)/(1-0.4*this.reflectivity);},set:function(ior){this.reflectivity=clamp(2.5*(ior-1)/(ior+1),0,1);}});this.sheen=null;// null will disable sheen bsdf\nthis.transmission=0.0;this.transmissionMap=null;this.thickness=0.01;this.thicknessMap=null;this.attenuationDistance=0.0;this.attenuationColor=new Color(1,1,1);this.setValues(parameters);}copy(source){super.copy(source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;if(source.sheen){this.sheen=(this.sheen||new Color()).copy(source.sheen);}else{this.sheen=null;}this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;this.thickness=source.thickness;this.thicknessMap=source.thicknessMap;this.attenuationDistance=source.attenuationDistance;this.attenuationColor.copy(source.attenuationColor);return this;}}MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshPhongMaterial extends Material{constructor(parameters){super();this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse\nthis.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshPhongMaterial.prototype.isMeshPhongMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshToonMaterial extends Material{constructor(parameters){super();this.defines={'TOON':''};this.type='MeshToonMaterial';this.color=new Color(0xffffff);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshToonMaterial.prototype.isMeshToonMaterial=true;/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshNormalMaterial extends Material{constructor(parameters){super();this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshNormalMaterial.prototype.isMeshNormalMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshLambertMaterial extends Material{constructor(parameters){super();this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshLambertMaterial.prototype.isMeshLambertMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */class MeshMatcapMaterial extends Material{constructor(parameters){super();this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse\nthis.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */class LineDashedMaterial extends LineBasicMaterial{constructor(parameters){super();this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}copy(source){super.copy(source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;}}LineDashedMaterial.prototype.isLineDashedMaterial=true;var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function(times){function compareTime(i,j){return times[i]-times[j];}const n=times.length;const result=new Array(n);for(let i=0;i!==n;++i)result[i]=i;result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function(values,stride,order){const nValues=values.length;const result=new values.constructor(nValues);for(let i=0,dstOffset=0;dstOffset!==nValues;++i){const srcOffset=order[i]*stride;for(let j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function(jsonKeys,times,values,valuePropertyName){let i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nlet value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function(sourceClip,name,startFrame,endFrame,fps=30){const clip=sourceClip.clone();clip.name=name;const tracks=[];for(let i=0;i<clip.tracks.length;++i){const track=clip.tracks[i];const valueSize=track.getValueSize();const times=[];const values=[];for(let j=0;j<track.times.length;++j){const frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(let k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip\nlet minStartTime=Infinity;for(let i=0;i<clip.tracks.length;++i){if(minStartTime>clip.tracks[i].times[0]){minStartTime=clip.tracks[i].times[0];}}// shift all tracks such that clip begins at t=0\nfor(let i=0;i<clip.tracks.length;++i){clip.tracks[i].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function(targetClip,referenceFrame=0,referenceClip=targetClip,fps=30){if(fps<=0)fps=30;const numTracks=referenceClip.tracks.length;const referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame\nfor(let i=0;i<numTracks;++i){const referenceTrack=referenceClip.tracks[i];const referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric\nif(referenceTrackType==='bool'||referenceTrackType==='string')continue;// Find the track in the target clip whose name and type matches the reference track\nconst targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)continue;let referenceOffset=0;const referenceValueSize=referenceTrack.getValueSize();if(referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){referenceOffset=referenceValueSize/3;}let targetOffset=0;const targetValueSize=targetTrack.getValueSize();if(targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){targetOffset=targetValueSize/3;}const lastIndex=referenceTrack.times.length-1;let referenceValue;// Find the value to subtract out of the track\nif(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe\nconst startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe\nconst startIndex=lastIndex*referenceValueSize+referenceOffset;const endIndex=startIndex+referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else{// Interpolate to the reference value\nconst interpolant=referenceTrack.createInterpolant();const startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime);referenceValue=AnimationUtils.arraySlice(interpolant.resultBuffer,startIndex,endIndex);}// Conjugate the quaternion\nif(referenceTrackType==='quaternion'){const referenceQuat=new Quaternion().fromArray(referenceValue).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values\nconst numTimes=targetTrack.times.length;for(let j=0;j<numTimes;++j){const valueStart=j*targetValueSize+targetOffset;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types\nQuaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{const valueEnd=targetValueSize-targetOffset*2;// Subtract each value for all other numeric track types\nfor(let k=0;k<valueEnd;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */class Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;this.settings=null;this.DefaultSettings_={};}evaluate(t){const pp=this.parameterPositions;let i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{let right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(let giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nconst t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(let giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){const mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);}getSettings_(){return this.settings||this.DefaultSettings_;}copySampleValue_(index){// copies a sample value to the result buffer\nconst result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(let i=0;i!==stride;++i){result[i]=values[offset+i];}return result;}// Template methods for derived classes:\ninterpolate_()/* i1, t0, t, t1 */{throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n}intervalChanged_()/* i1, t0, t1 */{// empty\n}}// ALIAS DEFINITIONS\nInterpolant.prototype.beforeStart_=Interpolant.prototype.copySampleValue_;Interpolant.prototype.afterEnd_=Interpolant.prototype.copySampleValue_;/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */class CubicInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};}intervalChanged_(i1,t0,t1){const pp=this.parameterPositions;let iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}const halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nconst sP=-wP*ppp+2*wP*pp-wP*p;const s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;const s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;const sN=wN*ppp-wN*pp;// combine data linearly\nfor(let i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}}class LinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(let i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}}/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */class DiscreteInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}}class KeyframeTrack{constructor(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\nstatic toJSON(track){const trackType=track.constructor;let json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==this.toJSON){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};const interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);}setInterpolation(interpolation){let factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){const message='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}}getValueSize(){return this.values.length/this.times.length;}// move all keyframes either forwards or backwards in time\nshift(timeOffset){if(timeOffset!==0.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;}// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\nscale(timeScale){if(timeScale!==1.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;}// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\ntrim(startTime,endTime){const times=this.times,nKeys=times.length;let from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to){to=Math.max(to,1);from=to-1;}const stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;}// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\nvalidate(){let valid=true;const valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}const times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}let prevTime=null;for(let i=0;i!==nKeys;i++){const currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(let i=0,n=values.length;i!==n;++i){const value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;}// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\noptimize(){// times or values may be shared with other tracks, so overwriting is unsafe\nconst times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;let writeIndex=1;for(let i=1;i<lastIndex;++i){let keep=false;const time=times[i];const timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(i!==1||time!==times[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nconst offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(let j=0;j!==stride;++j){const value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(i!==writeIndex){times[writeIndex]=times[i];const readOffset=i*stride,writeOffset=writeIndex*stride;for(let j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(let readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;}clone(){const times=AnimationUtils.arraySlice(this.times,0);const values=AnimationUtils.arraySlice(this.values,0);const TypedKeyframeTrack=this.constructor;const track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}}KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=Float32Array;KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;/**\n * A Track of Boolean keyframe values.\n */class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName='bool';BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of keyframe values that represent color.\n */class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName='color';/**\n * A Track of numeric keyframe values.\n */class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName='number';/**\n * Spherical linear unit quaternion interpolant.\n */class QuaternionLinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);let offset=i1*stride;for(let end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}}/**\n * A Track of quaternion keyframe values.\n */class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);}}QuaternionKeyframeTrack.prototype.ValueTypeName='quaternion';// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track that interpolates Strings\n */class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName='string';StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of vectored keyframe values.\n */class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName='vector';class AnimationClip{constructor(name,duration=-1,tracks,blendMode=NormalAnimationBlendMode){this.name=name;this.tracks=tracks;this.duration=duration;this.blendMode=blendMode;this.uuid=generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}static parse(json){const tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(let i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}const clip=new this(json.name,json.duration,tracks,json.blendMode);clip.uuid=json.uuid;return clip;}static toJSON(clip){const tracks=[],clipTracks=clip.tracks;const json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(let i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;}static CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){const numMorphTargets=morphTargetSequence.length;const tracks=[];for(let i=0;i<numMorphTargets;i++){let times=[];let values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);const order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new this(name,-1,tracks);}static findByName(objectOrClipArray,name){let clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){const o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(let i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;}static CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){const animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nconst pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(let i=0,il=morphTargets.length;i<il;i++){const morphTarget=morphTargets[i];const parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){const name=parts[1];let animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}const clips=[];for(const name in animationToMorphTargets){clips.push(this.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;}// parse the animation.hierarchy format\nstatic parseAnimation(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}const addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){const times=[];const values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};const tracks=[];const clipName=animation.name||'default';const fps=animation.fps||30;const blendMode=animation.blendMode;// automatic length determination in AnimationClip.\nlet duration=animation.length||-1;const hierarchyTracks=animation.hierarchy||[];for(let h=0;h<hierarchyTracks.length;h++){const animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nconst morphTargetNames={};let k;for(k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(let m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(const morphTargetName in morphTargetNames){const times=[];const values=[];for(let m=0;m!==animationKeys[k].morphTargets.length;++m){const animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nconst boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}const clip=new this(clipName,duration,tracks,blendMode);return clip;}resetDuration(){const tracks=this.tracks;let duration=0;for(let i=0,n=tracks.length;i!==n;++i){const track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;}trim(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;}validate(){let valid=true;for(let i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;}optimize(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;}clone(){const tracks=[];for(let i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new this.constructor(this.name,this.duration,tracks,this.blendMode);}toJSON(){return this.constructor.toJSON(this);}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}const trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){const times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}const Cache={enabled:false,files:{},add:function(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function(key){delete this.files[key];},clear:function(){this.files={};}};class LoadingManager{constructor(onLoad,onProgress,onError){const scope=this;let isLoading=false;let itemsLoaded=0;let itemsTotal=0;let urlModifier=undefined;const handlers=[];// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){const index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(let i=0,l=handlers.length;i<l;i+=2){const regex=handlers[i];const loader=handlers[i+1];if(regex.global)regex.lastIndex=0;// see #17920\nif(regex.test(file)){return loader;}}return null;};}}const DefaultLoadingManager=new LoadingManager();class Loader{constructor(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.withCredentials=false;this.path='';this.resourcePath='';this.requestHeader={};}load()/* url, onLoad, onProgress, onError */{}loadAsync(url,onProgress){const scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});}parse()/* data */{}setCrossOrigin(crossOrigin){this.crossOrigin=crossOrigin;return this;}setWithCredentials(value){this.withCredentials=value;return this;}setPath(path){this.path=path;return this;}setResourcePath(resourcePath){this.resourcePath=resourcePath;return this;}setRequestHeader(requestHeader){this.requestHeader=requestHeader;return this;}}const loading={};class FileLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nconst dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;const dataUriRegexResult=url.match(dataUriRegex);let request;// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){const mimeType=dataUriRegexResult[1];const isBase64=!!dataUriRegexResult[2];let data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{let response;const responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':const view=new Uint8Array(data.length);for(let i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':const parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){const response=this.response;const callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache\n// error response bodies as proper responses to requests.\nCache.add(url,response);for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){const callbacks=loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(const header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;}setResponseType(value){this.responseType=value;return this;}setMimeType(value){this.mimeType=value;return this;}}class AnimationLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const animations=[];for(let i=0;i<json.length;i++){const clip=AnimationClip.parse(json[i]);animations.push(clip);}return animations;}}/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */class CompressedTextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const images=[];const texture=new CompressedTexture();const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);let loaded=0;function loadTexture(i){loader.load(url[i],function(buffer){const texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.image=images;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){for(let i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){const texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){const faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(let f=0;f<faces;f++){images[f]={mipmaps:[]};for(let i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}texture.image=images;}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}}class ImageLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}}class CubeTextureLoader extends Loader{constructor(manager){super(manager);}load(urls,onLoad,onProgress,onError){const texture=new CubeTexture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);let loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(let i=0;i<urls.length;++i){loadTexture(i);}return texture;}}/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */class DataTextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const texture=new DataTexture();const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){const texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.encoding!==undefined){texture.encoding=texData.encoding;}if(texData.flipY!==undefined){texture.flipY=texData.flipY;}if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...\n}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}if(texData.generateMipmaps!==undefined){texture.generateMipmaps=texData.generateMipmaps;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}}class TextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const texture=new Texture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\nconst isJPEG=url.search(/\\.jpe?g($|\\?)/i)>0||url.search(/^data\\:image\\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}}/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/class Curve{constructor(){this.type='Curve';this.arcLengthDivisions=200;}// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\ngetPoint()/* t, optionalTarget */{console.warn('THREE.Curve: .getPoint() not implemented.');return null;}// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\ngetPointAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);}// Get sequence of points using getPoint( t )\ngetPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;}// Get sequence of points using getPointAt( u )\ngetSpacedPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;}// Get total curve arc length\ngetLength(){const lengths=this.getLengths();return lengths[lengths.length-1];}// Get list of cumulative segment lengths\ngetLengths(divisions=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;const cache=[];let current,last=this.getPoint(0);let sum=0;cache.push(0);for(let p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n}updateArcLengths(){this.needsUpdate=true;this.getLengths();}// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\ngetUtoTmapping(u,distance){const arcLengths=this.getLengths();let i=0;const il=arcLengths.length;let targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nlet low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nconst lengthBefore=arcLengths[i];const lengthAfter=arcLengths[i+1];const segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nconst segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nconst t=(i+segmentFraction)/(il-1);return t;}// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\ngetTangent(t,optionalTarget){const delta=0.0001;let t1=t-delta;let t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;const pt1=this.getPoint(t1);const pt2=this.getPoint(t2);const tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3());tangent.copy(pt2).sub(pt1).normalize();return tangent;}getTangentAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);}computeFrenetFrames(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nconst normal=new Vector3();const tangents=[];const normals=[];const binormals=[];const vec=new Vector3();const mat=new Matrix4();// compute the tangent vectors for each segment on the curve\nfor(let i=0;i<=segments;i++){const u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3());tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();let min=Number.MAX_VALUE;const tx=Math.abs(tangents[0].x);const ty=Math.abs(tangents[0].y);const tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(let i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();const theta=Math.acos(clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors\nnormals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){let theta=Math.acos(clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(let i=1;i<=segments;i++){// twist a little...\nnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};}clone(){return new this.constructor().copy(this);}copy(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;}toJSON(){const data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;}fromJSON(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}}class EllipseCurve extends Curve{constructor(aX=0,aY=0,xRadius=1,yRadius=1,aStartAngle=0,aEndAngle=Math.PI*2,aClockwise=false,aRotation=0){super();this.type='EllipseCurve';this.aX=aX;this.aY=aY;this.xRadius=xRadius;this.yRadius=yRadius;this.aStartAngle=aStartAngle;this.aEndAngle=aEndAngle;this.aClockwise=aClockwise;this.aRotation=aRotation;}getPoint(t,optionalTarget){const point=optionalTarget||new Vector2();const twoPi=Math.PI*2;let deltaAngle=this.aEndAngle-this.aStartAngle;const samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0)deltaAngle+=twoPi;while(deltaAngle>twoPi)deltaAngle-=twoPi;if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}const angle=this.aStartAngle+t*deltaAngle;let x=this.aX+this.xRadius*Math.cos(angle);let y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){const cos=Math.cos(this.aRotation);const sin=Math.sin(this.aRotation);const tx=x-this.aX;const ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);}copy(source){super.copy(source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;}toJSON(){const data=super.toJSON();data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;}fromJSON(json){super.fromJSON(json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;}}EllipseCurve.prototype.isEllipseCurve=true;class ArcCurve extends EllipseCurve{constructor(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){super(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}}ArcCurve.prototype.isArcCurve=true;/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */ /*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/function CubicPoly(){let c0=0,c1=0,c2=0,c3=0;/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nlet t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;let t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function(t){const t2=t*t;const t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nconst tmp=new Vector3();const px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();class CatmullRomCurve3 extends Curve{constructor(points=[],closed=false,curveType='centripetal',tension=0.5){super();this.type='CatmullRomCurve3';this.points=points;this.closed=closed;this.curveType=curveType;this.tension=tension;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const points=this.points;const l=points.length;const p=(l-(this.closed?0:1))*t;let intPoint=Math.floor(p);let weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}let p0,p3;// 4 points (p1 & p2 defined below)\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}const p1=points[intPoint%l];const p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nconst pow=this.curveType==='chordal'?0.5:0.25;let dt0=Math.pow(p0.distanceToSquared(p1),pow);let dt1=Math.pow(p1.distanceToSquared(p2),pow);let dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;}}CatmullRomCurve3.prototype.isCatmullRomCurve3=true;/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */function CatmullRom(t,p0,p1,p2,p3){const v0=(p2-p0)*0.5;const v1=(p3-p1)*0.5;const t2=t*t;const t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){const k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){const k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){const k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}class CubicBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2(),v3=new Vector2()){super();this.type='CubicBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve.prototype.isCubicBezierCurve=true;class CubicBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3(),v3=new Vector3()){super();this.type='CubicBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve3.prototype.isCubicBezierCurve3=true;class LineCurve extends Curve{constructor(v1=new Vector2(),v2=new Vector2()){super();this.type='LineCurve';this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}getTangent(t,optionalTarget){const tangent=optionalTarget||new Vector2();tangent.copy(this.v2).sub(this.v1).normalize();return tangent;}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}LineCurve.prototype.isLineCurve=true;class LineCurve3 extends Curve{constructor(v1=new Vector3(),v2=new Vector3()){super();this.type='LineCurve3';this.isLineCurve3=true;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}class QuadraticBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2()){super();this.type='QuadraticBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;class QuadraticBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3()){super();this.type='QuadraticBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;class SplineCurve extends Curve{constructor(points=[]){super();this.type='SplineCurve';this.points=points;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const points=this.points;const p=(points.length-1)*t;const intPoint=Math.floor(p);const weight=p-intPoint;const p0=points[intPoint===0?intPoint:intPoint-1];const p1=points[intPoint];const p2=points[intPoint>points.length-2?points.length-1:intPoint+1];const p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;}}SplineCurve.prototype.isSplineCurve=true;var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/class CurvePath extends Curve{constructor(){super();this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path\n}add(curve){this.curves.push(curve);}closePath(){// Add a line curve if start and end of lines are not connected\nconst startPoint=this.curves[0].getPoint(0);const endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}}// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\ngetPoint(t){const d=t*this.getLength();const curveLengths=this.getCurveLengths();let i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){const diff=curveLengths[i]-d;const curve=this.curves[i];const segmentLength=curve.getLength();const u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n}// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\ngetLength(){const lens=this.getCurveLengths();return lens[lens.length-1];}// cacheLengths must be recalculated.\nupdateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();}// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\ngetCurveLengths(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nconst lengths=[];let sums=0;for(let i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;}getSpacedPoints(divisions=40){const points=[];for(let i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;}getPoints(divisions=12){const points=[];let last;for(let i=0,curves=this.curves;i<curves.length;i++){const curve=curves[i];const resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;const pts=curve.getPoints(resolution);for(let j=0;j<pts.length;j++){const point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;}copy(source){super.copy(source);this.curves=[];for(let i=0,l=source.curves.length;i<l;i++){const curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose;data.curves=[];for(let i=0,l=this.curves.length;i<l;i++){const curve=this.curves[i];data.curves.push(curve.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.autoClose=json.autoClose;this.curves=[];for(let i=0,l=json.curves.length;i<l;i++){const curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}}class Path extends CurvePath{constructor(points){super();this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(let i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}return this;}moveTo(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\nreturn this;}lineTo(x,y){const curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){const curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){const curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}splineThru(pts/*Array of Vector*/){const npts=[this.currentPoint.clone()].concat(pts);const curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;}arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;}absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nconst firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);const lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;}copy(source){super.copy(source);this.currentPoint.copy(source.currentPoint);return this;}toJSON(){const data=super.toJSON();data.currentPoint=this.currentPoint.toArray();return data;}fromJSON(json){super.fromJSON(json);this.currentPoint.fromArray(json.currentPoint);return this;}}class Shape extends Path{constructor(points){super(points);this.uuid=generateUUID();this.type='Shape';this.holes=[];}getPointsHoles(divisions){const holesPts=[];for(let i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;}// get points of shape and holes (keypoints based on segments parameter)\nextractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};}copy(source){super.copy(source);this.holes=[];for(let i=0,l=source.holes.length;i<l;i++){const hole=source.holes[i];this.holes.push(hole.clone());}return this;}toJSON(){const data=super.toJSON();data.uuid=this.uuid;data.holes=[];for(let i=0,l=this.holes.length;i<l;i++){const hole=this.holes[i];data.holes.push(hole.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.uuid=json.uuid;this.holes=[];for(let i=0,l=json.holes.length;i<l;i++){const hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}}class Light extends Object3D{constructor(color,intensity=1){super();this.type='Light';this.color=new Color(color);this.intensity=intensity;}dispose(){// Empty here in base class; some subclasses override.\n}copy(source){super.copy(source);this.color.copy(source.color);this.intensity=source.intensity;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}}Light.prototype.isLight=true;class HemisphereLight extends Light{constructor(skyColor,groundColor,intensity){super(skyColor,intensity);this.type='HemisphereLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}copy(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}}HemisphereLight.prototype.isHemisphereLight=true;const _projScreenMatrix$1=/*@__PURE__*/new Matrix4();const _lightPositionWorld$1=/*@__PURE__*/new Vector3();const _lookTarget$1=/*@__PURE__*/new Vector3();class LightShadow{constructor(camera){this.camera=camera;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}getViewportCount(){return this._viewportCount;}getFrustum(){return this._frustum;}updateMatrices(light){const shadowCamera=this.camera;const shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld$1);_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_lookTarget$1);shadowCamera.updateMatrixWorld();_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);}getViewport(viewportIndex){return this._viewports[viewportIndex];}getFrameExtents(){return this._frameExtents;}dispose(){if(this.map){this.map.dispose();}if(this.mapPass){this.mapPass.dispose();}}copy(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;}clone(){return new this.constructor().copy(this);}toJSON(){const object={};if(this.bias!==0)object.bias=this.bias;if(this.normalBias!==0)object.normalBias=this.normalBias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,0.5,500));this.focus=1;}updateMatrices(light){const camera=this.camera;const fov=RAD2DEG*2*light.angle*this.focus;const aspect=this.mapSize.width/this.mapSize.height;const far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}super.updateMatrices(light);}copy(source){super.copy(source);this.focus=source.focus;return this;}}SpotLightShadow.prototype.isSpotLightShadow=true;class SpotLight extends Light{constructor(color,intensity,distance=0,angle=Math.PI/3,penumbra=0,decay=1){super(color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.distance=distance;this.angle=angle;this.penumbra=penumbra;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new SpotLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/Math.PI;}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}SpotLight.prototype.isSpotLight=true;const _projScreenMatrix=/*@__PURE__*/new Matrix4();const _lightPositionWorld=/*@__PURE__*/new Vector3();const _lookTarget=/*@__PURE__*/new Vector3();class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,0.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\nnew Vector4(2,1,1,1),// negative X\nnew Vector4(0,1,1,1),// positive Z\nnew Vector4(3,1,1,1),// negative Z\nnew Vector4(1,1,1,1),// positive Y\nnew Vector4(3,0,1,1),// negative Y\nnew Vector4(1,0,1,1)];this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];}updateMatrices(light,viewportIndex=0){const camera=this.camera;const shadowMatrix=this.matrix;const far=light.distance||camera.far;if(far!==camera.far){camera.far=far;camera.updateProjectionMatrix();}_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(_lightPositionWorld);_lookTarget.copy(camera.position);_lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(_lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix);}}PointLightShadow.prototype.isPointLightShadow=true;class PointLight extends Light{constructor(color,intensity,distance=0,decay=1){super(color,intensity);this.type='PointLight';this.distance=distance;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new PointLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*4*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/(4*Math.PI);}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}}PointLight.prototype.isPointLight=true;class OrthographicCamera extends Camera{constructor(left=-1,right=1,top=1,bottom=-1,near=0.1,far=2000){super();this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near;this.far=far;this.updateProjectionMatrix();}copy(source,recursive){super.copy(source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;}setViewOffset(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}updateProjectionMatrix(){const dx=(this.right-this.left)/(2*this.zoom);const dy=(this.top-this.bottom)/(2*this.zoom);const cx=(this.right+this.left)/2;const cy=(this.top+this.bottom)/2;let left=cx-dx;let right=cx+dx;let top=cy+dy;let bottom=cy-dy;if(this.view!==null&&this.view.enabled){const scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;const scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}toJSON(meta){const data=super.toJSON(meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}}OrthographicCamera.prototype.isOrthographicCamera=true;class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,0.5,500));}}DirectionalLightShadow.prototype.isDirectionalLightShadow=true;class DirectionalLight extends Light{constructor(color,intensity){super(color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}DirectionalLight.prototype.isDirectionalLight=true;class AmbientLight extends Light{constructor(color,intensity){super(color,intensity);this.type='AmbientLight';}}AmbientLight.prototype.isAmbientLight=true;class RectAreaLight extends Light{constructor(color,intensity,width=10,height=10){super(color,intensity);this.type='RectAreaLight';this.width=width;this.height=height;}copy(source){super.copy(source);this.width=source.width;this.height=source.height;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.width=this.width;data.object.height=this.height;return data;}}RectAreaLight.prototype.isRectAreaLight=true;/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */ // 3-band SH defined by 9 coefficients\nclass SphericalHarmonics3{constructor(){this.coefficients=[];for(let i=0;i<9;i++){this.coefficients.push(new Vector3());}}set(coefficients){for(let i=0;i<9;i++){this.coefficients[i].copy(coefficients[i]);}return this;}zero(){for(let i=0;i<9;i++){this.coefficients[i].set(0,0,0);}return this;}// get the radiance in the direction of the normal\n// target is a Vector3\ngetAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.282095);// band 1\ntarget.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2\ntarget.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;}// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n// target is a Vector3\n// https://graphics.stanford.edu/papers/envmap/envmap.pdf\ngetIrradianceAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095\n// band 1\ntarget.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603\ntarget.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2\ntarget.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548\ntarget.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3\ntarget.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274\nreturn target;}add(sh){for(let i=0;i<9;i++){this.coefficients[i].add(sh.coefficients[i]);}return this;}addScaledSH(sh,s){for(let i=0;i<9;i++){this.coefficients[i].addScaledVector(sh.coefficients[i],s);}return this;}scale(s){for(let i=0;i<9;i++){this.coefficients[i].multiplyScalar(s);}return this;}lerp(sh,alpha){for(let i=0;i<9;i++){this.coefficients[i].lerp(sh.coefficients[i],alpha);}return this;}equals(sh){for(let i=0;i<9;i++){if(!this.coefficients[i].equals(sh.coefficients[i])){return false;}}return true;}copy(sh){return this.set(sh.coefficients);}clone(){return new this.constructor().copy(this);}fromArray(array,offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].fromArray(array,offset+i*3);}return this;}toArray(array=[],offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].toArray(array,offset+i*3);}return array;}// evaluate the basis functions\n// shBasis is an Array[ 9 ]\nstatic getBasisAt(normal,shBasis){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;// band 0\nshBasis[0]=0.282095;// band 1\nshBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2\nshBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}}SphericalHarmonics3.prototype.isSphericalHarmonics3=true;class LightProbe extends Light{constructor(sh=new SphericalHarmonics3(),intensity=1){super(undefined,intensity);this.sh=sh;}copy(source){super.copy(source);this.sh.copy(source.sh);return this;}fromJSON(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();\nthis.sh.fromArray(json.sh);return this;}toJSON(meta){const data=super.toJSON(meta);data.object.sh=this.sh.toArray();return data;}}LightProbe.prototype.isLightProbe=true;class MaterialLoader extends Loader{constructor(manager){super(manager);this.textures={};}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}const material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined&&material.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=new Color().setHex(json.sheen);if(json.emissive!==undefined&&material.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined&&material.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.transmission!==undefined)material.transmission=json.transmission;if(json.thickness!==undefined)material.thickness=json.thickness;if(json.attenuationDistance!==undefined)material.attenuationDistance=json.attenuationDistance;if(json.attenuationColor!==undefined&&material.attenuationColor!==undefined)material.attenuationColor.setHex(json.attenuationColor);if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.shadowSide!==undefined)material.shadowSide=json.shadowSide;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.morphNormals!==undefined)material.morphNormals=json.morphNormals;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.alphaToCoverage!==undefined)material.alphaToCoverage=json.alphaToCoverage;if(json.premultipliedAlpha!==undefined)material.premultipliedAlpha=json.premultipliedAlpha;if(json.vertexTangents!==undefined)material.vertexTangents=json.vertexTangents;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material\nif(json.uniforms!==undefined){for(const name in json.uniforms){const uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);break;case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(const key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){let normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);if(json.transmissionMap!==undefined)material.transmissionMap=getTexture(json.transmissionMap);if(json.thicknessMap!==undefined)material.thicknessMap=getTexture(json.thicknessMap);return material;}setTextures(value){this.textures=value;return this;}}class LoaderUtils{static decodeText(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nlet s='';for(let i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[i]);}try{// merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));}catch(e){// see #16358\nreturn s;}}static extractUrlBase(url){const index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super();this.type='InstancedBufferGeometry';this.instanceCount=Infinity;}copy(source){super.copy(source);this.instanceCount=source.instanceCount;return this;}clone(){return new this.constructor().copy(this);}toJSON(){const data=super.toJSON(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}}InstancedBufferGeometry.prototype.isInstancedBufferGeometry=true;class InstancedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}super(array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}copy(source){super.copy(source);this.meshPerAttribute=source.meshPerAttribute;return this;}toJSON(){const data=super.toJSON();data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}}InstancedBufferAttribute.prototype.isInstancedBufferAttribute=true;class BufferGeometryLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const interleavedBufferMap={};const arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(interleavedBufferMap[uuid]!==undefined)return interleavedBufferMap[uuid];const interleavedBuffers=json.interleavedBuffers;const interleavedBuffer=interleavedBuffers[uuid];const buffer=getArrayBuffer(json,interleavedBuffer.buffer);const array=getTypedArray(interleavedBuffer.type,buffer);const ib=new InterleavedBuffer(array,interleavedBuffer.stride);ib.uuid=interleavedBuffer.uuid;interleavedBufferMap[uuid]=ib;return ib;}function getArrayBuffer(json,uuid){if(arrayBufferMap[uuid]!==undefined)return arrayBufferMap[uuid];const arrayBuffers=json.arrayBuffers;const arrayBuffer=arrayBuffers[uuid];const ab=new Uint32Array(arrayBuffer).buffer;arrayBufferMap[uuid]=ab;return ab;}const geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();const index=json.data.index;if(index!==undefined){const typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}const attributes=json.data.attributes;for(const key in attributes){const attribute=attributes[key];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);const bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;bufferAttribute=new bufferAttributeConstr(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;if(attribute.usage!==undefined)bufferAttribute.setUsage(attribute.usage);if(attribute.updateRange!==undefined){bufferAttribute.updateRange.offset=attribute.updateRange.offset;bufferAttribute.updateRange.count=attribute.updateRange.count;}geometry.setAttribute(key,bufferAttribute);}const morphAttributes=json.data.morphAttributes;if(morphAttributes){for(const key in morphAttributes){const attributeArray=morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;array.push(bufferAttribute);}geometry.morphAttributes[key]=array;}}const morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}const groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(let i=0,n=groups.length;i!==n;++i){const group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}const boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){const center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}}class ObjectLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){let json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}const metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);}parse(json,onLoad){const animations=this.parseAnimations(json.animations);const shapes=this.parseShapes(json.shapes);const geometries=this.parseGeometries(json.geometries,shapes);const images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});const textures=this.parseTextures(json.textures,images);const materials=this.parseMaterials(json.materials,textures);const object=this.parseObject(json.object,geometries,materials,animations);const skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);//\nif(onLoad!==undefined){let hasImages=false;for(const uuid in images){if(images[uuid]instanceof HTMLImageElement){hasImages=true;break;}}if(hasImages===false)onLoad(object);}return object;}parseShapes(json){const shapes={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;}parseSkeletons(json,object){const skeletons={};const bones={};// generate bone lookup table\nobject.traverse(function(child){if(child.isBone)bones[child.uuid]=child;});// create skeletons\nif(json!==undefined){for(let i=0,l=json.length;i<l;i++){const skeleton=new Skeleton().fromJSON(json[i],bones);skeletons[skeleton.uuid]=skeleton;}}return skeletons;}parseGeometries(json,shapes){const geometries={};let geometryShapes;if(json!==undefined){const bufferGeometryLoader=new BufferGeometryLoader();for(let i=0,l=json.length;i<l;i++){let geometry;const data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'TubeGeometry':case'TubeBufferGeometry':// This only works for built-in curves (e.g. CatmullRomCurve3).\n// User defined curves or instances of CurvePath will not be deserialized.\ngeometry=new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}const extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+data.type+'\"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;}parseMaterials(json,textures){const cache={};// MultiMaterial\nconst materials={};if(json!==undefined){const loader=new MaterialLoader();loader.setTextures(textures);for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.type==='MultiMaterial'){// Deprecated\nconst array=[];for(let j=0;j<data.materials.length;j++){const material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;}parseAnimations(json){const animations={};if(json!==undefined){for(let i=0;i<json.length;i++){const data=json[i];const clip=AnimationClip.parse(data);animations[clip.uuid]=clip;}}return animations;}parseImages(json,onLoad){const scope=this;const images={};let loader;function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}function deserializeImage(image){if(typeof image==='string'){const url=image;const path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)?url:scope.resourcePath+url;return loadImage(path);}else{if(image.data){return{data:getTypedArray(image.type,image.data),width:image.width,height:image.height};}else{return null;}}}if(json!==undefined&&json.length>0){const manager=new LoadingManager(onLoad);loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i];const url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(let j=0,jl=url.length;j<jl;j++){const currentUrl=url[j];const deserializedImage=deserializeImage(currentUrl);if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}}}else{// load single image\nconst deserializedImage=deserializeImage(image.url);if(deserializedImage!==null){images[image.uuid]=deserializedImage;}}}}return images;}parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}const textures={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}let texture;const image=images[data.image];if(Array.isArray(image)){texture=new CubeTexture(image);if(image.length===6)texture.needsUpdate=true;}else{if(image&&image.data){texture=new DataTexture(image.data,image.width,image.height);}else{texture=new Texture(image);}if(image)texture.needsUpdate=true;// textures can have undefined image data\n}texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;}parseObject(data,geometries,materials,animations){let object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){const array=[];for(let i=0,l=name.length;i<l;i++){const uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}let geometry,material;switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new SkinnedMesh(geometry,material);if(data.bindMode!==undefined)object.bindMode=data.bindMode;if(data.bindMatrix!==undefined)object.bindMatrix.fromArray(data.bindMatrix);if(data.skeleton!==undefined)object.skeleton=data.skeleton;break;case'Mesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);const count=data.count;const instanceMatrix=data.instanceMatrix;const instanceColor=data.instanceColor;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);if(instanceColor!==undefined)object.instanceColor=new BufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;case'Bone':object=new Bone();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.normalBias!==undefined)object.shadow.normalBias=data.shadow.normalBias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){const children=data.children;for(let i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials,animations));}}if(data.animations!==undefined){const objectAnimations=data.animations;for(let i=0;i<objectAnimations.length;i++){const uuid=objectAnimations[i];object.animations.push(animations[uuid]);}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;const levels=data.levels;for(let l=0;l<levels.length;l++){const level=levels[l];const child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}bindSkeletons(object,skeletons){if(Object.keys(skeletons).length===0)return;object.traverse(function(child){if(child.isSkinnedMesh===true&&child.skeleton!==undefined){const skeleton=skeletons[child.skeleton];if(skeleton===undefined){console.warn('THREE.ObjectLoader: No skeleton found with UUID:',child.skeleton);}else{child.bind(skeleton,child.bindMatrix);}}});}/* DEPRECATED */setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};const TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};const TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};class ImageBitmapLoader extends Loader{constructor(manager){super(manager);if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}this.options={premultiplyAlpha:'none'};}setOptions(options){this.options=options;return this;}load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const fetchOptions={};fetchOptions.credentials=this.crossOrigin==='anonymous'?'same-origin':'include';fetchOptions.headers=this.requestHeader;fetch(url,fetchOptions).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:'none'}));}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}}ImageBitmapLoader.prototype.isImageBitmapLoader=true;class ShapePath{constructor(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}moveTo(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;}lineTo(x,y){this.currentPath.lineTo(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;}splineThru(pts){this.currentPath.splineThru(pts);return this;}toShapes(isCCW,noHoles){function toShapesNoHoles(inSubpaths){const shapes=[];for(let i=0,l=inSubpaths.length;i<l;i++){const tmpPath=inSubpaths[i];const tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){const polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nlet inside=false;for(let p=polyLen-1,q=0;q<polyLen;p=q++){let edgeLowPt=inPolygon[p];let edgeHighPt=inPolygon[q];let edgeDx=edgeHighPt.x-edgeLowPt.x;let edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{const perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}const isClockWise=ShapeUtils.isClockWise;const subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);let solid,tmpPath,tmpShape;const shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}let holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nconst betterShapeHoles=[];const newShapes=[];let newShapeHoles=[];let mainIdx=0;let tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(let i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){let ambiguous=false;const toChange=[];for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){const sho=newShapeHoles[sIdx];for(let hIdx=0;hIdx<sho.length;hIdx++){const ho=sho[hIdx];let hole_unassigned=true;for(let s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}let tmpHoles;for(let i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(let j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}}class Font{constructor(data){this.type='Font';this.data=data;}generateShapes(text,size=100){const shapes=[];const paths=createPaths(text,size,this.data);for(let p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}}function createPaths(text,size,data){const chars=Array.from(text);const scale=size/data.resolution;const line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;const paths=[];let offsetX=0,offsetY=0;for(let i=0;i<chars.length;i++){const char=chars[i];if(char==='\\n'){offsetX=0;offsetY-=line_height;}else{const ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){const glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph){console.error('THREE.Font: character \"'+char+'\" does not exists in font family '+data.familyName+'.');return;}const path=new ShapePath();let x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){const outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(let i=0,l=outline.length;i<l;){const action=outline[i++];switch(action){case'm':// moveTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}Font.prototype.isFont=true;class FontLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){let json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}const font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);}parse(json){return new Font(json);}}let _context;const AudioContext={getContext:function(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function(value){_context=value;}};class AudioLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nconst bufferCopy=buffer.slice(0);const context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}}class HemisphereLightProbe extends LightProbe{constructor(skyColor,groundColor,intensity=1){super(undefined,intensity);const color1=new Color().set(skyColor);const color2=new Color().set(groundColor);const sky=new Vector3(color1.r,color1.g,color1.b);const ground=new Vector3(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\nconst c0=Math.sqrt(Math.PI);const c1=c0*Math.sqrt(0.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);}}HemisphereLightProbe.prototype.isHemisphereLightProbe=true;class AmbientLightProbe extends LightProbe{constructor(color,intensity=1){super(undefined,intensity);const color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\nthis.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));}}AmbientLightProbe.prototype.isAmbientLightProbe=true;const _eyeRight=/*@__PURE__*/new Matrix4();const _eyeLeft=/*@__PURE__*/new Matrix4();class StereoCamera{constructor(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}update(camera){const cache=this._cache;const needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nconst projectionMatrix=camera.projectionMatrix.clone();const eyeSepHalf=cache.eyeSep/2;const eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;const ymax=cache.near*Math.tan(DEG2RAD*cache.fov*0.5)/cache.zoom;let xmin,xmax;// translate xOffset\n_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye\nxmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}}class Clock{constructor(autoStart=true){this.autoStart=autoStart;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}start(){this.startTime=now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;}stop(){this.getElapsedTime();this.running=false;this.autoStart=false;}getElapsedTime(){this.getDelta();return this.elapsedTime;}getDelta(){let diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){const newTime=now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}}function now(){return(typeof performance==='undefined'?Date:performance).now();// see #10732\n}const _position$1=/*@__PURE__*/new Vector3();const _quaternion$1=/*@__PURE__*/new Quaternion();const _scale$1=/*@__PURE__*/new Vector3();const _orientation$1=/*@__PURE__*/new Vector3();class AudioListener extends Object3D{constructor(){super();this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;// private\nthis._clock=new Clock();}getInput(){return this.gain;}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;}getFilter(){return this.filter;}setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;}getMasterVolume(){return this.gain.gain.value;}setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);const listener=this.context.listener;const up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1);_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1);if(listener.positionX){// code path for Chrome (see #14393)\nconst endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$1.x,endTime);listener.positionY.linearRampToValueAtTime(_position$1.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$1.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation$1.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation$1.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation$1.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$1.x,_position$1.y,_position$1.z);listener.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,up.x,up.y,up.z);}}}class Audio extends Object3D{constructor(listener){super();this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType='empty';this._startedAt=0;this._progress=0;this._connected=false;this.filters=[];}getOutput(){return this.gain;}setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;}setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;}setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;}setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;}play(delay=0){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;const source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();}pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress\nthis._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios\nthis._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;}stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}this._connected=true;return this;}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}this._connected=false;return this;}getFilters(){return this.filters;}setFilters(value){if(!value)value=[];if(this._connected===true){this.disconnect();this.filters=value.slice();this.connect();}else{this.filters=value.slice();}return this;}setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;}getDetune(){return this.detune;}getFilter(){return this.getFilters()[0];}setFilter(filter){return this.setFilters(filter?[filter]:[]);}setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;}getPlaybackRate(){return this.playbackRate;}onEnded(){this.isPlaying=false;}getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;}setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;}setLoopStart(value){this.loopStart=value;return this;}setLoopEnd(value){this.loopEnd=value;return this;}getVolume(){return this.gain.gain.value;}setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}}const _position=/*@__PURE__*/new Vector3();const _quaternion=/*@__PURE__*/new Quaternion();const _scale=/*@__PURE__*/new Vector3();const _orientation=/*@__PURE__*/new Vector3();class PositionalAudio extends Audio{constructor(listener){super(listener);this.panner=this.context.createPanner();this.panner.panningModel='HRTF';this.panner.connect(this.gain);}getOutput(){return this.panner;}getRefDistance(){return this.panner.refDistance;}setRefDistance(value){this.panner.refDistance=value;return this;}getRolloffFactor(){return this.panner.rolloffFactor;}setRolloffFactor(value){this.panner.rolloffFactor=value;return this;}getDistanceModel(){return this.panner.distanceModel;}setDistanceModel(value){this.panner.distanceModel=value;return this;}getMaxDistance(){return this.panner.maxDistance;}setMaxDistance(value){this.panner.maxDistance=value;return this;}setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position,_quaternion,_scale);_orientation.set(0,0,1).applyQuaternion(_quaternion);const panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nconst endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position.x,endTime);panner.positionY.linearRampToValueAtTime(_position.y,endTime);panner.positionZ.linearRampToValueAtTime(_position.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation.z,endTime);}else{panner.setPosition(_position.x,_position.y,_position.z);panner.setOrientation(_orientation.x,_orientation.y,_orientation.z);}}}class AudioAnalyser{constructor(audio,fftSize=2048){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;}getAverageFrequency(){let value=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++){value+=data[i];}return value/data.length;}}class PropertyMixer{constructor(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;let mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\n//\n// 'add' is used for additive cumulative results\n//\n// 'work' is optional and is only present for quaternion types. It is used\n// to store intermediate quaternion multiplication results\nswitch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,\n// additive is not relevant for non-numeric types\nmixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}// accumulate data in the 'incoming' region into 'accu<i>'\naccumulate(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nconst buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;let currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(let i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;const mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;}// accumulate data in the 'incoming' region into 'add'\naccumulateAdditive(weight){const buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity\nthis._setIdentity();}// add := add + incoming * weight\nthis._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;}// apply the state of 'accu<i>' to the binding when accus differ\napply(accuIndex){const stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nconst originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN\nthis._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(let i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}}// remember the state of the bound property and copy it to both accus\nsaveOriginalState(){const binding=this.binding;const buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(let i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}// Add to identity for additive\nthis._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;}// apply the state previously taken via 'saveOriginalState' to the binding\nrestoreOriginalState(){const originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);}_setAdditiveIdentityNumeric(){const startIndex=this._addIndex*this.valueSize;const endIndex=startIndex+this.valueSize;for(let i=startIndex;i<endIndex;i++){this.buffer[i]=0;}}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1;}_setAdditiveIdentityOther(){const startIndex=this._origIndex*this.valueSize;const targetIndex=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++){this.buffer[targetIndex+i]=this.buffer[startIndex+i];}}// mix functions\n_select(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(let i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}}_slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);}_slerpAdditive(buffer,dstOffset,srcOffset,t,stride){const workOffset=this._workIndex*stride;// Store result in intermediate buffer offset\nQuaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result\nQuaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);}_lerp(buffer,dstOffset,srcOffset,t,stride){const s=1-t;for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}}_lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t;}}}// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';const _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar='[^'+_RESERVED_CHARS_RE+']';const _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',_wordChar);const _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');const _supportedObjectNames=['material','materials','bones'];class Composite{constructor(targetGroup,path,optionalParsedPath){const parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}getValue(array,offset){this.bind();// bind all binding\nconst firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);}setValue(array,offset){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}}bind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}}unbind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}}// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding{constructor(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;// initial state of these methods that calls 'bind'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}static create(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}}/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */static sanitizeNodeName(name){return name.replace(/\\s/g,'_').replace(_reservedRe,'');}static parseTrackName(trackName){const matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}const results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};const lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){const objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against an allowlist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;}static findNode(root,nodeName){if(!nodeName||nodeName===''||nodeName==='.'||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){const bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){const searchNodeSubtree=function(children){for(let i=0;i<children.length;i++){const childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}const result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};const subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}// these are used to \"bind\" a nonexistent property\n_getValue_unavailable(){}_setValue_unavailable(){}// Getters\n_getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];}_getValue_array(buffer,offset){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}}_getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];}_getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}// Direct\n_setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];}_setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;}_setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// EntireArray\n_setValue_array(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}}_setValue_array_setNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;}_setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}// ArrayElement\n_setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];}_setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;}_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// HasToFromArray\n_setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);}_setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;}_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}_getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);}_setValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);}// create getter / setter pair for a property in the scene graph\nbind(){let targetObject=this.node;const parsedPath=this.parsedPath;const objectName=parsedPath.objectName;const propertyName=parsedPath.propertyName;let propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){let objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(let i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nconst nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){const nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nlet versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nlet bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName==='morphTargetInfluences'){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];}unbind(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}}PropertyBinding.Composite=Composite;PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray];PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[// Direct\nPropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[// EntireArray\nPropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[// ArrayElement\nPropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[// HasToFromArray\nPropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */class AnimationObjectGroup{constructor(){this.uuid=generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nconst indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(let i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nconst scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}add(){const objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;let knownObject=undefined,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid;let index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex];let binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}remove(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nconst lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// remove & forget\nuncache(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nconst lastIndex=--nObjects,lastObject=objects[lastIndex];if(lastIndex>0){indicesByUUID[lastObject.uuid]=index;}objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// Internal interface used by befriended PropertyBinding.Composite:\nsubscribe_(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nconst indicesByPath=this._bindingsIndicesByPath;let index=indicesByPath[path];const bindings=this._bindings;if(index!==undefined)return bindings[index];const paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(let i=nCachedObjects,n=objects.length;i!==n;++i){const object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;}unsubscribe_(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nconst indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){const paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}}AnimationObjectGroup.prototype.isAnimationObjectGroup=true;class AnimationAction{constructor(mixer,clip,localRoot=null,blendMode=clip.blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot;this.blendMode=blendMode;const tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);const interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let i=0;i!==nTracks;++i){const interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}// State & Scheduling\nplay(){this._mixer._activateAction(this);return this;}stop(){this._mixer._deactivateAction(this);return this.reset();}reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);}// return true when play has been called\nisScheduled(){return this._mixer._isActiveAction(this);}startAt(time){this._startTime=time;return this;}setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;}// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\nsetEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();}// return the weight considering fading and .enabled\ngetEffectiveWeight(){return this._effectiveWeight;}fadeIn(duration){return this._scheduleFading(duration,0,1);}fadeOut(duration){return this._scheduleFading(duration,1,0);}crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){const fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;}crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);}stopFading(){const weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;}// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\nsetEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();}// return the time scale considering warping and .paused\ngetEffectiveTimeScale(){return this._effectiveTimeScale;}setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();}syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();}halt(duration){return this.warp(this._effectiveTimeScale,0,duration);}warp(startTimeScale,endTimeScale,duration){const mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;let interpolant=this._timeScaleInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;}stopWarping(){const timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;}// Object Accessors\ngetMixer(){return this._mixer;}getClip(){return this._clip;}getRoot(){return this._localRoot||this._mixer._root;}// Interna\n_update(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}const startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nconst timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);const clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nconst weight=this._updateWeight(time);if(weight>0){const interpolants=this._interpolants;const propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}}}_updateWeight(time){let weight=0;if(this.enabled){weight=this.weight;const interpolant=this._weightInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;}_updateTimeScale(time){let timeScale=0;if(!this.paused){timeScale=this.timeScale;const interpolant=this._timeScaleInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;}_updateTime(deltaTime){const duration=this._clip.duration;const loop=this.loop;let time=this.time+deltaTime;let loopCount=this._loopCount;const pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nconst loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);const pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nconst atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nreturn duration-time;}}return time;}_setEndings(atStart,atEnd,pingPong){const settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}}_scheduleFading(duration,weightNow,weightThen){const mixer=this._mixer,now=mixer.time;let interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}}class AnimationMixer extends EventDispatcher{constructor(root){super();this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}_bindAction(action,prototypeAction){const root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;let bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(let i=0;i!==nTracks;++i){const track=tracks[i],trackName=track.name;let binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}const path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}}_activateAction(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nconst rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}const bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}}_deactivateAction(action){if(this._isActiveAction(action)){const bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}}// Memory manager\n_initMemoryManager(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;const scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};}// Memory management for AnimationAction objects\n_isActiveAction(action){const index=action._cacheIndex;return index!==null&&index<this._nActiveActions;}_addInactiveAction(action,clipUuid,rootUuid){const actions=this._actions,actionsByClip=this._actionsByClip;let actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{const knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;}_removeInactiveAction(action){const actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;const clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;const actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);}_removeInactiveBindingsForAction(action){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}}_lendAction(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nconst actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;}_takeBackAction(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nconst actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;}// Memory management for PropertyMixer objects\n_addInactiveBinding(binding,rootUuid,trackName){const bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;let bindingByName=bindingsByRoot[rootUuid];if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);}_removeInactiveBinding(binding){const bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}}_lendBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;}_takeBackBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;}// Memory management of Interpolants for weight and time scale\n_lendControlInterpolant(){const interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;let interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;}_takeBackControlInterpolant(interpolant){const interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;}// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\nclipAction(clip,optionalRoot,blendMode){const root=optionalRoot||this._root,rootUuid=root.uuid;let clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip;const clipUuid=clipObject!==null?clipObject.uuid:clip;const actionsForClip=this._actionsByClip[clipUuid];let prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){const existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nconst newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;}// get an existing action\nexistingAction(clip,optionalRoot){const root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;}// deactivates all previously scheduled actions\nstopAllAction(){const actions=this._actions,nActions=this._nActiveActions;for(let i=nActions-1;i>=0;--i){actions[i].stop();}return this;}// advance the time and update apply the animation\nupdate(deltaTime){deltaTime*=this.timeScale;const actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(let i=0;i!==nActions;++i){const action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nconst bindings=this._bindings,nBindings=this._nActiveBindings;for(let i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;}// Allows you to seek to a specific time in an animation.\nsetTime(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;\nfor(let i=0;i<this._actions.length;i++){this._actions[i].time=0;// Zero out time attribute for all associated AnimationAction objects.\n}return this.update(timeInSeconds);// Update used to set exact time. Returns \"this\" AnimationMixer object.\n}// return this mixer's root target object\ngetRoot(){return this._root;}// free all resources specific to a particular clip\nuncacheClip(clip){const actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nconst actionsToRemove=actionsForClip.knownActions;for(let i=0,n=actionsToRemove.length;i!==n;++i){const action=actionsToRemove[i];this._deactivateAction(action);const cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}}// free all resources specific to a particular root target object\nuncacheRoot(root){const rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(const clipUuid in actionsByClip){const actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}const bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(const trackName in bindingByName){const binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}}// remove a targeted clip from the cache\nuncacheAction(clip,optionalRoot){const action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}}AnimationMixer.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Uniform{constructor(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}clone(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());}}class InstancedInterleavedBuffer extends InterleavedBuffer{constructor(array,stride,meshPerAttribute=1){super(array,stride);this.meshPerAttribute=meshPerAttribute||1;}copy(source){super.copy(source);this.meshPerAttribute=source.meshPerAttribute;return this;}clone(data){const ib=super.clone(data);ib.meshPerAttribute=this.meshPerAttribute;return ib;}toJSON(data){const json=super.toJSON(data);json.isInstancedInterleavedBuffer=true;json.meshPerAttribute=this.meshPerAttribute;return json;}}InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer=true;class GLBufferAttribute{constructor(buffer,type,itemSize,elementSize,count){this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.version=0;}set needsUpdate(value){if(value===true)this.version++;}setBuffer(buffer){this.buffer=buffer;return this;}setType(type,elementSize){this.type=type;this.elementSize=elementSize;return this;}setItemSize(itemSize){this.itemSize=itemSize;return this;}setCount(count){this.count=count;return this;}}GLBufferAttribute.prototype.isGLBufferAttribute=true;class Raycaster{constructor(origin,direction,near=0,far=Infinity){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near;this.far=far;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};}set(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);}setFromCamera(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type: '+camera.type);}}intersectObject(object,recursive=false,intersects=[]){intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;}intersectObjects(objects,recursive=false,intersects=[]){for(let i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}}function ascSort(a,b){return a.distance-b.distance;}function intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){const children=object.children;for(let i=0,l=children.length;i<l;i++){intersectObject(children[i],raycaster,intersects,true);}}}/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */class Spherical{constructor(radius=1,phi=0,theta=0){this.radius=radius;this.phi=phi;// polar angle\nthis.theta=theta;// azimuthal angle\nreturn this;}set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;}copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;}// restrict phi to be betwee EPS and PI-EPS\nmakeSafe(){const EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(clamp(y/this.radius,-1,1));}return this;}clone(){return new this.constructor().copy(this);}}/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */class Cylindrical{constructor(radius=1,theta=0,y=0){this.radius=radius;// distance from the origin to a point in the x-z plane\nthis.theta=theta;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y;// height above the x-z plane\nreturn this;}set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;}copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}clone(){return new this.constructor().copy(this);}}const _vector$4=/*@__PURE__*/new Vector2();class Box2{constructor(min=new Vector2(+Infinity,+Infinity),max=new Vector2(-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$4.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;}getCenter(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));}intersectsBox(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$4.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}intersect(box){this.min.max(box.min);this.max.min(box.max);return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box2.prototype.isBox2=true;const _startP=/*@__PURE__*/new Vector3();const _startEnd=/*@__PURE__*/new Vector3();class Line3{constructor(start=new Vector3(),end=new Vector3()){this.start=start;this.end=end;}set(start,end){this.start.copy(start);this.end.copy(end);return this;}copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;}getCenter(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);}delta(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3();}return target.subVectors(this.end,this.start);}distanceSq(){return this.start.distanceToSquared(this.end);}distance(){return this.start.distanceTo(this.end);}at(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);const startEnd2=_startEnd.dot(_startEnd);const startEnd_startP=_startEnd.dot(_startP);let t=startEnd_startP/startEnd2;if(clampToLine){t=clamp(t,0,1);}return t;}closestPointToPoint(point,clampToLine,target){const t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}clone(){return new this.constructor().copy(this);}}class ImmediateRenderObject extends Object3D{constructor(material){super();this.material=material;this.render=function()/* renderCallback */{};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0;}}ImmediateRenderObject.prototype.isImmediateRenderObject=true;const _vector$3=/*@__PURE__*/new Vector3();class SpotLightHelper extends Object3D{constructor(light,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new BufferGeometry();const positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,j=1,l=32;i<l;i++,j++){const p1=i/l*Math.PI*2;const p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}dispose(){this.cone.geometry.dispose();this.cone.material.dispose();}update(){this.light.updateMatrixWorld();const coneLength=this.light.distance?this.light.distance:1000;const coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$3);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}}}const _vector$2=/*@__PURE__*/new Vector3();const _boneMatrix=/*@__PURE__*/new Matrix4();const _matrixWorldInv=/*@__PURE__*/new Matrix4();class SkeletonHelper extends LineSegments{constructor(object){const bones=getBoneList(object);const geometry=new BufferGeometry();const vertices=[];const colors=[];const color1=new Color(0,0,1);const color2=new Color(0,1,0);for(let i=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(geometry,material);this.type='SkeletonHelper';this.isSkeletonHelper=true;this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}updateMatrixWorld(force){const bones=this.bones;const geometry=this.geometry;const position=geometry.getAttribute('position');_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let i=0,j=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;super.updateMatrixWorld(force);}}function getBoneList(object){const boneList=[];if(object&&object.isBone){boneList.push(object);}for(let i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}class PointLightHelper extends Mesh{constructor(light,sphereSize,color){const geometry=new SphereGeometry(sphereSize,4,2);const material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});super(geometry,material);this.light=light;this.light.updateMatrixWorld();this.color=color;this.type='PointLightHelper';this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/}dispose(){this.geometry.dispose();this.material.dispose();}update(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/}}const _vector$1=/*@__PURE__*/new Vector3();const _color1=/*@__PURE__*/new Color();const _color2=/*@__PURE__*/new Color();class HemisphereLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new OctahedronGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const position=geometry.getAttribute('position');const colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose();}update(){const mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{const colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(let i=0,l=colors.count;i<l;i++){const color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());}}class GridHelper extends LineSegments{constructor(size=10,divisions=10,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const center=divisions/2;const step=size/divisions;const halfSize=size/2;const vertices=[],colors=[];for(let i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);const color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='GridHelper';}}class PolarGridHelper extends LineSegments{constructor(radius=10,radials=16,circles=8,divisions=64,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const vertices=[];const colors=[];// create the radials\nfor(let i=0;i<=radials;i++){const v=i/radials*(Math.PI*2);const x=Math.sin(v)*radius;const z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);const color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(let i=0;i<=circles;i++){const color=i&1?color1:color2;const r=radius-radius/circles*i;for(let j=0;j<divisions;j++){// first vertex\nlet v=j/divisions*(Math.PI*2);let x=Math.sin(v)*r;let z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex\nv=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='PolarGridHelper';}}const _v1=/*@__PURE__*/new Vector3();const _v2=/*@__PURE__*/new Vector3();const _v3=/*@__PURE__*/new Vector3();class DirectionalLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;let geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();}update(){_v1.setFromMatrixPosition(this.light.matrixWorld);_v2.setFromMatrixPosition(this.light.target.matrixWorld);_v3.subVectors(_v2,_v1);this.lightPlane.lookAt(_v2);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2);this.targetLine.scale.z=_v3.length();}}const _vector=/*@__PURE__*/new Vector3();const _camera=/*@__PURE__*/new Camera();/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */class CameraHelper extends LineSegments{constructor(camera){const geometry=new BufferGeometry();const material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});const vertices=[];const colors=[];const pointMap={};// colors\nconst colorFrustum=new Color(0xffaa00);const colorCone=new Color(0xff0000);const colorUp=new Color(0x00aaff);const colorTarget=new Color(0xffffff);const colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));super(geometry,material);this.type='CameraHelper';this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}update(){const geometry=this.geometry;const pointMap=this.pointMap;const w=1,h=1;// we need just camera projection matrix inverse\n// world matrix must be identity\n_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target\nsetPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near\nsetPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far\nsetPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up\nsetPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross\nsetPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;}dispose(){this.geometry.dispose();this.material.dispose();}}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,y,z).unproject(camera);const points=pointMap[point];if(points!==undefined){const position=geometry.getAttribute('position');for(let i=0,l=points.length;i<l;i++){position.setXYZ(points[i],_vector.x,_vector.y,_vector.z);}}}const _box=/*@__PURE__*/new Box3();class BoxHelper extends LineSegments{constructor(object,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=new Float32Array(8*3);const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.object=object;this.type='BoxHelper';this.matrixAutoUpdate=false;this.update();}update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box.setFromObject(this.object);}if(_box.isEmpty())return;const min=_box.min;const max=_box.max;/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/const position=this.geometry.attributes.position;const array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();}setFromObject(object){this.object=object;this.update();return this;}copy(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;}}class Box3Helper extends LineSegments{constructor(box,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.box=box;this.type='Box3Helper';this.geometry.computeBoundingSphere();}updateMatrixWorld(force){const box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);super.updateMatrixWorld(force);}}class PlaneHelper extends Line{constructor(plane,size=1,hex=0xffff00){const color=hex;const positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='PlaneHelper';this.plane=plane;this.size=size;const positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];const geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));}updateMatrixWorld(force){let scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);super.updateMatrixWorld(force);}}const _axis=/*@__PURE__*/new Vector3();let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{// dir is assumed to be normalized\nconstructor(dir=new Vector3(0,0,1),origin=new Vector3(0,0,0),length=1,color=0xffff00,headLength=length*0.2,headWidth=headLength*0.2){super();this.type='ArrowHelper';if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();const radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}}setLength(length,headLength=length*0.2,headWidth=headLength*0.2){this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458\nthis.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();}setColor(color){this.line.material.color.set(color);this.cone.material.color.set(color);}copy(source){super.copy(source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;}}class AxesHelper extends LineSegments{constructor(size=1){const vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];const colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='AxesHelper';}dispose(){this.geometry.dispose();this.material.dispose();}}const _floatView=new Float32Array(1);const _int32View=new Int32Array(_floatView.buffer);class DataUtils{// Converts float32 to float16 (stored as uint16 value).\nstatic toHalfFloat(val){// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */_floatView[0]=val;const x=_int32View[0];let bits=x>>16&0x8000;/* Get the sign */let m=x>>12&0x07ff;/* Keep one extra bit for rounding */const e=x>>23&0xff;/* Using int is faster here */ /* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */if(e<103)return bits;/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */if(e>142){bits|=0x7c00;/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */bits|=(e==255?0:1)&&x&0x007fffff;return bits;}/* If exponent underflows but not too much, return a denormal */if(e<113){m|=0x0800;/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */bits|=(m>>114-e)+(m>>113-e&1);return bits;}bits|=e-112<<10|m>>1;/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */bits+=m&1;return bits;}}const LOD_MIN=4;const LOD_MAX=8;const SIZE_MAX=Math.pow(2,LOD_MAX);// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];const TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES=20;const ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6};const backgroundMaterial=new MeshBasicMaterial({side:BackSide,depthWrite:false,depthTest:false});const backgroundBox=new Mesh(new BoxGeometry(),backgroundMaterial);const _flatCamera=/*@__PURE__*/new OrthographicCamera();const{_lodPlanes,_sizeLods,_sigmas}=/*@__PURE__*/_createPlanes();const _clearColor=/*@__PURE__*/new Color();let _oldTarget=null;// Golden Ratio\nconst PHI=(1+Math.sqrt(5))/2;const INV_PHI=1/PHI;// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections=[/*@__PURE__*/new Vector3(1,1,1),/*@__PURE__*/new Vector3(-1,1,1),/*@__PURE__*/new Vector3(1,1,-1),/*@__PURE__*/new Vector3(-1,1,-1),/*@__PURE__*/new Vector3(0,PHI,INV_PHI),/*@__PURE__*/new Vector3(0,PHI,-INV_PHI),/*@__PURE__*/new Vector3(INV_PHI,0,PHI),/*@__PURE__*/new Vector3(-INV_PHI,0,PHI),/*@__PURE__*/new Vector3(PHI,INV_PHI,0),/*@__PURE__*/new Vector3(-PHI,INV_PHI,0)];/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/function convertLinearToRGBE(color){const maxComponent=Math.max(color.r,color.g,color.b);const fExp=Math.min(Math.max(Math.ceil(Math.log2(maxComponent)),-128.0),127.0);color.multiplyScalar(Math.pow(2.0,-fExp));const alpha=(fExp+128.0)/255.0;return alpha;}class PMREMGenerator{constructor(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader(MAX_SAMPLES);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial);}/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */fromScene(scene,sigma=0,near=0.1,far=100){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);if(sigma>0){this._blur(cubeUVRenderTarget,0,0,sigma);}this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromEquirectangular(equirectangular){return this._fromTexture(equirectangular);}/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromCubemap(cubemap){return this._fromTexture(cubemap);}/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=_getCubemapShader();this._compileMaterial(this._cubemapShader);}}/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=_getEquirectShader();this._compileMaterial(this._equirectShader);}}/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(let i=0;i<_lodPlanes.length;i++){_lodPlanes[i].dispose();}}// private interface\n_cleanup(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=false;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height);}_fromTexture(texture){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}_allocateTargets(texture){// warning: null texture is valid\nconst params={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:false,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(texture)?texture.encoding:RGBEEncoding,depthBuffer:false};const cubeUVRenderTarget=_createRenderTarget(params);cubeUVRenderTarget.depthBuffer=texture?false:true;this._pingPongRenderTarget=_createRenderTarget(params);return cubeUVRenderTarget;}_compileMaterial(material){const tmpMesh=new Mesh(_lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera);}_sceneToCubeUV(scene,near,far,cubeUVRenderTarget){const fov=90;const aspect=1;const cubeCamera=new PerspectiveCamera(fov,aspect,near,far);const upSign=[1,-1,1,1,1,1];const forwardSign=[1,1,1,-1,-1,-1];const renderer=this._renderer;const originalAutoClear=renderer.autoClear;const outputEncoding=renderer.outputEncoding;const toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor);renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;renderer.autoClear=false;let useSolidColor=false;const background=scene.background;if(background){if(background.isColor){backgroundMaterial.color.copy(background).convertSRGBToLinear();scene.background=null;const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}}else{backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}for(let i=0;i<6;i++){const col=i%3;if(col==0){cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(forwardSign[i],0,0);}else if(col==1){cubeCamera.up.set(0,0,upSign[i]);cubeCamera.lookAt(0,forwardSign[i],0);}else{cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(0,0,forwardSign[i]);}_setViewport(cubeUVRenderTarget,col*SIZE_MAX,i>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);if(useSolidColor){renderer.render(backgroundBox,cubeCamera);}renderer.render(scene,cubeCamera);}renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.autoClear=originalAutoClear;}_textureToCubeUV(texture,cubeUVRenderTarget){const renderer=this._renderer;if(texture.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=_getCubemapShader();}}else{if(this._equirectShader==null){this._equirectShader=_getEquirectShader();}}const material=texture.isCubeTexture?this._cubemapShader:this._equirectShader;const mesh=new Mesh(_lodPlanes[0],material);const uniforms=material.uniforms;uniforms['envMap'].value=texture;if(!texture.isCubeTexture){uniforms['texelSize'].value.set(1.0/texture.image.width,1.0/texture.image.height);}uniforms['inputEncoding'].value=ENCODINGS[texture.encoding];uniforms['outputEncoding'].value=ENCODINGS[cubeUVRenderTarget.texture.encoding];_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,_flatCamera);}_applyPMREM(cubeUVRenderTarget){const renderer=this._renderer;const autoClear=renderer.autoClear;renderer.autoClear=false;for(let i=1;i<TOTAL_LODS;i++){const sigma=Math.sqrt(_sigmas[i]*_sigmas[i]-_sigmas[i-1]*_sigmas[i-1]);const poleAxis=_axisDirections[(i-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,i-1,i,sigma,poleAxis);}renderer.autoClear=autoClear;}/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */_blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){const pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,'latitudinal',poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,'longitudinal',poleAxis);}_halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){const renderer=this._renderer;const blurMaterial=this._blurMaterial;if(direction!=='latitudinal'&&direction!=='longitudinal'){console.error('blur direction must be either latitudinal or longitudinal!');}// Number of standard deviations at which to cut off the discrete approximation.\nconst STANDARD_DEVIATIONS=3;const blurMesh=new Mesh(_lodPlanes[lodOut],blurMaterial);const blurUniforms=blurMaterial.uniforms;const pixels=_sizeLods[lodIn]-1;const radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);const sigmaPixels=sigmaRadians/radiansPerPixel;const samples=isFinite(sigmaRadians)?1+Math.floor(STANDARD_DEVIATIONS*sigmaPixels):MAX_SAMPLES;if(samples>MAX_SAMPLES){console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);}const weights=[];let sum=0;for(let i=0;i<MAX_SAMPLES;++i){const x=i/sigmaPixels;const weight=Math.exp(-x*x/2);weights.push(weight);if(i==0){sum+=weight;}else if(i<samples){sum+=2*weight;}}for(let i=0;i<weights.length;i++){weights[i]=weights[i]/sum;}blurUniforms['envMap'].value=targetIn.texture;blurUniforms['samples'].value=samples;blurUniforms['weights'].value=weights;blurUniforms['latitudinal'].value=direction==='latitudinal';if(poleAxis){blurUniforms['poleAxis'].value=poleAxis;}blurUniforms['dTheta'].value=radiansPerPixel;blurUniforms['mipInt'].value=LOD_MAX-lodIn;blurUniforms['inputEncoding'].value=ENCODINGS[targetIn.texture.encoding];blurUniforms['outputEncoding'].value=ENCODINGS[targetIn.texture.encoding];const outputSize=_sizeLods[lodOut];const x=3*Math.max(0,SIZE_MAX-2*outputSize);const y=(lodOut===0?0:2*SIZE_MAX)+2*outputSize*(lodOut>LOD_MAX-LOD_MIN?lodOut-LOD_MAX+LOD_MIN:0);_setViewport(targetOut,x,y,3*outputSize,2*outputSize);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera);}}function _isLDR(texture){if(texture===undefined||texture.type!==UnsignedByteType)return false;return texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;}function _createPlanes(){const _lodPlanes=[];const _sizeLods=[];const _sigmas=[];let lod=LOD_MAX;for(let i=0;i<TOTAL_LODS;i++){const sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);let sigma=1.0/sizeLod;if(i>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1];}else if(i==0){sigma=0;}_sigmas.push(sigma);const texelSize=1.0/(sizeLod-1);const min=-texelSize/2;const max=1+texelSize/2;const uv1=[min,min,max,min,max,max,min,min,max,max,min,max];const cubeFaces=6;const vertices=6;const positionSize=3;const uvSize=2;const faceIndexSize=1;const position=new Float32Array(positionSize*vertices*cubeFaces);const uv=new Float32Array(uvSize*vertices*cubeFaces);const faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(let face=0;face<cubeFaces;face++){const x=face%3*2/3-1;const y=face>2?0:-1;const coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);const fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}const planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes,_sizeLods,_sigmas};}function _createRenderTarget(params){const cubeUVRenderTarget=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping;cubeUVRenderTarget.texture.name='PMREM.cubeUv';cubeUVRenderTarget.scissorTest=true;return cubeUVRenderTarget;}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height);}function _getBlurShader(maxSamples){const weights=new Float32Array(maxSamples);const poleAxis=new Vector3(0,1,0);const shaderMaterial=new RawShaderMaterial({name:'SphericalGaussianBlur',defines:{'n':maxSamples},uniforms:{'envMap':{value:null},'samples':{value:1},'weights':{value:weights},'latitudinal':{value:false},'dTheta':{value:0},'mipInt':{value:0},'poleAxis':{value:poleAxis},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getEquirectShader(){const texelSize=new Vector2(1,1);const shaderMaterial=new RawShaderMaterial({name:'EquirectangularToCubeUV',uniforms:{'envMap':{value:null},'texelSize':{value:texelSize},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCubemapShader(){const shaderMaterial=new RawShaderMaterial({name:'CubemapToCubeUV',uniforms:{'envMap':{value:null},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCommonVertexShader(){return(/* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`);}function _getEncodings(){return(/* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`);}const LineStrip=0;const LinePieces=1;const NoColors=0;const FaceColors=1;const VertexColors=2;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(materials=[]){console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');return new BufferAttribute(array,itemSize).setUsage(DynamicDrawUsage);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nPath.prototype.fromPoints=function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);};//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nLoader.prototype.extractUrlBase=function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);};Loader.Handlers={add:function()/* regex, loader */{console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function()/* file */{console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}//\nBox2.prototype.center=function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box2.prototype.empty=function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box2.prototype.isIntersectionBox=function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box2.prototype.size=function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nBox3.prototype.center=function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box3.prototype.empty=function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box3.prototype.isIntersectionBox=function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box3.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};Box3.prototype.size=function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nSphere.prototype.empty=function(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();};//\nFrustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};//\nLine3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};//\nMatrix3.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix3.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);};Matrix3.prototype.multiplyVector3Array=function()/* a */{console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');};Matrix3.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);};Matrix3.prototype.applyToVector3Array=function()/* array, offset, length */{console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');};Matrix3.prototype.getInverse=function(matrix){console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nMatrix4.prototype.extractPosition=function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);};Matrix4.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix4.prototype.getPosition=function(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3().setFromMatrixColumn(this,3);};Matrix4.prototype.setRotationFromQuaternion=function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);};Matrix4.prototype.multiplyToArray=function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');};Matrix4.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector4=function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector3Array=function()/* a */{console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');};Matrix4.prototype.rotateAxis=function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);};Matrix4.prototype.crossVector=function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.translate=function(){console.error('THREE.Matrix4: .translate() has been removed.');};Matrix4.prototype.rotateX=function(){console.error('THREE.Matrix4: .rotateX() has been removed.');};Matrix4.prototype.rotateY=function(){console.error('THREE.Matrix4: .rotateY() has been removed.');};Matrix4.prototype.rotateZ=function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');};Matrix4.prototype.rotateByAxis=function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');};Matrix4.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);};Matrix4.prototype.applyToVector3Array=function()/* array, offset, length */{console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');};Matrix4.prototype.makeFrustum=function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);};Matrix4.prototype.getInverse=function(matrix){console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nPlane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};//\nQuaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Quaternion.prototype.inverse=function(){console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');return this.invert();};//\nRay.prototype.isIntersectionBox=function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Ray.prototype.isIntersectionPlane=function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);};Ray.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};//\nTriangle.prototype.area=function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();};Triangle.prototype.barycoordFromPoint=function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);};Triangle.prototype.midpoint=function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);};Triangle.prototypenormal=function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);};Triangle.prototype.plane=function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);};Triangle.barycoordFromPoint=function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);};Triangle.normal=function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);};//\nShape.prototype.extractAllPoints=function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);};Shape.prototype.extrude=function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);};Shape.prototype.makeGeometry=function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);};//\nVector2.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector2.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector2.prototype.lengthManhattan=function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector3.prototype.setEulerFromRotationMatrix=function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');};Vector3.prototype.setEulerFromQuaternion=function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');};Vector3.prototype.getPositionFromMatrix=function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);};Vector3.prototype.getScaleFromMatrix=function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);};Vector3.prototype.getColumnFromMatrix=function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);};Vector3.prototype.applyProjection=function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);};Vector3.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector3.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector3.prototype.lengthManhattan=function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector4.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector4.prototype.lengthManhattan=function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nObject3D.prototype.getChildByName=function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);};Object3D.prototype.renderDepth=function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');};Object3D.prototype.translate=function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);};Object3D.prototype.getWorldRotation=function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');};Object3D.prototype.applyMatrix=function(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Mesh.prototype.setDrawMode=function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');};Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn('THREE.PerspectiveCamera.setLens is deprecated. '+'Use .setFocalLength and .filmGauge for a photographic setup.');if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function()/* value */{console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});BufferAttribute.prototype.setDynamic=function(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};BufferAttribute.prototype.copyIndicesArray=function()/* indices */{console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},BufferAttribute.prototype.setArray=function()/* array */{console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nBufferGeometry.prototype.addIndex=function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);};BufferGeometry.prototype.addAttribute=function(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);};BufferGeometry.prototype.addDrawCall=function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);};BufferGeometry.prototype.clearDrawCalls=function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();};BufferGeometry.prototype.computeOffsets=function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');};BufferGeometry.prototype.removeAttribute=function(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);};BufferGeometry.prototype.applyMatrix=function(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});InterleavedBuffer.prototype.setDynamic=function(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};InterleavedBuffer.prototype.setArray=function()/* array */{console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nExtrudeGeometry.prototype.getArrays=function(){console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');};ExtrudeGeometry.prototype.addShapeList=function(){console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');};ExtrudeGeometry.prototype.addShape=function(){console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');};//\nScene.prototype.dispose=function(){console.error('THREE.Scene: .dispose() has been removed.');};//\nUniform.prototype.onUpdate=function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;};//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.');},set:function(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nWebGLRenderer.prototype.clearTarget=function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);};WebGLRenderer.prototype.animate=function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);};WebGLRenderer.prototype.getCurrentRenderTarget=function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();};WebGLRenderer.prototype.getMaxAnisotropy=function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();};WebGLRenderer.prototype.getPrecision=function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;};WebGLRenderer.prototype.resetGLState=function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();};WebGLRenderer.prototype.supportsFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');};WebGLRenderer.prototype.supportsHalfFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');};WebGLRenderer.prototype.supportsStandardDerivatives=function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');};WebGLRenderer.prototype.supportsCompressedTextureS3TC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');};WebGLRenderer.prototype.supportsCompressedTexturePVRTC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');};WebGLRenderer.prototype.supportsBlendMinMax=function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');};WebGLRenderer.prototype.supportsVertexTextures=function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;};WebGLRenderer.prototype.supportsInstancedArrays=function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');};WebGLRenderer.prototype.enableScissorTest=function(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);};WebGLRenderer.prototype.initMaterial=function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');};WebGLRenderer.prototype.addPrePlugin=function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');};WebGLRenderer.prototype.addPostPlugin=function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');};WebGLRenderer.prototype.updateShadowMap=function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');};WebGLRenderer.prototype.setFaceCulling=function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');};WebGLRenderer.prototype.allocTextureUnit=function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');};WebGLRenderer.prototype.setTexture=function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');};WebGLRenderer.prototype.setTexture2D=function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');};WebGLRenderer.prototype.setTextureCube=function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');};WebGLRenderer.prototype.getActiveMipMapLevel=function(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();};Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* value */{console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}},toneMappingWhitePoint:{get:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');return 1.0;},set:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* cullFace */{console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});function WebGLRenderTargetCube(width,height,options){console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');return new WebGLCubeRenderTarget(width,options);}//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nAudio.prototype.load=function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');const scope=this;const audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;};AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};CubeCamera.prototype.clear=function(renderer,color,depth,stencil){console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');return this.renderTarget.clear(renderer,color,depth,stencil);};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');const loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');const loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nconst SceneUtils={createMultiMaterialObject:function()/* geometry, materials */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},detach:function()/* child, parent, scene */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},attach:function()/* child, scene, parent */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');}if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}if(typeof window!=='undefined'){if(window.__THREE__){console.warn('WARNING: Multiple instances of Three.js being imported.');}else{window.__THREE__=REVISION;}}export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveAnimationBlendMode,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxGeometry as BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleGeometry as CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeGeometry as ConeBufferGeometry,ConeGeometry,CubeCamera,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CustomToneMapping,CylinderGeometry as CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DataUtils,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry as DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeGeometry as ExtrudeBufferGeometry,ExtrudeGeometry,FaceColors,FileLoader,FlatShading,Float16BufferAttribute,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontSide,Frustum,GLBufferAttribute,GLSL1,GLSL3,GammaEncoding,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronGeometry as IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheGeometry as LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalAnimationBlendMode,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronGeometry as OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricGeometry as ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneGeometry as PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronGeometry as PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingGeometry as RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeGeometry as ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereGeometry as SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,SplineCurve,SpotLight,SpotLightHelper,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronGeometry as TetrahedronBufferGeometry,TetrahedronGeometry,TextGeometry as TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusGeometry as TorusBufferGeometry,TorusGeometry,TorusKnotGeometry as TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry as TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGL1Renderer,WebGLCubeRenderTarget,WebGLMultipleRenderTargets,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding};","import * as THREE from 'three'\n\n// const scene = new THREE.Scene();\n// const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\n// const renderer = new THREE.WebGLRenderer();\n// renderer.setSize( window.innerWidth, window.innerHeight );\n// document.body.appendChild( renderer.domElement );\n\n// const geometry = new THREE.BoxGeometry();\n// const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// const cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n// camera.position.z = 5;\n// function animate(){\n//   requestAnimationFrame( animate );\n//   cube.rotation.x += 0.01;\n//   cube.rotation.y += 0.01;\n//   renderer.render( scene, camera );\n// }\n// animate();\n\n// const renderer = new THREE.WebGLRenderer();\n// renderer.setSize( window.innerWidth, window.innerHeight );\n// document.body.appendChild( renderer.domElement );\n\n// const camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\n// camera.position.set( 0, 0, 100 );\n// camera.lookAt( 0, 0, 0 );\n\n// const scene = new THREE.Scene();\n\n// const material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n\n// const points = [];\n// points.push( new THREE.Vector3( - 10, 0, 0 ) );\n// points.push( new THREE.Vector3( 0, 10, 0 ) );\n// points.push( new THREE.Vector3( 10, 0, 0 ) );\n\n// const geometry = new THREE.BufferGeometry().setFromPoints( points );\n\n// const line = new THREE.Line( geometry, material );\n\n// scene.add( line );\n// renderer.render( scene, camera );\n\n\n// function main() {\n//   // const canvas = document.querySelector('#c');\n//   // const renderer = new THREE.WebGLRenderer({canvas});\n//   const renderer = new THREE.WebGLRenderer();\n//   renderer.setSize( window.innerWidth / 2, window.innerHeight / 2 );\n//   document.body.appendChild( renderer.domElement );\n\n//   const fov = 75;\n//   const aspect = 2;  // the canvas default\n//   const near = 0.1;\n//   const far = 100;\n//   const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n//   camera.position.z = 10;\n//   // camera.position.x = -2;\n//   // camera.position.y = -3;\n//   camera.rotateOnWorldAxis(new THREE.Vector3(0, 0, 1), 90);\n\n//   const scene = new THREE.Scene();\n\n//   {\n//     const color = 0xFFFFFF;\n//     const intensity = 1;\n//     const light = new THREE.DirectionalLight(color, intensity);\n//     light.position.set(-1, 2, 4);\n//     scene.add(light);\n//   }\n\n//   // NOT A GOOD EXAMPLE OF HOW TO MAKE A CUBE!\n//   // Only trying to make it clear most vertices are unique\n//   const vertices = [\n//     // front\n//     { pos: [-1, -1,  1], norm: [ 0,  0,  1], uv: [0, 0], }, // 0\n//     { pos: [ 1, -1,  1], norm: [ 0,  0,  1], uv: [1, 0], }, // 1\n//     { pos: [-1,  1,  1], norm: [ 0,  0,  1], uv: [0, 1], }, // 2\n//     { pos: [ 1,  1,  1], norm: [ 0,  0,  1], uv: [1, 1], }, // 3\n//     // right\n//     { pos: [ 1, -1,  1], norm: [ 1,  0,  0], uv: [0, 0], }, // 4\n//     { pos: [ 1, -1, -1], norm: [ 1,  0,  0], uv: [1, 0], }, // 5\n//     { pos: [ 1,  1,  1], norm: [ 1,  0,  0], uv: [0, 1], }, // 6\n//     { pos: [ 1,  1, -1], norm: [ 1,  0,  0], uv: [1, 1], }, // 7\n//     // back\n//     { pos: [ 1, -1, -1], norm: [ 0,  0, -1], uv: [0, 0], }, // 8\n//     { pos: [-1, -1, -1], norm: [ 0,  0, -1], uv: [1, 0], }, // 9\n//     { pos: [ 1,  1, -1], norm: [ 0,  0, -1], uv: [0, 1], }, // 10\n//     { pos: [-1,  1, -1], norm: [ 0,  0, -1], uv: [1, 1], }, // 11\n//     // left\n//     { pos: [-1, -1, -1], norm: [-1,  0,  0], uv: [0, 0], }, // 12\n//     { pos: [-1, -1,  1], norm: [-1,  0,  0], uv: [1, 0], }, // 13\n//     { pos: [-1,  1, -1], norm: [-1,  0,  0], uv: [0, 1], }, // 14\n//     { pos: [-1,  1,  1], norm: [-1,  0,  0], uv: [1, 1], }, // 15\n//     // top\n//     { pos: [ 1,  1, -1], norm: [ 0,  1,  0], uv: [0, 0], }, // 16\n//     { pos: [-1,  1, -1], norm: [ 0,  1,  0], uv: [1, 0], }, // 17\n//     { pos: [ 1,  1,  1], norm: [ 0,  1,  0], uv: [0, 1], }, // 18\n//     { pos: [-1,  1,  1], norm: [ 0,  1,  0], uv: [1, 1], }, // 19\n//     // bottom\n//     { pos: [ 1, -1,  1], norm: [ 0, -1,  0], uv: [0, 0], }, // 20\n//     { pos: [-1, -1,  1], norm: [ 0, -1,  0], uv: [1, 0], }, // 21\n//     { pos: [ 1, -1, -1], norm: [ 0, -1,  0], uv: [0, 1], }, // 22\n//     { pos: [-1, -1, -1], norm: [ 0, -1,  0], uv: [1, 1], }, // 23\n//   ];\n//   const positions = [];\n//   const normals = [];\n//   const uvs = [];\n//   for (const vertex of vertices) {\n//     positions.push(...vertex.pos);\n//     normals.push(...vertex.norm);\n//     uvs.push(...vertex.uv);\n//   }\n\n//   const geometry = new THREE.BufferGeometry();\n//   const positionNumComponents = 3;\n//   const normalNumComponents = 3;\n//   const uvNumComponents = 2;\n//   geometry.setAttribute(\n//       'position',\n//       new THREE.BufferAttribute(new Float32Array(positions), positionNumComponents));\n//   geometry.setAttribute(\n//       'normal',\n//       new THREE.BufferAttribute(new Float32Array(normals), normalNumComponents));\n//   geometry.setAttribute(\n//       'uv',\n//       new THREE.BufferAttribute(new Float32Array(uvs), uvNumComponents));\n\n//   geometry.setIndex([\n//      0,  1,  2,   2,  1,  3,\n//      4,  5,  6,   6,  5,  7,\n//      8,  9, 10,  10,  9, 11,\n//     12, 13, 14,  14, 13, 15,\n//     16, 17, 18,  18, 17, 19,\n//     20, 21, 22,  22, 21, 23,\n//   ]);\n\n//   const loader = new THREE.TextureLoader();\n//   const texture = loader.load('https://threejsfundamentals.org/threejs/resources/images/star.png');\n\n//   function makeInstance(geometry, color, x) {\n//     const material = new THREE.MeshPhongMaterial({color, map: texture});\n\n//     const cube = new THREE.Mesh(geometry, material);\n//     scene.add(cube);\n\n//     cube.position.x = x;\n//     return cube;\n//   }\n\n//   const cubes = [\n//     makeInstance(geometry, 0x88FF88,  0),\n//     makeInstance(geometry, 0x8888FF, -4),\n//     makeInstance(geometry, 0xFF8888,  4),\n//   ];\n\n//   function resizeRendererToDisplaySize(renderer) {\n//     const canvas = renderer.domElement;\n//     const width = canvas.clientWidth;\n//     const height = canvas.clientHeight;\n//     const needResize = canvas.width !== width || canvas.height !== height;\n//     if (needResize) {\n//       renderer.setSize(width, height, false);\n//     }\n//     return needResize;\n//   }\n\n//   function render(time) {\n//     time *= 0.001;\n\n//     if (resizeRendererToDisplaySize(renderer)) {\n//       const canvas = renderer.domElement;\n//       camera.aspect = canvas.clientWidth / canvas.clientHeight;\n//       camera.updateProjectionMatrix();\n//     }\n\n//     cubes.forEach((cube, ndx) => {\n//       const speed = 1 + ndx * .1;\n//       const rot = time * speed;\n//       cube.rotation.x = rot;\n//       cube.rotation.y = rot;\n//     });\n\n//     renderer.render(scene, camera);\n\n//     requestAnimationFrame(render);\n//   }\n\n//   requestAnimationFrame(render);\n// }\n\n// main();\n\nfunction main(){\n  const canvas = document.querySelector('#canvas');\n  const renderer = new THREE.WebGLRenderer({canvas});\n\n  const fov = 75;\n  const aspect = 2;\n  const near = 0.1;\n  const far = 5;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.z = 2;\n\n  const scene = new THREE.Scene();\n\n  {\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n  }\n\n  const boxWidth = 1;\n  const boxHeight = 1;\n  const boxDepth = 1;\n  const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n\n  function makeInstance(geometry, color, x) {\n    const material = new THREE.MeshPhongMaterial({color});\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    cube.position.x = x;\n    return cube\n  }\n\n  const cubes = [\n    makeInstance(geometry, 0x44aa88, 0),\n    makeInstance(geometry, 0x8844aa, -2),\n    makeInstance(geometry, 0xaa8844, 2),\n  ];\n\n  function render(time){\n    time *= 0.001;\n    \n    cubes.forEach((cube, ndx) => {\n      const speed = 1 + ndx * .1;\n      const rot = time * speed;\n      cube.rotation.x = rot;\n      cube.rotation.y = rot;\n    })\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n}\nmain();"],"sourceRoot":""}